bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	27	None	replace
2	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	27	2	replace
3	[BUG]  [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	27	2	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	27	1	replace
5	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	27	1	replace
6	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	27	2	replace
7	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    [Delete]    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	27	2	replace
8	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
9	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2  ==  1)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
10	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2  ==  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
11	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2  >=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
12	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2  >>  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
13	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2!=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
14	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  If  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  If  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    If  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  	non-compiled	[CE]  ';'  expected	105	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  ==  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
16	[BUG]  [BUGGY]  if(offset  ==  0  &&  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  >=  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
18	[BUG]  [BUGGY]  if(offset  >=  0  &&  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset!=  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
20	[BUG]  [BUGGY]  if(offset!=  0  &&  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  &&  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=  0  &&  input.available()  ==  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	179	1	replace
21	[BUG]  [BUGGY]  if(input.length()  %  2  ==  0  ||  offset.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  %  2  ==  0  ||  offset.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  %  2  ==  0  ||  offset.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
22	[BUG]  [BUGGY]  if(input.length()  >  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  >  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  >  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
23	[BUG]  [BUGGY]  if(input.length()  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
24	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2!=  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2!=  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
25	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2  ==  0  ||  input.length()  <  =  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
26	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2  ==  0  ||  input.length()  >=  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
27	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2!=  1)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
28	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  >>  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  >>  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2  >>  1)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
29	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  >=  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  >=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2  >=  1)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
30	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  ==  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  ==  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2  ==  1)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
31	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  ==  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2  [Delete]  1)||(offset  ==  0))  {	  	non-compiled	[CE]  ')'  expected	162	None	add
32	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  [BUGGY]  1)||(offset  ==  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2  [BUGGY]  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2  [BUGGY]  1)||(offset  ==  0))  {	  	non-compiled	[CE]  ')'  expected	162	None	add
33	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	213	None	replace
34	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)&&(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)&&(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	213	None	replace
35	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0)||(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
36	[BUG]  [BUGGY]  if((  input.length  %  2  >=  0)||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  >=  0)||(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	213	None	replace
37	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)&&(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)&&(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	213	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  ==  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  AssertionFailedError  	164	1	replace
39	[BUG]  [BUGGY]  if  (offset  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  AssertionFailedError  	164	1	replace
40	[BUG]  [BUGGY]  if  (read  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  <  =  0)  {	  if    (offset    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
41	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  >=  input.length))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  >=  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  >=  input.length))  {	  if    (offset    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
42	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset!=  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  IOException  	164	2	replace
43	[BUG]  [BUGGY]  if  (offset!=  0)  {  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset!=  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  IOException  	164	2	replace
44	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  ==  input.length))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  ==  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  ==  input.length))  {	  if    (offset    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
45	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  >=  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  IOException  	164	2	replace
46	[BUG]  [BUGGY]  if  (offset  >=  0)  {  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  0)  {	  if    (offset    <    =    0)    {    	compilable	  [FE]  IOException  	164	2	replace
47	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
48	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null  ||  input.available()!=  0)  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	35	2	replace
49	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()!=  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()!=  0)  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	35	2	replace
50	[BUG]  [BUGGY]  if(input  ==  null  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.isEnabled())  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
51	[BUG]  [BUGGY]  if(input  ==  null  ||  input.isAssignableFrom(input))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.isAssignableFrom(input))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.isAssignableFrom(input))  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
52	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  AssertionFailedError  	127	1	replace
54	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  1))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  AssertionFailedError  	127	1	replace
55	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)||(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
56	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >  1))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
57	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  >=  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
58	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  1))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >=  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
59	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  ==  input.length))  {  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  ==  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  ==  input.length))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	non-compiled	[CE]  cannot  find  symbol  length	127	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  ==  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  ==  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  AssertionFailedError  	127	1	replace
61	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  ==  1))  {  [FE]  AssertionFailedError  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  ==  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  ==  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  AssertionFailedError  	127	1	replace
62	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  input.length))  {  [CE]  cannot  find  symbol  length  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >=  input.length))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	non-compiled	[CE]  cannot  find  symbol  length	127	None	replace
63	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	211	None	add
64	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	211	None	add
65	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	211	None	add
66	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  >>  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	211	None	add
67	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  output.available()  >  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  output.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  output.available()  >  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	211	None	add
68	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  [Delete]  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  [Delete]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2  [Delete]  0))  {	  	non-compiled	[CE]  ')'  expected	211	None	add
69	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  [BUGGY]  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  if((  input.available()  >  0)||(offset  %  2  [BUGGY]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    if((  input.available()  >  0)||(offset  %  2  [BUGGY]  0))  {	  	non-compiled	[CE]  ')'  expected	211	None	add
70	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  %  2!=  1)||(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
71	[BUG]  [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  %  2!=  1)||(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  >=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  >=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	90	1	replace
73	[BUG]  [BUGGY]  if  ((  offset  %  2  >=  1)||(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  >=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  >=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	90	1	replace
74	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  1)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  1)||(offset  >  1))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
75	[BUG]  [BUGGY]  if((  offset  %  2!=  1)||(offset  >  1))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  1)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  1)||(offset  >  1))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
76	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  %  2!=  1)||(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	161	2	replace
77	[BUG]  [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  %  2!=  1)||(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	161	2	replace
78	[BUG]  [BUGGY]  if  ((  offset  %  2  >>  1)||(offset  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  >>  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  >>  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	161	None	replace
79	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null  ||  input.available()  >=  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  IOException  	40	2	replace
80	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  >=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  >=  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  IOException  	40	2	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  <  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
82	[BUG]  [BUGGY]  if(input.available()  <  0)  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
83	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  >=  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    >=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	19	2	replace
84	[BUG]  [BUGGY]  if((  offset  %  2  >=  0)||(offset  >  0))  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >=  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    >=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	19	2	replace
85	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  1))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    >=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	19	2	replace
86	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    >=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	19	2	replace
87	[BUG]  [BUGGY]  if((  offset  %  2  >>  0)||(offset  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >>  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >>  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    >=    0)||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	19	None	replace
88	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  ==  0)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  ==  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
90	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  ==  0)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
91	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2!=  0)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2!=  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2!=  0)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
92	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  >=  0)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  >=  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  >=  0)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
93	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {	  	non-compiled	[CE]  ')'  expected	3	None	add
94	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {	  	non-compiled	[CE]  ')'  expected	3	None	add
95	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2!=  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2!=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2!=  0)||(offset  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
96	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  >=  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  >=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2  >=  0)||(offset  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
97	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  >>  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  >>  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2  >>  0)||(offset  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
98	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2  ==  0)||(offset  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
99	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  [Delete]  0)||(offset  >  1))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  [Delete]  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2  [Delete]  0)||(offset  >  1))  {	  	non-compiled	[CE]  ')'  expected	126	None	add
100	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  [BUGGY]  0)||(offset  >  1))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2  [BUGGY]  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2  [BUGGY]  0)||(offset  >  1))  {	  	non-compiled	[CE]  ')'  expected	126	None	add
101	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  If((  offset  %  2!=  0)||(offset  >  1))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  If((  offset  %  2!=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    If((  offset  %  2!=  0)||(offset  >  1))  {	  	non-compiled	[CE]  ';'  expected	126	None	add
102	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
103	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
104	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
105	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  in.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  in.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  in.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
106	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  output.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  output.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  output.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
107	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  If((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  If((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    If((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	58	None	add
108	[BUG]  [BUGGY]  if((  input.available())||(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	50	None	replace
109	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  %  2  ==  1))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
110	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  1))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2  ==  1))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
111	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  ==  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
112	[BUG]  [BUGGY]  if((  input.available()  ==  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  ==  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
113	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  4  ==  0)||(offset  %  4  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  4  ==  0)||(offset  %  4  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
114	[BUG]  [BUGGY]  if((  offset  %  4  ==  0)||(offset  %  4  ==  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  4  ==  0)||(offset  %  4  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  4  ==  0)||(offset  %  4  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
115	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
116	[BUG]  [BUGGY]  if((  input.available()  +  offset)||(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  offset)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  offset)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	195	None	replace
117	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
118	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
119	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
120	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
121	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >=  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
122	[BUG]  [BUGGY]  if((  input.available()  >=  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >=  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
123	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
124	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
125	[BUG]  [BUGGY]  if((  input.available()  >>  0)&&(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >>  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >>  0)&&(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	195	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    [Delete]    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
127	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    [Delete]    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
128	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >=  input.length))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >=  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  >=  input.length))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  &&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  &&(offset  >  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
130	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  &&(offset  >  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  &&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  &&(offset  >  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
131	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  input.length))  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  <  input.length))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
132	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  <  =  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
133	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  ==  input.length))  {  [CE]  cannot  find  symbol  length  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  ==  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  ==  input.length))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
134	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  >  1))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
135	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  1))  {  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  >  1))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
136	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(read()  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    1)    {    	compilable	  [FE]  IOException  	117	2	replace
137	[BUG]  [BUGGY]  if(read()  ==  0)  {  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read()  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    1)    {    	compilable	  [FE]  IOException  	117	2	replace
138	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
139	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
140	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
141	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	73	None	replace
142	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0,  len  =  input.length;  i  <  len;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
143	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  read;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  read;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  read;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
144	[BUG]  [BUGGY]  if  (offset  <  1)  {  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
145	[BUG]  [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.available();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.available();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    int  offset  =  input.available();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
146	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.read();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.read();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  offset  =  input.read();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
147	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.readInput();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.readInput();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  offset  =  input.readInput();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
148	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.available();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.available();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  offset  =  input.available();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
149	[BUG]  [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.length();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.length();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    int  offset  =  input.length();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
150	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.getInputStream();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  offset  =  input.getInputStream();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  offset  =  input.getInputStream();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
151	[BUG]  [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.read();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  int  offset  =  input.read();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    int  offset  =  input.read();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
152	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  ==  0)  {	  if    (offset    %    2    ==    1)    {    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
153	[BUG]  [BUGGY]  if(offset  >  0)  {  int  offset  =  offset  %  2;  [CE]  variable  offset  might  not  have  been  initialized  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0)  {  int  offset  =  offset  %  2;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0)  {  int  offset  =  offset  %  2;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  variable  offset  might  not  have  been  initialized	200	None	replace
154	[BUG]  [BUGGY]  if  (offset  >=  0)  {  int  offset  =  offset  %  2;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  int  offset  =  offset  %  2;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  0)  {  int  offset  =  offset  %  2;  }	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	200	None	replace
155	[BUG]  [BUGGY]  if  (offset  ==  0)  {  int  offset  =  offset  %  2;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0)  {  int  offset  =  offset  %  2;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0)  {  int  offset  =  offset  %  2;  }	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	200	None	replace
156	[BUG]  [BUGGY]  if(offset  ==  0)  {  int  offset  =  offset  %  2;  [CE]  variable  offset  might  not  have  been  initialized  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0)  {  int  offset  =  offset  %  2;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0)  {  int  offset  =  offset  %  2;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  variable  offset  might  not  have  been  initialized	200	None	replace
157	[BUG]  [BUGGY]  if(offset  >=  0)  {  int  offset  =  offset  %  2;  [CE]  variable  offset  might  not  have  been  initialized  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0)  {  int  offset  =  offset  %  2;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0)  {  int  offset  =  offset  %  2;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  variable  offset  might  not  have  been  initialized	200	None	replace
158	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
159	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  InputStream  offset  =  input.read();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  InputStream  offset  =  input.read();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    InputStream  offset  =  input.read();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
160	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  =  input.length();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  =  input.length();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    int  offset  =  input.length();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
161	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  not  a  statement  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  not  a  statement	76	None	add
162	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  If  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  If  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    If  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
163	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  if  (offset  %  2  ==  0  ||  output.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  if  (offset  %  2  ==  0  ||  output.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    if  (offset  %  2  ==  0  ||  output.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
164	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
165	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2  >=  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
166	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2  >>  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
167	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
168	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)&&(input.available()  >  0))  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2  [Delete]  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	56	None	add
169	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  If((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  If((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    If((  input.available()  %  2!=  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	56	None	add
170	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)&&(input.available()  >  0))  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  input.available()  %  2  [BUGGY]  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	56	None	add
171	[BUG]  [BUGGY]  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
172	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
173	[BUG]  [BUGGY]  InputStream  input  =  input.available();  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
174	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >>  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >>  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >>  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
175	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
176	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i!=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
177	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2  ==  0)  {	  if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	136	2	replace
178	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2  ==  0)  {	  if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	136	2	replace
179	[BUG]  [BUGGY]  if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ')'  expected	136	None	replace
180	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  cannot  find  symbol  length	168	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	168	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  not  a  statement	168	None	replace
183	[BUG]  [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  not  a  statement	168	None	replace
184	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  output[i];  }  [CE]  cannot  find  symbol  length  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  output[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  output[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  cannot  find  symbol  length	168	None	replace
185	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  0  ||  offset  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    *    2    ==    0)    {    	compilable	  [FE]  IOException  	177	2	replace
186	[BUG]  [BUGGY]  if  (offset  <  0  ||  offset  >  0)  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0  ||  offset  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    *    2    ==    0)    {    	compilable	  [FE]  IOException  	177	2	replace
187	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  ==  0  ||  offset  >=  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    *    2    ==    0)    {    	compilable	  [FE]  IOException  	177	2	replace
188	[BUG]  [BUGGY]  if  (offset  ==  0  ||  offset  >=  0)  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0  ||  offset  >=  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    *    2    ==    0)    {    	compilable	  [FE]  IOException  	177	2	replace
189	[BUG]  [BUGGY]  if  ((  offset  +  1)  >=  input.length)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  +  1)  >=  input.length)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  +  1)  >=  input.length)  {	  if    (offset    >=    1)    {    	non-compiled	[CE]  cannot  find  symbol  length	101	None	replace
190	[BUG]  [BUGGY]  read(input.available())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input.available())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input.available())  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
191	[BUG]  [BUGGY]  While(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  While(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	While(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
192	[BUG]  [BUGGY]  read(input.available()  -  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input.available()  -  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input.available()  -  1)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
193	[BUG]  [BUGGY]  while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	204	None	replace
194	[BUG]  [BUGGY]  while(input.available()  <  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  <  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  <  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	204	None	replace
195	[BUG]  [BUGGY]  [FE]  IOException  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	while(input.available()  >  0)  {	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IOException  	204	2	replace
196	[BUG]  [BUGGY]  while(input.available()  >  0)  {  [FE]  IOException  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IOException  	204	2	replace
197	[BUG]  [BUGGY]  while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  throw  new  IllegalStateException( " ");	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	204	None	replace
198	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
199	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
200	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
201	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2!=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
202	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  >=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
203	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset  [Delete]  0))  {	  	non-compiled	[CE]  ')'  expected	1	None	add
204	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset  [BUGGY]  0))  {	  	non-compiled	[CE]  ')'  expected	1	None	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  >=  0))  {	  if((    offset    %    2!=    0)||(offset    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	125	1	replace
206	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  >=  0))  {	  if((    offset    %    2!=    0)||(offset    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	125	1	replace
207	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)||(offset  >=  0))  {	  if((    offset    %    2!=    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	125	2	replace
208	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >=  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(offset  >=  0))  {	  if((    offset    %    2!=    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	125	2	replace
209	[BUG]  [BUGGY]  If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
210	[BUG]  [BUGGY]  If  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
211	[BUG]  [BUGGY]  If  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
212	[BUG]  [BUGGY]  If  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
213	[BUG]  [BUGGY]  int  offset  =  input.length();  if(offset  ==  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.length();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.length();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
214	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
215	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
216	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.length();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
217	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >=  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
218	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.length();  if(offset!=  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
219	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2!=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
220	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2!=  0)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
221	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >>  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >>  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2  >>  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
222	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2  >=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
223	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2  ==  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
224	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2!=  0)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
225	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  if((  offset  %  2  >=  0)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    if((  offset  %  2  >=  0)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
226	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  <  =  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
227	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  <  =  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
228	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	compilable	  [FE]  IOException  	7	2	replace
229	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  ==  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	compilable	  [FE]  IOException  	7	2	replace
230	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)&&(offset  <  =  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
231	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  <  =  1))  {  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  <  =  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  <  =  1))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
232	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
233	[BUG]  [BUGGY]  if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
234	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
235	[BUG]  [BUGGY]  if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
236	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
237	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
238	[BUG]  [BUGGY]  InputStream  offset  =  input.readInput();  if(offset  ==  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.readInput();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.readInput();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
239	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  if(input!=  null)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.readInput();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.readInput();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
240	[BUG]  [BUGGY]  InputStream  offset  =  input.readInput();  if(offset!=  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.readInput();  if(offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.readInput();  if(offset!=  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
241	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  if(input  ==  null)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.readInput();  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.readInput();  if(input  ==  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
242	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  <  =  0))  {	  if((    offset    %    2!=    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
243	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(offset  <  =  0))  {	  if((    offset    %    2!=    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
244	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  <  =  1))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  <  =  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  <  =  1))  {	  if((    offset    %    2!=    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
245	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    if(offset  >  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	184	None	add
246	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  If(offset  >  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  If(offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    If(offset  >  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	184	None	add
247	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    if(offset  >  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	184	None	add
248	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    if(offset  >  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	184	None	add
249	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  output.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  output.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    if(offset  >  0  ||  output.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	184	None	add
250	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  InputStream  offset  >  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  InputStream  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    InputStream  offset  >  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	184	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available())  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	215	1	replace
252	[BUG]  [BUGGY]  if((  input.available())  ==  0)  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	215	1	replace
253	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
254	[BUG]  [BUGGY]  if((  input.available()  %  2)  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
255	[BUG]  [BUGGY]  if((  input.length  %  2)  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	215	None	replace
256	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read())  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read())  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
257	[BUG]  [BUGGY]  if((  input.read())  ==  0)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read())  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read())  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	215	1	replace
259	[BUG]  [BUGGY]  if((  input.available()  *  2)  ==  0)  {  [FE]  AssertionFailedError  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	215	1	replace
260	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0)  {  [CE]  cannot  find  symbol  length  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0)  {	  if((    offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	215	None	replace
261	[BUG]  [BUGGY]  if((  input.size()  %  2)  ==  0)  {  [CE]  cannot  find  symbol  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.size()  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.size()  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
262	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  ==  0  ||  offset  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    1    ==    0)    {    	compilable	  [FE]  IOException  	84	2	replace
263	[BUG]  [BUGGY]  if  (offset  ==  0  ||  offset  >  0)  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0  ||  offset  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    1    ==    0)    {    	compilable	  [FE]  IOException  	84	2	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  ==  0  ||  offset  ==  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    1    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
265	[BUG]  [BUGGY]  if  (offset  ==  0  ||  offset  ==  0)  {  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0  ||  offset  ==  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    1    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
266	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
267	[BUG]  [BUGGY]  if(input.available()  >  0  ||  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
268	[BUG]  [BUGGY]  if(input.available()  <  =  0  ||  input.isVersion())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0  ||  input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
269	[BUG]  [BUGGY]  if(input.available()!=  0  ||  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
270	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
271	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
272	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
273	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
274	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
275	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	54	None	add
276	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  in.available()  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  in.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  in.available()  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
277	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	54	None	add
278	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  %  2  ==  1)||(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  IOException  	108	2	replace
279	[BUG]  [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset!=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  %  2  ==  1)||(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  IOException  	108	2	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)||(offset  ==  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	108	1	replace
281	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)||(offset  ==  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	108	1	replace
282	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
283	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
284	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  >>  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
285	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
286	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  [Delete]  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	60	None	add
287	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2  [BUGGY]  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	60	None	add
288	[BUG]  [BUGGY]  if(input.available()  >  0)  {  if(input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  if(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    if(input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
289	[BUG]  [BUGGY]  if(input.available()  >  0)  {  If(input.available()  >  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  If(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    If(input.available()  >  0)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
290	[BUG]  [BUGGY]  if(input.available()  >  0)  {  if(in.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  if(in.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    if(in.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
291	[BUG]  [BUGGY]  if(input.available()  >  0)  {  if(Input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  if(Input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    if(Input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
292	[BUG]  [BUGGY]  if  (offset  >=  1)  {  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
293	[BUG]  [BUGGY]  if  (offset  >=  1)  {  if  (offset!=  1)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  if  (offset!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    if  (offset!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
294	[BUG]  [BUGGY]  if  (offset  >=  1)  {  if  (offset  >>  1)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  if  (offset  >>  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    if  (offset  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
295	[BUG]  [BUGGY]  if  (offset  >=  1)  {  if  (offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    if  (offset  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
296	[BUG]  [BUGGY]  if  (offset  >=  1)  {  If  (offset  >=  1)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  If  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    If  (offset  >=  1)  {	  	non-compiled	[CE]  ';'  expected	100	None	add
297	[BUG]  [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.length();  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.length();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    int  offset  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
298	[BUG]  [BUGGY]  int  offset  =  input.available();  [CE]  invalid  method  declaration;  return  type  required  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.available();	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	217	None	replace
299	[BUG]  [BUGGY]  Integer  offset  =  input.available();  [CE]  invalid  method  declaration;  return  type  required  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Integer  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Integer  offset  =  input.available();	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	217	None	replace
300	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2!=  1)  {  int  offset  =  input.available();  }	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	217	None	replace
301	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.length();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.length();  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2!=  1)  {  int  offset  =  input.length();  }	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	217	None	replace
302	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  }	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	217	None	replace
303	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  <  =  0)  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
304	[BUG]  [BUGGY]  If  (offset  ==  0)  {  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  ==  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
305	[BUG]  [BUGGY]  If  (offset!=  0)  {  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset!=  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
306	[BUG]  [BUGGY]  If  (offset  <  0)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  <  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
307	[BUG]  [BUGGY]  If  (offset  >=  0)  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  >=  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
308	[BUG]  [BUGGY]  If  (input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (input.available()  ==  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
309	[BUG]  [BUGGY]  If  (offset  >>  0)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  >>  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
310	[BUG]  [BUGGY]  If  (offset  {  0)  {  [CE]  ')'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  {  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ')'  expected	80	None	replace
311	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  ==  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    if  (offset  %  2  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
312	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  If  (offset  %  2  ==  2)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  If  (offset  %  2  ==  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    If  (offset  %  2  ==  2)  {	  	non-compiled	[CE]  ';'  expected	87	None	add
313	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  >=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  >=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    if  (offset  %  2  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
314	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2!=  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2!=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    if  (offset  %  2!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
315	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  if  (offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
316	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()  ==  0  ||  offset  %  2!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
317	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()  ==  0  ||  offset  %  2  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
318	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  If(input.available()  ==  0  ||  offset  %  2!=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  If(input.available()  ==  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    If(input.available()  ==  0  ||  offset  %  2!=  0)  {	  	non-compiled	[CE]  ';'  expected	158	None	add
319	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  ==  0  ||  offset  %  2  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()  ==  0  ||  offset  %  2  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
320	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  {  0  ||  offset  %  2!=  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  {  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()  {  0  ||  offset  %  2!=  0)  {	  	non-compiled	[CE]  ')'  expected	158	None	add
321	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()!=  0  ||  offset  %  2!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
322	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0)    {    if(input.available()  >=  0  ||  offset  %  2!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	158	None	add
323	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
324	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
325	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
326	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  >=  0)||(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  >=  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  >=  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
327	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  %  2)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  ==  0)||(offset  %  2)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
328	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  >>  0)||(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  >>  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  >>  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
329	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
330	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
331	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
332	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  >>  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset  >>  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset  >>  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
333	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  If(offset!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  If(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    If(offset!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	186	None	add
334	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset!=  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
335	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  ||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  ||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  ||(input.available()  >  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
336	[BUG]  [BUGGY]  if((  input.available())  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())  ==  0)||(offset  >  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
337	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  ||(offset  >=  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
338	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  ||(offset!=  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
339	[BUG]  [BUGGY]  if((  input.length  %  2)  ==  0)  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)  ==  0)  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)  ==  0)  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
340	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  ||(offset  ==  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
341	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %  2)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
342	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
343	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %  2)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
344	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %  2)  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
345	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %)  2)!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %)  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %)  2)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
346	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  offset  %  2)  [BUGGY]  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  offset  %  2)  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	196	None	add
347	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    If((  offset  %  2)!=  0)  {	  	non-compiled	[CE]  ';'  expected	196	None	add
348	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
349	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input!=  null)  {  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
350	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
351	[BUG]  [BUGGY]  if(input.available()  >  0  ||  input!=  null)  {  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
352	[BUG]  [BUGGY]  if(input.available()  <  =  0  ||  input!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
353	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
354	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  input!=  null)  {  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
355	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
356	[BUG]  [BUGGY]  if(input.available()!=  0  ||  input!=  null)  {  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  input!=  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  IOException  	145	2	replace
357	[BUG]  [BUGGY]  InputStream  input  =  input.available();  if(input!=  null)  {  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	175	None	replace
358	[BUG]  [BUGGY]  InputStream  input  =  input.available();  if(input  ==  null)  {  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  if(input  ==  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	175	None	replace
359	[BUG]  [BUGGY]  InputStream  offset  =  input.available();  if  (offset  ==  0)  {  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.available();  if  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.available();  if  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	175	None	replace
360	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
361	[BUG]  [BUGGY]  if(input.available()  >  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
362	[BUG]  [BUGGY]  if(input.available()!=  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
363	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
364	[BUG]  [BUGGY]  if(input.available()  <  =  0  ||  input.isEnabled())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0  ||  input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
365	[BUG]  [BUGGY]  if(input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
366	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
367	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  &&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  &&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	194	1	replace
369	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  &&(offset  %  2  ==  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  &&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  &&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	194	1	replace
370	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  &&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  &&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
371	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  &&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  &&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  &&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
372	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available())!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
373	[BUG]  [BUGGY]  if((  input.available())!=  0  ||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
374	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0  ||(input.length  %  2  ==  0))  {  [CE]  cannot  find  symbol  length  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0  ||(input.length  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0  ||(input.length  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	194	None	replace
375	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
376	[BUG]  [BUGGY]  if((  input.available()  %  2)!=  0  ||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
377	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(input.length  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(input.length  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(input.length  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	216	None	replace
378	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(read  >  0))  {  [CE]  cannot  find  symbol  length  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(read  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(read  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	216	None	replace
379	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(i  >  0))  {  [CE]  cannot  find  symbol  length  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(i  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(i  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	216	None	replace
380	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(array.length  >  0))  {  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(array.length  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(array.length  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	216	None	replace
381	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(value  >  0))  {  [CE]  cannot  find  symbol  length  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(value  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(value  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	216	None	replace
382	[BUG]  [BUGGY]  if(read(1)  ==  0)  {  [CE]  no  suitable  method  found  for  read(int)  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read(1)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read(1)  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()    {    0)    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	118	None	replace
383	[BUG]  [BUGGY]  if(read  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()    {    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	118	None	replace
384	[BUG]  [BUGGY]  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	140	None	replace
385	[BUG]  [BUGGY]  if(input.available()  [Delete]  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  [Delete]  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  [Delete]  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ')'  expected	140	None	replace
386	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
387	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
388	[BUG]  [BUGGY]  If  ((  offset  %  2!=  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2!=  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	96	None	replace
389	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	96	None	replace
390	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  >=  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  >=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2  >=  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	96	None	replace
391	[BUG]  [BUGGY]  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	96	None	replace
392	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >=  input.length))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >=  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  >=  input.length))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	152	None	replace
393	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  input.length))  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  input.length))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  <  input.length))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	152	None	replace
394	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(input.available()  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
395	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(input.available()  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(input.available()  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
396	[BUG]  [BUGGY]  if((  input.length  %  2)  ==  0  ||(input.length  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)  ==  0  ||(input.length  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)  ==  0  ||(input.length  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	152	None	replace
397	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  <  =  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
398	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available())  ==  0  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
399	[BUG]  [BUGGY]  if((  input.available())  ==  0  ||(offset  >  0))  {  [FE]  IOException  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())  ==  0  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
400	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  <  0  ||  input.available()  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    <    0)    {    	compilable	  [FE]  IOException  	116	2	replace
401	[BUG]  [BUGGY]  if(input.available()  <  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  0  ||  input.available()  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    <    0)    {    	compilable	  [FE]  IOException  	116	2	replace
402	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
403	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
404	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
405	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
406	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
407	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
408	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
409	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
410	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2  ==  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
411	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2!=  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2!=  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
412	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  >=  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  >=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2  >=  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
413	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  If((  offset  %  2  ==  0)&&(offset  >  0))  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  If((  offset  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    If((  offset  %  2  ==  0)&&(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
414	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  >>  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  >>  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2  >>  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
415	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(Offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(Offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2  ==  0)&&(Offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
416	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	170	None	replace
417	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [CE]  cannot  find  symbol  length  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  cannot  find  symbol  length	170	None	replace
418	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	170	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	170	None	replace
420	[BUG]  [BUGGY]  InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	153	None	replace
421	[BUG]  [BUGGY]  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	153	None	replace
422	[BUG]  [BUGGY]  InputStream  offset  =  input.available();  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	153	None	replace
423	[BUG]  [BUGGY]  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
424	[BUG]  [BUGGY]  InputStream  offset  :  input.available())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  :  input.available())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  :  input.available())  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	153	None	replace
425	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  %  2!=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	compilable	  [FE]  IOException  	163	2	replace
426	[BUG]  [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  %  2!=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	compilable	  [FE]  IOException  	163	2	replace
427	[BUG]  [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2)  ==  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
428	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2!=  2)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2!=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    if  (offset  %  2!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
429	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  ==  2)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  ==  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    if  (offset  %  2  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
430	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  >=  2)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  >=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    if  (offset  %  2  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
431	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  >>  2)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  if  (offset  %  2  >>  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    if  (offset  %  2  >>  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
432	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2!=  2)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2!=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    int  offset  =  input.available();  if  (offset  %  2!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
433	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    int  offset  =  input.available();  if  (offset  %  2  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
434	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2  >=  2)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  if  (offset  %  2  >=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    int  offset  =  input.available();  if  (offset  %  2  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
435	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
436	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  If(offset  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  If(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    If(offset  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	182	None	add
437	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
438	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
439	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
440	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
441	[BUG]  [BUGGY]  if((  input.available())||(offset  %  2)  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	199	None	replace
442	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
443	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
444	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(input.length  %  2)  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(input.length  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(input.length  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	199	None	replace
445	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
446	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
447	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
448	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
449	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
450	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  If(input  ==  null  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  If(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    If(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
451	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
452	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
453	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
454	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
455	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
456	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  If(input!=  null  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  If(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    If(input!=  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
457	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  >=  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  >=  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input  >=  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
458	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
459	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
460	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.available()  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.available()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
461	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  input.available()!=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
462	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.available()!=  0)  {  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.available()!=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
463	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  input.available()  >=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
464	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.available()  >=  0)  {  [FE]  IOException  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.available()  >=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
465	[BUG]  [BUGGY]  if(offset  >>  0  ||  input.available()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >>  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >>  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
466	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  >  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
467	[BUG]  [BUGGY]  if  (offset  >  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
468	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
469	[BUG]  [BUGGY]  if  (offset  <  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
470	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  0  ||  input.available()  >  1)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
471	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  1)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  0  ||  input.available()  >  1)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
472	[BUG]  [BUGGY]  if  (offset  ==  1)  {  if  (offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    if  (offset  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
473	[BUG]  [BUGGY]  if  (offset  ==  1)  {  If  (offset  ==  1)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  If  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    If  (offset  ==  1)  {	  	non-compiled	[CE]  ';'  expected	98	None	add
474	[BUG]  [BUGGY]  if  (offset  ==  1)  {  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
475	[BUG]  [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.length();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.length();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    int  offset  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
476	[BUG]  [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.available();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    int  offset  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
477	[BUG]  [BUGGY]  if  (offset  ==  1)  {  if  (offset!=  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  if  (offset!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    if  (offset!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
478	[BUG]  [BUGGY]  if  (offset  ==  1)  {  InputStream  offset  =  input.available();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  InputStream  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    InputStream  offset  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
479	[BUG]  [BUGGY]  if  (offset  ==  1)  {  InputStream  offset  =  input.read();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  InputStream  offset  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    InputStream  offset  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
480	[BUG]  [BUGGY]  if  (read  >  0)  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  >  0)  {	  if    (offset    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	166	None	replace
481	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
482	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
483	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
484	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
485	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
486	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  [Delete]  0)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  [Delete]  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	37	None	add
487	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
488	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
489	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
490	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
491	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
492	[BUG]  [BUGGY]  if((  input.available()  >  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
493	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input  ==  null)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
494	[BUG]  [BUGGY]  if((  input  ==  null)||(input.available()  >  0))  {  [FE]  IOException  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  ==  null)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
495	[BUG]  [BUGGY]  [FE]  IOException  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
496	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
497	[BUG]  [BUGGY]  [FE]  IOException  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
498	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
499	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  2))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
500	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  2))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  2))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
501	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  input.available()  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
502	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2!=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  input.available()  %  2!=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
503	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2  >=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2  >=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  input.available()  %  2  >=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
504	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  output.available()  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  output.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  output.available()  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
505	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  in.available()  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  in.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  in.available()  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
506	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  If((  input.available()  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  If((  input.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    If((  input.available()  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
507	[BUG]  [BUGGY]  InputStream  input  =  getInput();  if(input!=  null)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getInput();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getInput();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    getInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
508	[BUG]  [BUGGY]  InputStream  input  =  getInput();  if(input  ==  null)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getInput();  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getInput();  if(input  ==  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    getInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
509	[BUG]  [BUGGY]  InputStream  input  =  getInput();  if(input.available()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getInput();  if(input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getInput();  if(input.available()  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    getInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
510	[BUG]  [BUGGY]  Input  input  =  getInput();  if(input!=  null)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Input  input  =  getInput();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Input  input  =  getInput();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    getInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
511	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
512	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  >=  1)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
513	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >=  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
514	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
515	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  <  0)  {  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  <  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
516	[BUG]  [BUGGY]  [FE]  IOException  [FE]                              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if  (offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	int  offset  =  input.available();  if  (offset  >=  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	compilable	  [FE]  IOException  	47	2	replace
517	[BUG]  [BUGGY]  int  offset  =  input.available();  if  (offset  >=  0)  {  [FE]  IOException  [FE]                              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if  (offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.available();  if  (offset  >=  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	compilable	  [FE]  IOException  	47	2	replace
518	[BUG]  [BUGGY]  If  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
519	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
520	[BUG]  [BUGGY]  if((  input  ==  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  ==  null)||(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
521	[BUG]  [BUGGY]  If  ((  input.available()  >  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  input.available()  >  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  input.available()  >  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
522	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
523	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2!=  0)&&(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
524	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)&&(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
525	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  >=  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  >=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  >=  0)&&(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
526	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)&&(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
527	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  If((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  If((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    If((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
528	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  >>  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  >>  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  >>  0)&&(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
529	[BUG]  [BUGGY]  if  (offset  ||  offset  %  2  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ||  offset  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
530	[BUG]  [BUGGY]  if  (input  ||  offset  %  2  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (input  ||  offset  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
531	[BUG]  [BUGGY]  if  (pInput  ||  offset  %  2  ==  0)  {  [CE]  cannot  find  symbol  pInput  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (pInput  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (pInput  ||  offset  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	75	None	replace
532	[BUG]  [BUGGY]  if  (read  ||  offset  %  2!=  0)  {  [CE]  cannot  find  symbol  read  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  ||  offset  %  2!=  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	75	None	replace
533	[BUG]  [BUGGY]  if  (read  ||  input.length  %  2  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  ||  input.length  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  ||  input.length  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	75	None	replace
534	[BUG]  [BUGGY]  if  (i  ||  offset  %  2  ==  0)  {  [CE]  cannot  find  symbol  i  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (i  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (i  ||  offset  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
535	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)!=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	191	None	add
536	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)  ==  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	191	None	add
537	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  >=  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  >=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)  >=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	191	None	add
538	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  >>  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  >>  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)  >>  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	191	None	add
539	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %)  2)!=  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %)  2)!=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %)  2)!=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	191	None	add
540	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  [Delete]  0  ||(offset  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  [Delete]  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)  [Delete]  0  ||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	191	None	add
541	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  If((  offset  %  2)!=  0  ||(offset  >  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  If((  offset  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    If((  offset  %  2)!=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	191	None	add
542	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  [BUGGY]  0  ||(offset  >  0))  {  [CE]  ')'  expected  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  if((  offset  %  2)  [BUGGY]  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    >    0))    {    if((  offset  %  2)  [BUGGY]  0  ||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	191	None	add
543	[BUG]  [BUGGY]  If  (offset  ==  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
544	[BUG]  [BUGGY]  If  (offset  ==  1  ||  offset  ==  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  ==  1  ||  offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  ==  1  ||  offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
545	[BUG]  [BUGGY]  AssertionFailedError  pInput  =  input.read();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  pInput  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  pInput  =  input.read();	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	130	None	replace
546	[BUG]  [BUGGY]  if(offset  ==  1)  {  If  (offset  ==  1  ||  offset  ==  1)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  1)  {  If  (offset  ==  1  ||  offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  1)  {  If  (offset  ==  1  ||  offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  ==  0)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  ==  0)||(input.available()  ==  0))  {	  if    (offset    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	99	1	replace
548	[BUG]  [BUGGY]  if  ((  input.available()  ==  0)||(input.available()  ==  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  ==  0)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  ==  0)||(input.available()  ==  0))  {	  if    (offset    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	99	1	replace
549	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  ==  0)||(input.available()!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  ==  0)||(input.available()!=  0))  {	  if    (offset    ==    1)    {    	compilable	  [FE]  IOException  	99	2	replace
550	[BUG]  [BUGGY]  if  ((  input.available()  ==  0)||(input.available()!=  0))  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  ==  0)||(input.available()!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  ==  0)||(input.available()!=  0))  {	  if    (offset    ==    1)    {    	compilable	  [FE]  IOException  	99	2	replace
551	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2!=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
552	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  >>  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
553	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  >=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
554	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
555	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2!=  1)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2!=  1)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
556	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >>  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  >>  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
557	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  >=  1)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
558	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  >=  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  >=  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
559	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
560	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)!=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
561	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
562	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %)  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %)  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %)  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
563	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    If((  offset  %  2)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	214	None	add
564	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  >>  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
565	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  off  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  off  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  off  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
566	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
567	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
568	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
569	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
570	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
571	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
572	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  If((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  If((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    If((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ';'  expected	49	None	add
573	[BUG]  [BUGGY]  if(input.available()  <  =  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0  ||  input.available()  ==  0)  {	  if(input.available()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  ==  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	183	1	replace
575	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  ==  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	183	1	replace
576	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0  ||  input.length()  ==  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	int  offset  =  input.available();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	129	1	replace
578	[BUG]  [BUGGY]  int  offset  =  input.available();  if(offset  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.available();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	129	1	replace
579	[BUG]  [BUGGY]  Input  input  =  input.available();  if(input!=  null)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Input  input  =  input.available();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Input  input  =  input.available();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
580	[BUG]  [BUGGY]  Integer  offset  =  input.available();  if(offset  ==  0)  {  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Integer  offset  =  input.available();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Integer  offset  =  input.available();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	129	None	replace
581	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
582	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
583	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
584	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
585	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  <  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.available()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
586	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
587	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.available()  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
588	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
589	[BUG]  [BUGGY]  InputStream  input  =  input.read();  if  (input!=  null)  {  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  if  (input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();  if  (input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	202	None	replace
590	[BUG]  [BUGGY]  InputStream  input  =  input.read();  if  (input  ==  null)  {  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  if  (input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();  if  (input  ==  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	202	None	replace
591	[BUG]  [BUGGY]  InputStream  input  =  input.read();  if  (offset  ==  0)  {  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  if  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();  if  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	202	None	replace
592	[BUG]  [BUGGY]  InputStream  input  =  input.read();  if  (offset  ==  1)  {  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();  if  (offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	202	None	replace
593	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
594	[BUG]  [BUGGY]  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
595	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length;  i  >=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
596	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
597	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  <  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
598	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2  ==  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
599	[BUG]  [BUGGY]  if((  input.available()  *  2  ==  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  ==  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
600	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
601	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
602	[BUG]  [BUGGY]  if((  input.available())||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
603	[BUG]  [BUGGY]  if((  input.available()  +  File.separatorChar  +  input.length())||(input.available()  >  0))  {  [CE]  cannot  find  symbol  File  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  File.separatorChar  +  input.length())||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  File.separatorChar  +  input.length())||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  File	59	None	replace
604	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2  >=  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
605	[BUG]  [BUGGY]  if((  input.available()  *  2  >=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  >=  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
606	[BUG]  [BUGGY]  if((  input.available()  +  1)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  1)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
607	[BUG]  [BUGGY]  while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	205	None	replace
608	[BUG]  [BUGGY]  if(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	205	None	replace
609	[BUG]  [BUGGY]  while(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	205	None	replace
610	[BUG]  [BUGGY]  while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	205	None	replace
611	[BUG]  [BUGGY]  if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
612	[BUG]  [BUGGY]  if((  input.available()  *  2  >>  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >>  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  >>  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	61	None	replace
613	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	69	None	replace
614	[BUG]  [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	69	None	replace
615	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  1;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  1;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  1;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	69	None	replace
616	[BUG]  [BUGGY]  AssertionFailedError.checkState(input.available()  >  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.checkState(input.available()  >  0);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.checkState(input.available()  >  0);	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
617	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	197	1	replace
618	[BUG]  [BUGGY]  if((  input.available()  %  2)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	197	1	replace
619	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available())!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
620	[BUG]  [BUGGY]  if((  input.available())!=  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
621	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read())!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read())!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
622	[BUG]  [BUGGY]  if((  input.read())!=  0)  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read())!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read())!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
623	[BUG]  [BUGGY]  if((  input.size()  %  2)!=  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.size()  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.size()  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
624	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
625	[BUG]  [BUGGY]  if((  input.available()  *  2)!=  0)  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
626	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
627	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
628	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >>  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >>  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset  >>  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
629	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
630	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  If(offset  >=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  If(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    If(offset  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	178	None	add
631	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
632	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
633	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
634	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  <  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
635	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
636	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
637	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
638	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
639	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(input.available()  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(input.available()  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
640	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2!=  0)||(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	55	2	replace
641	[BUG]  [BUGGY]  if((  input.available()  *  2!=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2!=  0)||(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	55	2	replace
642	[BUG]  [BUGGY]  if(input!=  null  ||  input.length  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.length  ==  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  length	148	None	replace
643	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
644	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  If(offset  <  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  If(offset  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    If(offset  <  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	180	None	add
645	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
646	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
647	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  output.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  output.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  output.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
648	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  {  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  input.available()  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	180	None	add
649	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  in.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  in.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  in.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  ==  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
651	[BUG]  [BUGGY]  if((  input.available()  ==  0)&&(offset  %  2  ==  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  ==  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
652	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	52	2	replace
653	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	52	2	replace
654	[BUG]  [BUGGY]  if((  input.available()  {  0)&&(offset  %  2  ==  0))  {  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  {  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  {  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	non-compiled	[CE]  ')'  expected	52	None	replace
655	[BUG]  [BUGGY]  if((  input.available())&&(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	52	None	replace
656	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  >  0  ||  input.available()  ==  0)  {	  if(offset    >    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	185	2	replace
657	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  >  0  ||  input.available()  ==  0)  {	  if(offset    >    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	185	2	replace
658	[BUG]  [BUGGY]  if(read  >  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  >  0  ||  input.available()  ==  0)  {	  if(offset    >    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	185	None	replace
659	[BUG]  [BUGGY]  if  (offset  %  2!=  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2!=  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
660	[BUG]  [BUGGY]  if  (pInput  %  2  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  pInput  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (pInput  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (pInput  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  pInput	78	None	replace
661	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  0)||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
662	[BUG]  [BUGGY]  if  (i  %  2  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  i  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (i  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (i  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
663	[BUG]  [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2!=  1)  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  If  (offset  %  2!=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
664	[BUG]  [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2  ==  1)  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  If  (offset  %  2  ==  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
665	[BUG]  [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2  >=  1)  {  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  If  (offset  %  2  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  If  (offset  %  2  >=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
666	[BUG]  [BUGGY]  if  (offset!=  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset!=  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
667	[BUG]  [BUGGY]  if  (offset  ==  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  1)  {  If  (offset  ==  1  ||  offset  >=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
668	[BUG]  [BUGGY]  if  (offset  ==  0  ||  offset  +  pInput.available()  >  0)  {  [CE]  cannot  find  symbol  pInput  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0  ||  offset  +  pInput.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0  ||  offset  +  pInput.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	176	None	replace
669	[BUG]  [BUGGY]  if  (offset  >=  0  ||  offset  +  pInput.available()  >  0)  {  [CE]  cannot  find  symbol  pInput  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0  ||  offset  +  pInput.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  0  ||  offset  +  pInput.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	176	None	replace
670	[BUG]  [BUGGY]  if(offset  <  0  ||  offset  +  pInput.available()  >  0)  {  [CE]  cannot  find  symbol  pInput  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  offset  +  pInput.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0  ||  offset  +  pInput.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	176	None	replace
671	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2  ==  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
672	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
673	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >>  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  ==  1)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2  ==  1)||(offset  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
674	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  >=  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  >=  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2  >=  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
675	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  >>  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2  >>  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2  >>  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
676	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2!=  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2!=  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2!=  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
677	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  If  ((  offset  %  2  ==  1)||(offset!=  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  If  ((  offset  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    If  ((  offset  %  2  ==  1)||(offset!=  0))  {	  	non-compiled	[CE]  ';'  expected	107	None	add
678	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)&&(offset  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
679	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)&&(offset  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)&&(offset  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
680	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(input.available()  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
681	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(input.available()  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
682	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)&&(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)&&(offset  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
683	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  >=  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
684	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >=  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >=  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
685	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset!=  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
686	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset!=  0))  {  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset!=  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
688	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
689	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
690	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
691	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	71	None	replace
692	[BUG]  [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	71	None	replace
693	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  ==  1)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
694	[BUG]  [BUGGY]  if((  offset  %  2  ==  1)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  1)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  1)||(offset  <  =  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
695	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null  ||  input.available()  >  0)  {	  if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	31	2	replace
696	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  >  0)  {	  if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	31	2	replace
697	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	189	1	replace
698	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	189	1	replace
699	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null  ||  input.available()!=  0)  {	  if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	38	2	replace
700	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()!=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()!=  0)  {	  if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	38	2	replace
701	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)  ==  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
702	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)!=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
703	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %)  2)  ==  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %)  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %)  2)  ==  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
704	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  >=  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  >=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)  >=  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
705	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  If((  offset  %  2)  ==  0  ||(offset  >  0))  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  If((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    If((  offset  %  2)  ==  0  ||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	151	None	add
706	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(Offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  ==  0  ||(Offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)  ==  0  ||(Offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
707	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  >>  0  ||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  >>  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)  >>  0  ||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
708	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  %  2  ==  1)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	106	2	replace
709	[BUG]  [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  %  2  ==  1)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	106	2	replace
710	[BUG]  [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    if  (offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
711	[BUG]  [BUGGY]  if  (offset  >  0)  {  int  offset  =  input.available();  if  (offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  int  offset  =  input.available();  if  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    int  offset  =  input.available();  if  (offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
712	[BUG]  [BUGGY]  if  (offset  >  0)  {  If  (offset  >  0)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  If  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    If  (offset  >  0)  {	  	non-compiled	[CE]  ';'  expected	165	None	add
713	[BUG]  [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    if  (offset  >  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
714	[BUG]  [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    if  (offset  >  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
715	[BUG]  [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  if  (offset  >  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    if  (offset  >  0  ||  offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
716	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
717	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
718	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  {  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	137	None	add
719	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
720	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
721	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
722	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(output.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(output.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(output.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
723	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  <  0  ||  input.available()  ==  0)  {	  if(offset    <    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	181	1	replace
725	[BUG]  [BUGGY]  if(input.available()  <  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  0  ||  input.available()  ==  0)  {	  if(offset    <    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	181	1	replace
726	[BUG]  [BUGGY]  if(offset  <  0  ||  input.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.length()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0  ||  input.length()  ==  0)  {	  if(offset    <    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
727	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  %  2  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
728	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  :  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  :  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  :  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
729	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.intValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.intValue();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  offset.intValue();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
730	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset  %  2;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset  %  2;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  offset  %  2;	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
731	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
732	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.add(1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.add(1);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  offset.add(1);	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
733	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.subtract(offset);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  offset.subtract(offset);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  offset.subtract(offset);	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
734	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	156	2	replace
735	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	156	2	replace
736	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset!=  1)  {	  if    (offset    %    2!=    1)    {    if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	41	2	replace
737	[BUG]  [BUGGY]  if  (offset!=  1)  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset!=  1)  {	  if    (offset    %    2!=    1)    {    if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	41	2	replace
738	[BUG]  [BUGGY]  if  (read  <  1)  {  [CE]  cannot  find  symbol  read  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  <  1)  {	  if    (offset    <    1)    {    	non-compiled	[CE]  cannot  find  symbol  read	209	None	replace
739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input.available()  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (input.available()  <  1)  {	  if    (offset    <    1)    {    	compilable	  [FE]  AssertionFailedError  	209	1	replace
740	[BUG]  [BUGGY]  if  (input.available()  <  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input.available()  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (input.available()  <  1)  {	  if    (offset    <    1)    {    	compilable	  [FE]  AssertionFailedError  	209	1	replace
741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  0)  {	  if    (offset    <    1)    {    	compilable	  [FE]  AssertionFailedError  	209	1	replace
742	[BUG]  [BUGGY]  if  (offset  <  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0)  {	  if    (offset    <    1)    {    	compilable	  [FE]  AssertionFailedError  	209	1	replace
743	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(offset  >=  0))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	2	2	replace
744	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  >=  0))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	2	2	replace
745	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >=  1))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	2	2	replace
746	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  1))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >=  1))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	2	2	replace
747	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >>  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  >>  0))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	2	None	replace
748	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	26	2	replace
749	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	26	2	replace
750	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
751	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  1)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
752	[BUG]  [BUGGY]  if((  input.available()  %  2)  ==  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  1)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  1)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
754	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  1)&&(input.available()  >  0))  {  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  1)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  1)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
755	[BUG]  [BUGGY]  if((  input.length  %  2  ==  1)||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	103	None	replace
756	[BUG]  [BUGGY]  if((  offset  %  20)||(offset  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  20)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  20)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	17	None	replace
757	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  agricoleOffset!=  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  agricoleOffset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  agricoleOffset!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
758	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  1))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
759	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
760	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
761	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  2))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  2))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
762	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)||(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)||(offset  >  1))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
763	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.available();  if(offset!=  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2!=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
764	[BUG]  [BUGGY]  if(input.available()  <  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  0)  {  return  null;  }	  if(input.available()    >    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	169	None	replace
765	[BUG]  [BUGGY]  if(input.available()!=  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0)  {  return  null;  }	  if(input.available()    >    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	169	None	replace
766	[BUG]  [BUGGY]  read(input.available())  {  return  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input.available())  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input.available())  {  return  null;  }	  if(input.available()    >    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	169	None	replace
767	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
768	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
769	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  {  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  {  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  {  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	133	None	add
770	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    If(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	133	None	add
771	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
772	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
773	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  >>  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  >>  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2  >>  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
774	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	63	2	replace
775	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2  >=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	63	2	replace
776	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	63	2	replace
777	[BUG]  [BUGGY]  if((  offset  %  2  >=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	63	2	replace
778	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
779	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2  >>  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
780	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >=  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2  >=  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
781	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
782	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
783	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >>  0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2  >>  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
784	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2  ==  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
785	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    if  ((  offset  %  2  >>  0)||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
786	[BUG]  [BUGGY]  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
787	[BUG]  [BUGGY]  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
788	[BUG]  [BUGGY]  If(input.available()  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(input.available()  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(input.available()  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
789	[BUG]  [BUGGY]  If(offset  %  2  ==  0  ||  input.available()!=  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(offset  %  2  ==  0  ||  input.available()!=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
790	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset2.available()  >  0))  {  [CE]  cannot  find  symbol  offset2  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset2.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset2.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  offset2	65	None	replace
791	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
792	[BUG]  [BUGGY]  if((  input.available()  *  2  >=  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
793	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2!=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
794	[BUG]  [BUGGY]  if((  input.available()  *  2!=  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2!=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
795	[BUG]  [BUGGY]  if((  input.available()  *  2  >>  0)&&(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  >>  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  >>  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	57	None	replace
796	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0  ||  input.available()!=  0)  {	  if(input.available()    ==    0)    {    if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	113	2	replace
797	[BUG]  [BUGGY]  if(input.available()!=  0  ||  input.available()!=  0)  {  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  input.available()!=  0)  {	  if(input.available()    ==    0)    {    if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	113	2	replace
798	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	113	2	replace
799	[BUG]  [BUGGY]  if(input.available()!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()!=    0)    {    	compilable	  [FE]  IOException  	113	2	replace
800	[BUG]  [BUGGY]  AssertionFailedError  pInput  =  input.available();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  pInput  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  pInput  =  input.available();	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
801	[BUG]  [BUGGY]  AssertionFailedError.checkState(input.available()  ==  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.checkState(input.available()  ==  0);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.checkState(input.available()  ==  0);	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
802	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
803	[BUG]  [BUGGY]  if((  offset  %  2  >>  0)||(offset  %  2!=  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >>  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >>  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    >>    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	24	None	replace
804	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >  0  ||  offset  %  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
805	[BUG]  [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  offset  %  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  &&  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  &&  offset  %  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  AssertionFailedError  	159	1	replace
807	[BUG]  [BUGGY]  if(input.available()  ==  0  &&  offset  %  2!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  &&  offset  %  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  &&  offset  %  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  AssertionFailedError  	159	1	replace
808	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  >  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
809	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  >  0)  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  >  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
810	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  +  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
811	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0)  {  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  +  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
812	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  *  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
813	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0)  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  *  2!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
814	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
815	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    If(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
816	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
817	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
818	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
819	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  {  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  {  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  {  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	135	None	add
820	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(offset!=  0))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  IOException  	4	2	replace
821	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset!=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset!=  0))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  IOException  	4	2	replace
822	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset!=  1))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  IOException  	4	2	replace
823	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  1))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset!=  1))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  IOException  	4	2	replace
824	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset!=  0))  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset!=  0))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
825	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
826	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)  ==  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
827	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  >=  0  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  >=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)  >=  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
828	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  >>  0  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  >>  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)  >>  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
829	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)!=  0  ||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)!=  0  ||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)!=  0  ||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
830	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %)  2)!=  0  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %)  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %)  2)!=  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
831	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  [Delete]  0  ||(offset  %  2  ==  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  if((  offset  %  2)  [Delete]  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    if((  offset  %  2)  [Delete]  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ')'  expected	193	None	add
832	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  If((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  If((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    If((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ';'  expected	193	None	add
833	[BUG]  [BUGGY]  if((  input  *  2  >=  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  *  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  *  2  >=  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	157	None	replace
834	[BUG]  [BUGGY]  if((  input  *  2  >=  0)&&(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  *  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  *  2  >=  0)&&(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	157	None	replace
835	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  input.available()  >=  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	157	2	replace
836	[BUG]  [BUGGY]  if  ((  input.available()  >=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  >=  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	157	2	replace
837	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  ==  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
838	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  ==  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)&&(offset  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
840	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(offset  >  0))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)&&(offset  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)&&(offset  %  2!=  0)&&(offset  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
842	[BUG]  [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0)&&(offset  >  0))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)&&(offset  %  2!=  0)&&(offset  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
843	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(input.available()  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
844	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(input.available()  >  0))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(input.available()  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
845	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  this.input.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  this.input.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
846	[BUG]  [BUGGY]  InputStream  input  =  pInput.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  pInput.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  pInput.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
847	[BUG]  [BUGGY]  InputStream  input  =  this.arArchiveEntry.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  this.arArchiveEntry.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  this.arArchiveEntry.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
848	[BUG]  [BUGGY]  InputStream  input  =  getInputStream();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getInputStream();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getInputStream();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
849	[BUG]  [BUGGY]  InputStream  input  =  input.readInput()?  null  :  input.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.readInput()?  null  :  input.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.readInput()?  null  :  input.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
850	[BUG]  [BUGGY]  If  ((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
851	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  <  0))  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  <  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
852	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  If  ((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
853	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  If((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
854	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >=  0))  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2  ==  0)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
855	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
856	[BUG]  [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
857	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
858	[BUG]  [BUGGY]  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
859	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
860	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
861	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  <  =  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
862	[BUG]  [BUGGY]  if((  input.available()  +  offset)||(offset  %  2!=  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  offset)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  offset)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	212	None	replace
863	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(input.available()  >=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
864	[BUG]  [BUGGY]  if((  input.available()  >  0)||(input.available()  >=  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(input.available()  >=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
865	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  1)||(offset  %  2!=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  1)||(offset  %  2!=  1))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
866	[BUG]  [BUGGY]  if((  input.available()  >  1)||(offset  %  2!=  1))  {  [FE]  IOException  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  1)||(offset  %  2!=  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  1)||(offset  %  2!=  1))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
867	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
868	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    if  ((  offset  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
869	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
870	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  If  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  If  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    If  ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	155	None	add
871	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  not  a  statement	155	None	add
872	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2!=  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
873	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  >>  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  >>  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2  >>  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
874	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  >=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  >=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2  >=  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
875	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2  ==  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
876	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  >  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2  [Delete]  1)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	89	None	add
877	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  [BUGGY]  1)||(offset  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2  [BUGGY]  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2  [BUGGY]  1)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	89	None	add
878	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  If  ((  offset  %  2!=  1)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  If  ((  offset  %  2!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    If  ((  offset  %  2!=  1)||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	89	None	add
879	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  <  =  0))  {	  if    (offset    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
880	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  <  =  1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  <  =  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  <  =  1))  {	  if    (offset    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
881	[BUG]  [BUGGY]  InputStream  offset  =  input.read();  if  (offset  ==  0)  {  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.read();  if  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.read();  if  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	172	None	replace
882	[BUG]  [BUGGY]  InputStream  input  =  offset.read();  if(input!=  null)  {  [CE]  long  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  offset.read();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  offset.read();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  long  cannot  be  dereferenced	172	None	replace
883	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(read  >  0))  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(read  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(read  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  read	6	None	replace
884	[BUG]  [BUGGY]  if((  input.available()  +  offset)||(offset  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  offset)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  offset)||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	6	None	replace
885	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(input.available()  <  =  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
886	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(offset  ==  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
887	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  ==  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  ==  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
888	[BUG]  [BUGGY]  if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >>  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	142	None	replace
889	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(read()  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	112	2	replace
890	[BUG]  [BUGGY]  if(read()  >  0)  {  [FE]  IOException  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read()  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	112	2	replace
891	[BUG]  [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  cannot  find  symbol  length	167	None	replace
892	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	167	None	replace
893	[BUG]  [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.this.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  not  a  statement	167	None	replace
894	[BUG]  [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.make(input,  offset,  read,  input.length)>  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  not  a  statement	167	None	replace
895	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  output[i];  }  [CE]  cannot  find  symbol  length  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  output[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  output[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  cannot  find  symbol  length	167	None	replace
896	[BUG]  [BUGGY]  if(input.available()  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
897	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.available()  ==  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
898	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
899	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2!=  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2!=  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
900	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  >>  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  >>  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2  >>  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
901	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  >=  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  >=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2  >=  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
902	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2  ==  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
903	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  [Delete]  0)&&(offset  >  0))  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  [Delete]  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2  [Delete]  0)&&(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	121	None	add
904	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  [BUGGY]  0)&&(offset  >  0))  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  if((  offset  %  2  [BUGGY]  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    if((  offset  %  2  [BUGGY]  0)&&(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	121	None	add
905	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  If((  offset  %  2!=  0)&&(offset  >  0))  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  If((  offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)&&(offset    >    0))    {    If((  offset  %  2!=  0)&&(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	121	None	add
906	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
907	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  this.input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  this.input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  this.input.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
908	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  output.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  output.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  output.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
909	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.length();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.length();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  input.length();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
910	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.release();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.release();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  input.release();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
911	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.accessible();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  =  input.accessible();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  =  input.accessible();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
912	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2!=  0)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
913	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  >>  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  >>  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2  >>  0)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
914	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  >=  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  >=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2  >=  0)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
915	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  ==  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  ==  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2  ==  0)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
916	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  ==  0))  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2  [Delete]  0)||(offset  ==  0))  {	  	non-compiled	[CE]  ')'  expected	119	None	add
917	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    if  ((  offset  %  2!=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
918	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  If  ((  offset  %  2!=  0)||(offset  ==  0))  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  If  ((  offset  %  2!=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    ==    0))    {    If  ((  offset  %  2!=  0)||(offset  ==  0))  {	  	non-compiled	[CE]  ';'  expected	119	None	add
919	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
920	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
921	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
922	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
923	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
924	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.available()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
925	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.available()  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
926	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.isEnabled())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.isEnabled())  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
927	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
928	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
929	[BUG]  [BUGGY]  if((  input.available())!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())!=  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
930	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2  ==  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
931	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  >=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  >=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2  >=  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
932	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  >>  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  >>  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2  >>  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
933	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2!=  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
934	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  If  ((  offset  %  2  ==  1)||(offset  >  0))  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  If  ((  offset  %  2  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    If  ((  offset  %  2  ==  1)||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	109	None	add
935	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  {  1)||(offset  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2  {  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2  {  1)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	109	None	add
936	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  %  2  >=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
937	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  %  2  >=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
938	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  >=  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
939	[BUG]  [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  >=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  >=  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
940	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
941	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2  >=  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
942	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2!=  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2!=  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2!=  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
943	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  >>  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  >>  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2  >>  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
944	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  If  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  If  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    If  ((  offset  %  2  ==  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	102	None	add
945	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  2)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  2)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2  ==  2)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
946	[BUG]  [BUGGY]  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
947	[BUG]  [BUGGY]  int  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
948	[BUG]  [BUGGY]  Integer  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Integer  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Integer  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
949	[BUG]  [BUGGY]  int  offset  %  2  >=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  %  2  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  %  2  >=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
950	[BUG]  [BUGGY]  int  offset  :  input.available();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  :  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  :  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
951	[BUG]  [BUGGY]  Integer  offset  :  input.available();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Integer  offset  :  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Integer  offset  :  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
952	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
953	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
954	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
955	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
956	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
957	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
958	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
959	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
960	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  <  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  <  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
961	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
962	[BUG]  [BUGGY]  InputStream  input  =  input.read();  if  (!input.available())  {  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  if  (!input.available())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();  if  (!input.available())  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	202	None	replace
963	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset2(0)!=  0))  {  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset2(0)!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset2(0)!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
964	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)||(offset!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
965	[BUG]  [BUGGY]  if((  input!=  null)||(offset!=  0))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
966	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  <  =  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
967	[BUG]  [BUGGY]  if((  input.available()  <  =  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  <  =  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  <  =  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
968	[BUG]  [BUGGY]  if((  input.available()  +  2)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  2)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  2)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
969	[BUG]  [BUGGY]  if(read  <  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  <  0  ||  input.available()  ==  0)  {	  if(offset    <    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	181	None	replace
970	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)&&(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	108	1	replace
971	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset!=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)&&(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	108	1	replace
972	[BUG]  [BUGGY]  if((  offset  %  2)  ==  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  1)||(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
973	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
974	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  1))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
975	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  >  2))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
976	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  2))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  2))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	compilable	  [FE]  IOException  	127	2	replace
977	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.length();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
978	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.length();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
979	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.length();  if(offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.length();  if(offset  <  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
980	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.length();  if(offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.length();  if(offset  <  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
981	[BUG]  [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  input.available()  >  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  input.available()  >  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset!=  0))  {  if((  input.available()  >  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
982	[BUG]  [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
983	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  8))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  8))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
984	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  8))  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  8))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  8))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
985	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  5))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  5))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
986	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  5))  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  5))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  5))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
987	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  4))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  4))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
988	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  4))  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  4))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  4))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	17	2	replace
989	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
990	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
991	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2)  ==  0)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
992	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2)  ==  0)  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
993	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  1))  {  if((  offset  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
994	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  8))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  8))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  8))  {  if((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %)    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
995	[BUG]  [BUGGY]  if(read!=  0)  {  [CE]  cannot  find  symbol  read  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read!=  0)  {	  if(input.available()    ==    0)    {    if(input.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	112	None	replace
996	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  >=  0))  {	  if    (offset    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
997	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  ==  0))  {	  if    (offset    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
998	[BUG]  [BUGGY]  if  ((  offset  <  =  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  <  =  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  <  =  0)||(offset  >  0))  {	  if    (offset    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
999	[BUG]  [BUGGY]  if  (offset  <  0)  {  If  (offset  >  0)  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  If  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0)  {  If  (offset  >  0)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1000	[BUG]  [BUGGY]  if  (offset!=  1)  {  If  (offset  ==  1)  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  1)  {  If  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset!=  1)  {  If  (offset  ==  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1001	[BUG]  [BUGGY]  If  (offset  %  2!=  1)  {  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  %  2!=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  %  2!=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1002	[BUG]  [BUGGY]  if  (offset  >=  1)  {  If  (offset  ==  1)  {  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  If  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  1)  {  If  (offset  ==  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1003	[BUG]  [BUGGY]  if  (offset!=  1)  {  If  (offset  >=  1)  {  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset!=  1)  {  If  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset!=  1)  {  If  (offset  >=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1004	[BUG]  [BUGGY]  if  (offset  ==  1)  {  If  (offset  >=  1)  {  [CE]  ';'  expected  [FE]                                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  If  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  1)  {  If  (offset  >=  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1005	[BUG]  [BUGGY]  if  (offset  >>  1)  {  If  (offset  ==  1)  {  [CE]  ';'  expected  [FE]                                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >>  1)  {  If  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >>  1)  {  If  (offset  ==  1)  {	  if    (offset    %    2!=    1)    {    If    (offset    %    2!=    1)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1006	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)!=  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)!=  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	96	None	replace
1007	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	96	None	replace
1008	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null  ||  input.available()  >=  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  IOException  	40	2	replace
1009	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  >=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  >=  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  IOException  	40	2	replace
1010	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null  ||  input.available()  <  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
1011	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  <  0)  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  <  0)  {	  if(input.available()    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
1012	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  -1)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  -1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
1013	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(in.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(in.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(in.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
1014	[BUG]  [BUGGY]  if(input.available()!=  0)  {  If(input.available()!=  0)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  If(input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    If(input.available()!=  0)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
1015	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    int  offset  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
1016	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)&&(offset  >  0))  {	  if((    offset    %    2)    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1017	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2)  ==  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %  2)  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %  2)  ==  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
1018	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %)  2  ==  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  if  ((  offset  %)  2  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >    0))    {    if  ((  offset  %)  2  ==  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
1019	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  ==  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  ==  0  ||  offset  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1020	[BUG]  [BUGGY]  if(input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1021	[BUG]  [BUGGY]  if(input.length()  {  0  ||  offset.length()  >  0)  {  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  {  0  ||  offset.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  {  0  ||  offset.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	210	None	replace
1022	[BUG]  [BUGGY]  if(index  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  index  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(index  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(index  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  index	210	None	replace
1023	[BUG]  [BUGGY]  if(i  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  i  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(i  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(i  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  i	210	None	replace
1024	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  {  0  ||(offset  >  0))  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  if((  offset  %  2)  {  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0    ||(offset    >    0))    {    if((  offset  %  2)  {  0  ||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	151	None	add
1025	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1026	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)||(offset  >  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1027	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    int  offset  =  input.available();  if  (offset  %  2  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
1028	[BUG]  [BUGGY]  if(input!=  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1029	[BUG]  [BUGGY]  if(input  ==  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1030	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1031	[BUG]  [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
1032	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2)  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  if((  input.available()  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(offset    >    0))    {    if((  input.available()  %  2)  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
1033	[BUG]  [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
1034	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
1035	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  If  ((  offset  %  2!=  1)||(offset  ==  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  If  ((  offset  %  2!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    If  ((  offset  %  2!=  1)||(offset  ==  0))  {	  	non-compiled	[CE]  ';'  expected	162	None	add
1036	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2)!=  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  if  ((  offset  %  2)!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    ==    0))    {    if  ((  offset  %  2)!=  1)||(offset  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1037	[BUG]  [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2)  ==  1)||(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1038	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  1)&&(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
1039	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  1)&&(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	compilable	  [FE]  IOException  	90	2	replace
1040	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2)  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  if  ((  offset  %  2)  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    if  ((  offset  %  2)  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
1041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  8))  {  [BUGGY]    0)||(offset  >  0))  {  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  >  8))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    if    ((    offset    %    2    	compilable	  [FE]  AssertionFailedError  	97	1	replace
1042	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  8))  {  [FE]  AssertionFailedError  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  8))  {  [BUGGY]    0)||(offset  >  0))  {  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  8))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    if    ((    offset    %    2    	compilable	  [FE]  AssertionFailedError  	97	1	replace
1043	[BUG]  [BUGGY]  if(input.isVersion())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isVersion())  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1044	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0  ||(offset  %  2  ==  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	194	None	replace
1045	[BUG]  [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1046	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset.available()  >  0))  {  [CE]  long  cannot  be  dereferenced  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	non-compiled	[CE]  long  cannot  be  dereferenced	65	None	replace
1047	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2!=  0)&|(offset  >  1))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  if((  offset  %  2!=  0)&|(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >    1))    {    if((  offset  %  2!=  0)&|(offset  >  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
1048	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  20  ==  0)||(offset  %  20  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  20  ==  0)||(offset  %  20  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1049	[BUG]  [BUGGY]  if((  offset  %  20  ==  0)||(offset  %  20  ==  0))  {  [FE]  AssertionFailedError  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  20  ==  0)||(offset  %  20  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  20  ==  0)||(offset  %  20  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1050	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	26	None	replace
1051	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  1)  {  int  offset  =  input.available();	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	compilable	  [FE]  AssertionFailedError  	217	1	replace
1052	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  [FE]  AssertionFailedError  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  1)  {  int  offset  =  input.available();	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    	compilable	  [FE]  AssertionFailedError  	217	1	replace
1053	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	153	None	replace
1054	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  incompatible  types	153	None	replace
1055	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=  0  ||  input.available()  ==  0)  {  InputStream  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  incompatible  types	153	None	replace
1056	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	153	None	replace
1057	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  int  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
1058	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  >=  0  ||  input.available()  ==  0)  {  int  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	154	2	replace
1059	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  int  offset  =  input.available();  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0  ||  input.available()  ==  0)  {  int  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	154	2	replace
1060	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0)  {  int  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	154	1	replace
1061	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  int  offset  =  input.available();  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  int  offset  =  input.available();	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	154	1	replace
1062	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  int  offset  %  2  >>  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  int  offset  %  2  >>  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  int  offset  %  2  >>  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
1063	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  If((  offset  %  2  ==  0)||(offset!=  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  If((  offset  %  2  ==  0)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset!=    0))    {    If((  offset  %  2  ==  0)||(offset!=  0))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
1064	[BUG]  [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	170	None	replace
1065	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  this;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  this;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    this;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	170	None	replace
1066	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  If((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  If((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    If((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	60	None	add
1067	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2)  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  if((  input.available()  %  2)  >=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    if((  input.available()  %  2)  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
1068	[BUG]  [BUGGY]  if  ((  input.available()  >>  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  >>  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  >>  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	157	None	replace
1069	[BUG]  [BUGGY]  if  ((  input  <  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input  <  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input  <  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	157	None	replace
1070	[BUG]  [BUGGY]  if  ((  input!=  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input!=  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	157	None	replace
1071	[BUG]  [BUGGY]  if(read  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	136	None	replace
1072	[BUG]  [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.available();  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    int  offset  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1073	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(output.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(output.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(output.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
1074	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    If(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	141	None	add
1075	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  >=  0)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset  %  2!=  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	141	None	add
1076	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1077	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1078	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  >  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1079	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  >  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1080	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)||(input.available()  >  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1081	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  >  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1082	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input  ==  null)||(input.available()  >  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1083	[BUG]  [BUGGY]  if((  input  ==  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  ==  null)||(input.available()  >  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1084	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >=  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1085	[BUG]  [BUGGY]  if((  input.available()  >=  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >=  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1086	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  <  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  <  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
1087	[BUG]  [BUGGY]  if((  input.available()  <  0)||(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  <  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  <  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
1088	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    if((  input.available()  %  2)  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
1089	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.length  ==  0)  {	  if(input!=    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	33	None	replace
1090	[BUG]  [BUGGY]  if(input!=  null  ||  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.isVersion())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.isVersion())  {	  if(input!=    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
1091	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  this;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  this;  }	  if(input.available()    ==    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
1092	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  *  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  *  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
1093	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  *  2  ==  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  *  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  *  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
1094	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(input.available()  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
1095	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  ==  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(input.available()  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
1096	[BUG]  [BUGGY]  if(input.available()  >  0)  {  if(InputStream.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  if(InputStream.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    if(InputStream.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
1097	[BUG]  [BUGGY]  if(input.available()  >  0)  {  while(input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  while(input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >    0)    {    while(input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
1098	[BUG]  [BUGGY]  if(input.available()  >  0)  {  return  this;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  return  this;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  return  this;  }	  if(input.available()    >    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	169	None	replace
1099	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
1100	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.isEnabled())  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.isEnabled())  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
1101	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.read()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input!=  null  ||  input.read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input!=  null  ||  input.read()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
1102	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
1103	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {  [FE]  IOException  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2!=    0    ||    input.available()    >=    0)    {    	compilable	  [FE]  IOException  	15	2	replace
1104	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    If(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	137	None	add
1105	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    If(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	137	None	add
1106	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
1107	[BUG]  [BUGGY]  if(input  ==  null  ||  input.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.isEmpty())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.isEmpty())  {	  if(input.available()    ==    0)    {    if(input    ==    null    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)&&(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	163	1	replace
1109	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)&&(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	163	1	replace
1110	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)||(offset  %  2)  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
1111	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  >=  0))  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2  [Delete]  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2  [Delete]  1)||(offset  >=  0))  {	  	non-compiled	[CE]  ')'  expected	160	None	add
1112	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  If  ((  offset  %  2!=  1)||(offset  >=  0))  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  If  ((  offset  %  2!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    If  ((  offset  %  2!=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  ';'  expected	160	None	add
1113	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1114	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.read()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.read()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1115	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.exists())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.exists())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.exists())  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1116	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1117	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  >>  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input  >>  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input  >>  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
1118	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  output.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  output.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  output.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
1119	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    InputStream  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
1120	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  int  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  int  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    int  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
1121	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1122	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.available();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1123	[BUG]  [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  int  offset  =  input.available();  if(offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  int  offset  =  input.available();  if(offset  <  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1124	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %)  2  ==  0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %)  2  ==  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %)  2  ==  0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
1125	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0.0)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  if((  offset  %  2  ==  0.0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    >    0))    {    if((  offset  %  2  ==  0.0)&&(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
1126	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset  >=  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1127	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  >=  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1128	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset!=  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1129	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset!=  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset!=  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1130	[BUG]  [BUGGY]  if((  input.length  %  2)  ==  0  ||(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)  ==  0  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	152	None	replace
1131	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset  <  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1132	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  <  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1133	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >>  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >>  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  >>  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	152	None	replace
1134	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
1135	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)  ==  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2)  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
1136	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(input.available()  >  0))  {  If((  offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
1137	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  input.available()  >  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  input.available()  >  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {  If((  input.available()  >  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
1138	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)&&(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)&&(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
1139	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
1140	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  If((  offset  %  2  ==  0)||(offset  >=  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  If((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    >=    0))    {    If((  offset  %  2  ==  0)||(offset  >=  0))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
1141	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  0)||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
1142	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  0)||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  0)||  input.available()  >  0)  {	  if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    	compilable	  [FE]  IOException  	77	2	replace
1143	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  If((  offset  %  2!=  0)||(offset  >=  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  If((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2!=    0)||(offset    >=    0))    {    If((  offset  %  2!=  0)||(offset  >=  0))  {	  	non-compiled	[CE]  ';'  expected	124	None	add
1144	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1145	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  <  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1146	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.read();  if  (offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.read();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.read();  if  (offset  <  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1147	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.available();  if  (offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.available();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  Integer>  offset  =  input.available();  if  (offset  <  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1148	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError  }  if  (offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  AssertionFailedError  }  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  AssertionFailedError  }  if  (offset  <  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1149	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  Integer>  offset  =  input.available();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1150	[BUG]  [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.read();  if  (offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  AssertionFailedError  <  Integer>  offset  =  input.read();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    AssertionFailedError  <  Integer>  offset  =  input.read();  if  (offset  <  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	208	None	add
1151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset!=  0))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
1152	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset!=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset!=  0))  {	  if((    offset    %    2    ==    0)||(offset!=    0))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
1153	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  <  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	compilable	  [FE]  IOException  	7	2	replace
1154	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  <  0))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  <  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	compilable	  [FE]  IOException  	7	2	replace
1155	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0)||(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2)  ==  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
1156	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  If((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  If((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    If((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	198	None	add
1157	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  if(in.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0)  {  if(in.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0)    {    if(in.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
1158	[BUG]  [BUGGY]  if  (offset  >  0)  {  InputStream  offset  =  input.available();  if  (offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  InputStream  offset  =  input.available();  if  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    InputStream  offset  =  input.available();  if  (offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
1159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)&&(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	106	1	replace
1160	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  >=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)&&(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  AssertionFailedError  	106	1	replace
1161	[BUG]  [BUGGY]  InputStream  offset  =  input.read();  if  (offset!=  0)  {  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  offset  =  input.read();  if  (offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  offset  =  input.read();  if  (offset!=  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.read();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  incompatible  types	172	None	replace
1162	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length!=  0)  {  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.length!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.length!=  0)  {	  if(input    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  length	150	None	replace
1163	[BUG]  [BUGGY]  if((  input.available()  >>  0)&&(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >>  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >>  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	57	None	replace
1164	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1165	[BUG]  [BUGGY]  if((  input.available()  >=  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1166	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  +  2  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1167	[BUG]  [BUGGY]  if((  input.available()  +  2  >=  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  2  >=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  2  >=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)&&(offset  %  2!=  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
1169	[BUG]  [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)&&(offset  %  2!=  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
1170	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  If((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  If((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    If((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	54	None	add
1171	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2)!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  if((  input.available()  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)||(input.available()    >    0))    {    if((  input.available()  %  2)!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
1172	[BUG]  [BUGGY]  if(input!=  null)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1173	[BUG]  [BUGGY]  if  (read  %  2  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  read  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  read	78	None	replace
1174	[BUG]  [BUGGY]  if  (input.length  %  2  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  length  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input.length  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (input.length  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  length	78	None	replace
1175	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  >>  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  >>  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1176	[BUG]  [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset!=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >>    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1177	[BUG]  [BUGGY]  if((  input!=  null)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(offset  >=  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    >>    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1178	[BUG]  [BUGGY]  if(pInput!=  null  ||  offset!=  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  pInput  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(pInput!=  null  ||  offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(pInput!=  null  ||  offset!=  0  ||  input.available()  ==  0)  {	  if(offset!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	187	None	replace
1179	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  input  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  input  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  input  =  input.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
1180	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  off  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  off  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  off  =  input.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
1181	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  >  0))  {  if((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1182	[BUG]  [BUGGY]  if(offset  ==  0)  {  If  (offset  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0)  {  If  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0)  {  If  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1183	[BUG]  [BUGGY]  if(offset!=  0)  {  If  (offset  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0)  {  If  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=  0)  {  If  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1184	[BUG]  [BUGGY]  if(offset  >=  0)  {  If  (offset  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0)  {  If  (offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0)  {  If  (offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1185	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  if(offset!=  0  ||  input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=    0    ||    input.available()    ==    0)    {    if(offset!=  0  ||  input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	186	None	add
1186	[BUG]  [BUGGY]  if(read  ==  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  ==  0  ||  input.available()  ==  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	183	None	replace
1187	[BUG]  [BUGGY]  if(pInput  ==  null  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  pInput  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(pInput  ==  null  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(pInput  ==  null  ||  input.available()  ==  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	183	None	replace
1188	[BUG]  [BUGGY]  [FE]  IOException  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IOException  	74	2	replace
1189	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  [FE]  IOException  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IOException  	74	2	replace
1190	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
1191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	74	1	replace
1192	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	74	1	replace
1193	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	74	None	replace
1194	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  ==  0)  {  return  null;  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
1195	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	74	None	replace
1196	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  9))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  9))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
1197	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  9))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  9))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  9))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
1198	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  6))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >  6))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
1199	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  6))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  6))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  6))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if    ((    offset    %    2    {    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	22	2	replace
1200	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >=  0)&&(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
1201	[BUG]  [BUGGY]  if((  input.available()  >=  0)&&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >=  0)&&(offset  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	195	2	replace
1202	[BUG]  [BUGGY]  if((  input.available()  >>  0)||(input.available()  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >>  0)||(input.available()  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >>  0)||(input.available()  %  2  ==  0))  {	  if((    input.available()    >>    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	195	None	replace
1203	[BUG]  [BUGGY]  if(input.length  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  ==  0)  {	  if(input.available()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
1204	[BUG]  [BUGGY]  if(input  ==  null)  {  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if  (offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  if  (offset  %  2  ==  1)  {	  if    (offset    %    2    ==    1)    {    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1205	[BUG]  [BUGGY]  if  (read  <  0)  {  [CE]  cannot  find  symbol  read  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (read  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  <  0)  {	  if    (offset    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	164	None	replace
1206	[BUG]  [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1207	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  1)&&(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	161	2	replace
1208	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >=  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  1)&&(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	161	2	replace
1209	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
1210	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
1211	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  %  2  ==  1)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1212	[BUG]  [BUGGY]  read(input.available(),  input.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input.available(),  input.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input.available(),  input.length)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
1213	[BUG]  [BUGGY]  read(input,  0,  input.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input,  0,  input.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input,  0,  input.length)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
1214	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(read  >  0))  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(read  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(read  >  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  read	9	None	replace
1215	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    if((  offset  %  2  ==  0)&&(offset  %  2)  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
1216	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0  ||(  offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  ==  0  ||(  offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)  ==  0  ||(  offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	214	None	add
1217	[BUG]  [BUGGY]  if  (offset  <  0)  {  int  offset  =  0;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  int  offset  =  0;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0)  {  int  offset  =  0;  }	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	200	None	replace
1218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  int  offset  =  0;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  0)  {  int  offset  =  0;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	200	1	replace
1219	[BUG]  [BUGGY]  if  (offset  <  0)  {  int  offset  =  0;  [FE]  AssertionFailedError  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0)  {  int  offset  =  0;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0)  {  int  offset  =  0;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	200	1	replace
1220	[BUG]  [BUGGY]  if  (offset  >=  0)  {  int  offset  =  0;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  int  offset  =  0;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  0)  {  int  offset  =  0;  }	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	200	None	replace
1221	[BUG]  [BUGGY]  int  offset  %  2  ==  0)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  %  2  ==  0)  {	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	200	None	replace
1222	[BUG]  [BUGGY]  if  (offset  ==  0)  {  int  offset  =  0;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  0)  {  int  offset  =  0;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  0)  {  int  offset  =  0;  }	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	200	None	replace
1223	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  int  offset  =  0;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  >=  0)  {  int  offset  =  0;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	compilable	  [FE]  IOException  	200	2	replace
1224	[BUG]  [BUGGY]  if  (offset  >=  0)  {  int  offset  =  0;  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  0)  {  int  offset  =  0;  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  0)  {  int  offset  =  0;	  if    (offset    %    2    ==    0)    {    int    offset    %    2    ==    0)    {    	compilable	  [FE]  IOException  	200	2	replace
1225	[BUG]  [BUGGY]  if((  input.length  %  2)  ==  0)||(input.length  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)  ==  0)||(input.length  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)  ==  0)||(input.length  >  0))  {	  if((    input.length    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1226	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  InputStream  offset  <  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  InputStream  offset  <  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    InputStream  offset  <  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	180	None	add
1227	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    <    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
1228	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  {  0)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null    ||    input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
1229	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
1230	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
1231	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  <  0))  {  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >  0))  {  If((  offset  %  2)  ==  0)||(offset  <  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
1232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1233	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  *  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1235	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  *  2  ==  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  *  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1236	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
1237	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  >  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	138	2	replace
1238	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  >  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
1239	[BUG]  [BUGGY]  if((  input.read()  >  0)||(offset  %  2)!=  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  >  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
1240	[BUG]  [BUGGY]  if((  read  %  2)!=  0)  {  [CE]  cannot  find  symbol  read  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  read  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  read  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	197	None	replace
1241	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  size  =  input.length;  i  <  size;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  size  =  input.length;  i  <  size;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0,  size  =  input.length;  i  <  size;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
1242	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  read  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  read  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0,  read  =  input.length;  i  <  length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
1243	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  If((  input.available()  >  0)||(offset  %  2!=  0))  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  If((  input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    >    0)||(offset    %    2!=    0))    {    If((  input.available()  >  0)||(offset  %  2!=  0))  {	  	non-compiled	[CE]  ';'  expected	211	None	add
1244	[BUG]  [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
1245	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  +  1;  i  <  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  +  1;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  +  1;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
1246	[BUG]  [BUGGY]  if(in.available()  ==  0)  {  [CE]  cannot  find  symbol  in  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(in.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(in.available()  ==  0)  {	  if(input.available()    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol  in	36	None	replace
1247	[BUG]  [BUGGY]  if((  input.available())||(offset  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available())||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available())||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	6	None	replace
1248	[BUG]  [BUGGY]  if((  input.available()  +  offset)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  offset)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  offset)||(input.available()  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	6	None	replace
1249	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  *  2  ==  0)||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1250	[BUG]  [BUGGY]  if((  input.available()  *  2  ==  0)||(offset  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  *  2  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  *  2  ==  0)||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  1)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  1)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
1252	[BUG]  [BUGGY]  if((  offset  %  2  ==  1)&&(offset  >  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  1)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  1)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
1253	[BUG]  [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  1)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1254	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0)&&(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
1255	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset  >=  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset  >=  0))  {	  if((    offset    %    2    ==    0)||(offset    >=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
1256	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2)!=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  if  ((  offset  %  2)!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >    0))    {    if  ((  offset  %  2)!=  1)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
1257	[BUG]  [BUGGY]  AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  ';'  expected	167	None	replace
1258	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    int  offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
1259	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  =  input.available();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  int  offset  =  input.available();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0    ||    input.available()    >    0)    {    int  offset  =  input.available();  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
1260	[BUG]  [BUGGY]  AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError.checkState(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1261	[BUG]  [BUGGY]  if(offset  <  0  ||  offset  >  pInput.available())  {  [CE]  cannot  find  symbol  pInput  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  offset  >  pInput.available())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0  ||  offset  >  pInput.available())  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  pInput	176	None	replace
1262	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  offset  >  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  0  ||  offset  >  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	compilable	  [FE]  IOException  	176	2	replace
1263	[BUG]  [BUGGY]  if  (offset  <  0  ||  offset  >  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  0  ||  offset  >  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  0  ||  offset  >  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    +    pInput.available()    >    0)    {    	compilable	  [FE]  IOException  	176	2	replace
1264	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null  ||  input.available()  >  0)  {	  if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	31	2	replace
1265	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  >  0)  {	  if(input.available()    >    0)    {    	compilable	  [FE]  IOException  	31	2	replace
1266	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	206	None	replace
1267	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unreachable  statement	206	None	replace
1268	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  this;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  return  this;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  this;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
1269	[BUG]  [BUGGY]  if((  read  %  2)  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  read  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  read  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	215	None	replace
1270	[BUG]  [BUGGY]  if((  read  +  1)  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  read  +  1)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  read  +  1)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	215	None	replace
1271	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset  %  2  ==  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
1272	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  *  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  *  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
1273	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  *  2  ==  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  *  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  *  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
1274	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    If(offset  %  2  ==  0  ||  input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	139	None	add
1275	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1276	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  int  offset  >  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  int  offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    int  offset  >  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	184	None	add
1277	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  output.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  output.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  output.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	182	None	add
1278	[BUG]  [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  [Delete]  0)  {  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  int  offset  =  input.available();  if(offset  [Delete]  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  int  offset  =  input.available();  if(offset  [Delete]  0)  {	  if    (offset    %    2!=    1)    {    int    offset    =    input.available();    if    (offset    %    2!=    1)    {    	non-compiled	[CE]  ')'  expected	46	None	replace
1279	[BUG]  [BUGGY]  if(read  ==  0)  {  If  (offset  %  2  ==  0)  {  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  ==  0)  {  If  (offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  ==  0)  {  If  (offset  %  2  ==  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
1280	[BUG]  [BUGGY]  If  (offset  %  2  ==  0)  {  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  (offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  (offset  %  2  ==  0)  {	  if    (offset    %    2    ==    0)    {    If    (offset    %    2    ==    0)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
1281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2)  ==  1)  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
1282	[BUG]  [BUGGY]  if((  input.available()  %  2)  ==  1)  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2)  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2)  ==  1)  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
1283	[BUG]  [BUGGY]  if  ((  input.available()  >  1)||(offset.available()  >  0))  {  [CE]  long  cannot  be  dereferenced  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.available()  >  1)||(offset.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.available()  >  1)||(offset.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	non-compiled	[CE]  long  cannot  be  dereferenced	103	None	replace
1284	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  1)||(offset%  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  1)||(offset%  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1285	[BUG]  [BUGGY]  if((  input.available()  >  1)||(offset%  2  ==  1)||(input.available()  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  1)||(offset%  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  1)||(offset%  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1286	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	205	None	replace
1287	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(!closed)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(!closed)  {	  if(input.available()    ==    0)    {    if(input.available()    {    0)    {    	compilable	  [FE]  IOException  	118	2	replace
1288	[BUG]  [BUGGY]  if(!closed)  {  [FE]  IOException  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(!closed)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(!closed)  {	  if(input.available()    ==    0)    {    if(input.available()    {    0)    {    	compilable	  [FE]  IOException  	118	2	replace
1289	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1290	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError  }  if  (offset  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError  }  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError  }  if  (offset  ==  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1291	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  if  (offset  ==  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1292	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.read();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  pInput  =  input.read();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1293	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getArEntry(offset);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getArEntry(offset);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getArEntry(offset);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1294	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr(offset);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr(offset);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr(offset);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1295	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  pInput  =  input.getAr();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1296	[BUG]  [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.available();  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.available();  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
1297	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  inputLength  -  1;  i  >=  0;  i--)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  inputLength  -  1;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  inputLength  -  1;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
1298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  input  ==  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  AssertionFailedError  	145	1	replace
1299	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input  ==  null)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input  ==  null)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input!=    null)    {    	compilable	  [FE]  AssertionFailedError  	145	1	replace
1300	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(output.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(output.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(output.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
1301	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
1302	[BUG]  [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
1303	[BUG]  [BUGGY]  if(offset  <  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
1304	[BUG]  [BUGGY]  InsertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InsertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InsertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
1305	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
1306	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2)  ==  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %  2)  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %  2)  ==  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
1307	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %)  2  ==  1)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  if  ((  offset  %)  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    if  ((  offset  %)  2  ==  1)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
1308	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  >=  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
1309	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  >=  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
1310	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0  ||(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0  ||(offset  >  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
1311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
1312	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
1313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  <  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
1314	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  0))  {  [FE]  AssertionFailedError  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0  ||(offset  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  <  0))  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	192	1	replace
1315	[BUG]  [BUGGY]  InputStream  input  =  getNextArEntry();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getNextArEntry();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getNextArEntry();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1316	[BUG]  [BUGGY]  InputStream  input  =  in.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  in.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  in.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1317	[BUG]  [BUGGY]  InputStream  input  =  getNextArEntry(input);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getNextArEntry(input);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getNextArEntry(input);	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1318	[BUG]  [BUGGY]  if(offset  >  0)  {  If  (offset  <  0  ||  offset  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0)  {  If  (offset  <  0  ||  offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0)  {  If  (offset  <  0  ||  offset  >  0)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1319	[BUG]  [BUGGY]  if(offset  >  0)  {  If  (offset  <  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0)  {  If  (offset  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0)  {  If  (offset  <  0)  {	  if    (offset    %    2    ==    1)    {    If    (offset    %    2    ==    1)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
1320	[BUG]  [BUGGY]  while(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1321	[BUG]  [BUGGY]  While(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  While(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	While(input.available()  <  =  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1322	[BUG]  [BUGGY]  While(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  While(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	While(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	205	None	replace
1323	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.read()  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	173	2	replace
1324	[BUG]  [BUGGY]  if(input.read()  ==  0)  {  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.read()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.read()  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.readInput();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	173	2	replace
1325	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)&&(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)&&(offset  >  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	122	None	replace
1326	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  >  0)&&(offset  %  2!=  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	122	2	replace
1327	[BUG]  [BUGGY]  if((  input.read()  >  0)&&(offset  %  2!=  0))  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  >  0)&&(offset  %  2!=  0))  {	  if((    offset    %    2!=    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	122	2	replace
1328	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
1329	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  i++)  {  return  null;  }  [CE]  possible  loss  of  precision  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1330	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  return  null;  }  [CE]  cannot  find  symbol  output  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  output	71	None	replace
1331	[BUG]  [BUGGY]  if(input.length  >  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  >  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  >  0  ||  input.available()  ==  0)  {	  if(offset    >    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	185	None	replace
1332	[BUG]  [BUGGY]  if(input.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEmpty())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEmpty())  {	  if(input.available()    ==    0)    {    if(input.available()    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1333	[BUG]  [BUGGY]  if  (offset  ==  1)  {  InputStream  input  =  input.readInput();  if  (offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  InputStream  input  =  input.readInput();  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    InputStream  input  =  input.readInput();  if  (offset  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
1334	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.read();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  Integer>  input  =  input.read();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1335	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.getAr();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.getAr();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  Integer>  input  =  input.getAr();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1336	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.readInt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.readInt();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  Integer>  input  =  input.readInt();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1337	[BUG]  [BUGGY]  if  (offset  ==  1)  {  InputStream  input  =  input.getInput();  if  (offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  InputStream  input  =  input.getInput();  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    InputStream  input  =  input.getInput();  if  (offset  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
1338	[BUG]  [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.available();  if  (offset  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  int  offset  =  input.available();  if  (offset  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    int  offset  =  input.available();  if  (offset  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
1339	[BUG]  [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.getAr(0);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  ==  1)  {  AssertionFailedError  <  Integer>  input  =  input.getAr(0);  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    ==    1)    {    AssertionFailedError  <  Integer>  input  =  input.getAr(0);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	98	None	add
1340	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	96	None	replace
1341	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2!=  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {  If((  offset  %  2!=  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    If    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	96	None	replace
1342	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)||(input.available()  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
1343	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  ==  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
1344	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
1345	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  %  2)  ==  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2!=    0)||(offset    %    2    >=    0))    {    	compilable	  [FE]  IOException  	28	2	replace
1346	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(input.available()  <  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
1347	[BUG]  [BUGGY]  if((  input.available()  >  0)||(input.available()  <  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  <  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(input.available()  <  0))  {	  if((    input.available()    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	59	2	replace
1348	[BUG]  [BUGGY]  if(read.length  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read.length  ==  0)  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	111	None	replace
1349	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
1350	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
1351	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
1352	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2)  ==  0)  {	  if((    offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	215	2	replace
1353	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  +  1)  >=  input.read())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  +  1)  >=  input.read())  {	  if    (offset    >=    1)    {    	compilable	  [FE]  IOException  	101	2	replace
1354	[BUG]  [BUGGY]  if  ((  offset  +  1)  >=  input.read())  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  +  1)  >=  input.read())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  +  1)  >=  input.read())  {	  if    (offset    >=    1)    {    	compilable	  [FE]  IOException  	101	2	replace
1355	[BUG]  [BUGGY]  if((  input.length  %  2  ==  1)||(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  1)||(offset  >  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	110	None	replace
1356	[BUG]  [BUGGY]  if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
1357	[BUG]  [BUGGY]  if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  {  1)  {	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    %    2    ==    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	171	None	replace
1358	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1359	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2  ==  1)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1360	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2  ==  1)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1361	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2  ==  1)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2  ==  1)&&(input.available()  >  0))  {	  if    ((    offset    %    2    ==    1)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	103	2	replace
1362	[BUG]  [BUGGY]  if((  offset  %  2)!=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  1)||(offset  >=  0))  {	  if    ((    offset    %    2!=    1)||(offset    >=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1363	[BUG]  [BUGGY]  if(input.length  ==  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
1364	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  input.available())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset!=  input.available())  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	12	2	replace
1365	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset!=  input.available())  {  [FE]  IOException  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  input.available())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset!=  input.available())  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	12	2	replace
1366	[BUG]  [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  1)&&(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1367	[BUG]  [BUGGY]  if((  input.length  %  2  ==  1)||(offset  >=  0))  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  1)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	106	None	replace
1368	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  1)||(offset  >=  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  1)||(offset  >=  2))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	106	2	replace
1369	[BUG]  [BUGGY]  if((  offset  %  2  ==  1)||(offset  >=  2))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  1)||(offset  >=  2))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  1)||(offset  >=  2))  {	  if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    	compilable	  [FE]  IOException  	106	2	replace
1370	[BUG]  [BUGGY]  if  ((  input.length  *  2!=  0)||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  input.length  *  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input.length  *  2!=  0)||(input.available()  >  0))  {	  if    ((    input    *    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	157	None	replace
1371	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
1372	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  ==  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	52	2	replace
1373	[BUG]  [BUGGY]  if((  input.read()  ==  0)&&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  ==  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	52	2	replace
1374	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  possible  loss  of  precision  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  input.length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    null;    }    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
1375	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  ==  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
1376	[BUG]  [BUGGY]  if((  input.read()  ==  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  ==  0)||(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	50	2	replace
1377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)||(offset  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	120	1	replace
1378	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(offset  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	120	1	replace
1379	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0  ||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0  ||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0  ||(input.available()  >  0))  {	  if((    input.length    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	213	None	replace
1380	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)||(offset  <  =  0))  {	  if((    offset    %    2!=    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1381	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)||(offset  <  =  0))  {	  if((    offset    %    2!=    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1382	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  in.available()  %  2!=  0)&&(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  if((  in.available()  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    if((  in.available()  %  2!=  0)&&(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
1383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  ==  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	57	1	replace
1384	[BUG]  [BUGGY]  if((  input.available()  ==  0)&&(input.available()  >  0))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  ==  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	57	1	replace
1385	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()!=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1386	[BUG]  [BUGGY]  if((  input.available()!=  0)&&(input.available()  >  0))  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()!=  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()!=  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	compilable	  [FE]  IOException  	57	2	replace
1387	[BUG]  [BUGGY]  if((  input.available()  [Delete]  0)&&(input.available()  >  0))  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  [Delete]  0)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  [Delete]  0)&&(input.available()  >  0))  {	  if((    input.available()    %    2!=    0)&&(input.available()    >    0))    {    	non-compiled	[CE]  ')'  expected	57	None	replace
1388	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  ==  0  ||  input.available()  >  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	183	2	replace
1389	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0  ||  input.available()  >  0)  {	  if(offset    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	183	2	replace
1390	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.readInput();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.readInput();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  input  =  input.readInput();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1391	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getArInput();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getArInput();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  input  =  input.getArInput();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1392	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getInput();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getInput();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  input  =  input.getInput();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1393	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getAr();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.getAr();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  input  =  input.getAr();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1394	[BUG]  [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.read();  if  (offset  <  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  <  1)  {  InputStream  input  =  input.read();  if  (offset  <  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    <    1)    {    InputStream  input  =  input.read();  if  (offset  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1395	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  >=  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    >=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	25	2	replace
1396	[BUG]  [BUGGY]  if((  offset  %  2)  >=  0)  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  >=  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if    ((    offset    %    2    >=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	25	2	replace
1397	[BUG]  [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.available();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.available();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled())  {  int  offset  =  input.available();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1398	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	int  offset  =  input.available();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	129	2	replace
1399	[BUG]  [BUGGY]  int  offset  =  input.available();  if(offset  >  0)  {  [FE]  IOException  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.available();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.available();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	129	2	replace
1400	[BUG]  [BUGGY]  if((  input.length  %  2)!=  0)&&(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2)!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2)!=  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1401	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()!=  0)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
1402	[BUG]  [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0  ||  input.close())  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()!=  0)  {  if(input.available()!=  0  ||  input.close())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=    0)    {    if(input.available()!=  0  ||  input.close())  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
1403	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  2;  i  >=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  2;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  -  2;  i  >=  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length    -    1;    i    >=    0;    i--)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
1404	[BUG]  [BUGGY]  if((  input.length  %  2!=  1)||(offset  ==  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	163	None	replace
1405	[BUG]  [BUGGY]  if((  offset  %  2)!=  1)||(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  1)||(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  1)||(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1406	[BUG]  [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  1)&&(offset  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  1)&&(offset  ==  0))  {	  if    ((    offset    %    2!=    1)||(offset    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1407	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
1408	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)||(offset  >  1))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  0)||(offset  >  1))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)||(offset  >  1))  {	  if((    offset    %    2!=    0)||(offset    >    1))    {    	non-compiled	[CE]  cannot  find  symbol  length	127	None	replace
1409	[BUG]  [BUGGY]  if(input.length  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	136	None	replace
1410	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  <  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  <  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	61	2	replace
1411	[BUG]  [BUGGY]  if((  input.available()  <  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  <  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  <  0)||(input.available()  >  0))  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	61	2	replace
1412	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  1)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  +  1)  >=  0)  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	61	2	replace
1413	[BUG]  [BUGGY]  if((  input.available()  +  1)  >=  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  +  1)  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  +  1)  >=  0)  {	  if((    input.available()    %    2    >=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	61	2	replace
1414	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
1415	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if((    offset    %    2)!=    0    ||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	194	2	replace
1416	[BUG]  [BUGGY]  read();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read();	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	204	None	replace
1417	[BUG]  [BUGGY]  readFully(input.available())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  readFully(input.available())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	readFully(input.available())  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
1418	[BUG]  [BUGGY]  read(input,  input.available())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  read(input,  input.available())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	read(input,  input.available())  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	204	None	replace
1419	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(offset  <  =  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset  <  =  0))  {	  if((    offset    %    2    ==    0)||(offset    <    =    0))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1420	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.read()  ==  input.read())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.read()  ==  input.read())  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	202	2	replace
1421	[BUG]  [BUGGY]  if(input.read()  ==  input.read())  {  [FE]  IOException  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.read()  ==  input.read())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.read()  ==  input.read())  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    input.read();    if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	202	2	replace
1422	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  2)  {  int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    2)    {    int  offset  =  input.available();  if  (offset  %  2  ==  2)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
1423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  offset  >  256)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  <  0  ||  offset  >  256)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    %    2    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	81	1	replace
1424	[BUG]  [BUGGY]  if(offset  <  0  ||  offset  >  256)  {  [FE]  AssertionFailedError  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  <  0  ||  offset  >  256)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0  ||  offset  >  256)  {	  if    (offset    %    2    ==    0)    {    if    (offset    %    2    ==    0    ||    offset    %    2    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	81	1	replace
1425	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {  If((  offset  %  2)!=  0)&&(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
1426	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  If((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
1427	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  <  =  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1428	[BUG]  [BUGGY]  if(input!=  null  ||  input.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.length  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.length  <  =  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1429	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.getClass()!=  getClass())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.getClass()!=  getClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1430	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null)  {  if(input  ==  null  ||  input.equals( " "))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input    ==    null)    {    if(input  ==  null  ||  input.equals( " "))  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
1431	[BUG]  [BUGGY]  if(input.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  >  0)  {	  if(input.available()    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	40	None	replace
1432	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)||(offset  %  2!=  0))  {  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	189	None	replace
1433	[BUG]  [BUGGY]  if((  input.available()  >>  0)||(offset  %  2!=  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >>  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >>  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2!=    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	189	None	replace
1434	[BUG]  [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)||(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
1435	[BUG]  [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  ';'  expected	66	None	replace
1436	[BUG]  [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)&&(input.available()  >  0))  {  If((  offset  %  2)!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
1437	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input  ==  null)||(offset!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	65	2	replace
1438	[BUG]  [BUGGY]  if((  input  ==  null)||(offset!=  0))  {  [FE]  IOException  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input  ==  null)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input  ==  null)||(offset!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	65	2	replace
1439	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(output.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(output.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(output.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1440	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  If(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    If(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	139	None	add
1441	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1442	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1443	[BUG]  [BUGGY]  if((  input.length  %  2  ==  1)||(offset!=  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  1)||(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	108	None	replace
1444	[BUG]  [BUGGY]  if((  offset  %  2)  ==  1)&&(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  1)&&(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  1)&&(offset!=  0))  {	  if    ((    offset    %    2    ==    1)||(offset!=    0))    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1445	[BUG]  [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1446	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length()  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length()  ==  1)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1447	[BUG]  [BUGGY]  int  offset  =  input.length();  if(offset  >  0)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  offset  =  input.length();  if(offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  offset  =  input.length();  if(offset  >  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1448	[BUG]  [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled())  {  int  offset  =  input.length();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    int    offset    =    input.length();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1449	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
1450	[BUG]  [BUGGY]  if(input.available()  <  =  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  <  =  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1451	[BUG]  [BUGGY]  while(input.available()  >  0)  {  input  =  input.read();  [CE]  cannot  assign  a  value  to  final  variable  input  [FE]                                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  while(input.available()  >  0)  {  input  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	while(input.available()  >  0)  {  input  =  input.read();	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  input	74	None	replace
1452	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  {  0)  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  if((  offset  %  2)  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)    ==    0)    {    if((  offset  %  2)  {  0)  {	  	non-compiled	[CE]  ')'  expected	214	None	add
1453	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	142	2	replace
1454	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	142	2	replace
1455	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  If  (offset  %  2!=  2)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2!=  2)  {  If  (offset  %  2!=  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    2)    {    If  (offset  %  2!=  2)  {	  	non-compiled	[CE]  ';'  expected	85	None	add
1456	[BUG]  [BUGGY]  if(!closed)  {  InputStream  input  =  getInput();  if(input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(!closed)  {  InputStream  input  =  getInput();  if(input  ==  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(!closed)  {  InputStream  input  =  getInput();  if(input  ==  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    input    =    getInput();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1457	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  {  0)  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  if(offset  >  0  ||  input.available()  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >    0    ||    input.available()    ==    0)    {    if(offset  >  0  ||  input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	184	None	add
1458	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }  [CE]  possible  loss  of  precision  [FE]                            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
1459	[BUG]  [BUGGY]  If(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(input.available()  >  0)  {  for(int  i  =  offset;  i  <  0;  i--)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    input.length;    i    <    0;    i--)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
1460	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
1461	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2)!=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	192	2	replace
1462	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  {  0)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  if(offset  ==  0  ||  input.available()  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    ==    0    ||    input.available()    ==    0)    {    if(offset  ==  0  ||  input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	182	None	add
1463	[BUG]  [BUGGY]  if  (offset  >  0)  {  InputStream  input  =  input.readInput();  if  (offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  InputStream  input  =  input.readInput();  if  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    InputStream  input  =  input.readInput();  if  (offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
1464	[BUG]  [BUGGY]  if  (offset  >  0)  {  InputStream  input  =  input.read();  if  (offset  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >  0)  {  InputStream  input  =  input.read();  if  (offset  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >    0)    {    InputStream  input  =  input.read();  if  (offset  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	165	None	add
1465	[BUG]  [BUGGY]  if  (open  ||  offset  %  2  ==  0)  {  [CE]  cannot  find  symbol  open  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (open  ||  offset  %  2  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (open  ||  offset  %  2  ==  0)  {	  if    (read    ||    offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  open	75	None	replace
1466	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  if(input  >=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null)    {    if(input  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
1467	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1468	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  +  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1469	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  *  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1470	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  *  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  *  2!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1471	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  1!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  +  1!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1472	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  +  1!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  1!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  +  1!=  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	134	2	replace
1473	[BUG]  [BUGGY]  if  (input  %  2  ==  0  ||  offset.isEnabled())  {  [CE]  bad  operand  types  for  binary  operator  '%'  [FE]            IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input  %  2  ==  0  ||  offset.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (input  %  2  ==  0  ||  offset.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '%'	78	None	replace
1474	[BUG]  [BUGGY]  if  (input  %  2  ==  0  ||  input.isEnabled())  {  [CE]  bad  operand  types  for  binary  operator  '%'  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (input  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (input  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '%'	78	None	replace
1475	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.enabled())  {  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  %  2  ==  0  ||  input.enabled())  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  0  ||  input.enabled())  {	  if    (offset    %    2    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
1476	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    >=    0    ||    offset    %    2!=    0    ||    input.available()    ==    0)    {    if(input.available()!=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
1477	[BUG]  [BUGGY]  if(read.length  ==  1)  {  [CE]  cannot  find  symbol  read  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read.length  ==  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read.length  ==  1)  {	  if    (offset    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol  read	99	None	replace
1478	[BUG]  [BUGGY]  if(input.isAssignableFrom(input))  {  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isAssignableFrom(input))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isAssignableFrom(input))  {	  if(input.available()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1479	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2)  ==  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  if((  offset  %  2)  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2    ==    0))    {    if((  offset  %  2)  ==  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
1480	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  input[i];  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  i++)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    i++)    {    return    input[i];    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	168	None	replace
1481	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)||(offset  >=  0))  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2!=  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)||(offset  >=  0))  {	  if((    offset    %    2!=    0)||(offset    >=    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	125	None	replace
1482	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2)  ==  1)||(offset!=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  if  ((  offset  %  2)  ==  1)||(offset!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset!=    0))    {    if  ((  offset  %  2)  ==  1)||(offset!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
1483	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input!=  null)&&(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
1484	[BUG]  [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  [FE]  IOException  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input!=  null)&&(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input!=  null)&&(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if    ((    offset    %    2    [Delete]    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	67	2	replace
1485	[BUG]  [BUGGY]  if(read.length  >  0)  {  [CE]  cannot  find  symbol  read  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read.length  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read.length  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	112	None	replace
1486	[BUG]  [BUGGY]  if(read.length()  >  0)  {  [CE]  cannot  find  symbol  read  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read.length()  >  0)  {	  if(input.available()    ==    0)    {    if(input.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	112	None	replace
1487	[BUG]  [BUGGY]  if(input.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  <  =  0)  {	  if(input.available()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  1  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  +  1  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1489	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  +  1  ==  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  +  1  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  +  1  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1490	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {	  if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  ==  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
1492	[BUG]  [BUGGY]  if((  input.available()  ==  0)||(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  ==  0)||(offset  %  2!=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  ==  0)||(offset  %  2!=  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  AssertionFailedError  	212	1	replace
1493	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(input.available()  ==  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1494	[BUG]  [BUGGY]  if((  input.available()  >  0)||(input.available()  ==  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(input.available()  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(input.available()  ==  0))  {	  if((    input.available()    >    0)||(offset    %    2!=    0))    {    	compilable	  [FE]  IOException  	212	2	replace
1495	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    1)||(offset    >=    0))    {    if  ((  offset  %  2)  ==  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
1496	[BUG]  [BUGGY]  if(input.length  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  length  [FE]        IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	210	None	replace
1497	[BUG]  [BUGGY]  if(length  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(length  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(length  %  2  ==  0  ||  input.length()  >  0)  {	  if(offset    %    2    ==    0    ||    input.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	210	None	replace
1498	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[1];  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[1];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[1];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  cannot  find  symbol  length	167	None	replace
1499	[BUG]  [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  input[i];  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  input[i];  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	int  inputLength  =  input.available();  for(int  i  =  0;  i  <  inputLength;  ++i)  {  return  input[i];  }	  if(input.available()    >    0)    {    for(int    i    =    0;    i    <    input.length;    ++i)    {    return    input[i];    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	167	None	replace
1500	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset  %  2)  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.length  %  2  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	199	None	replace
1501	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  ==  0)||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
1502	[BUG]  [BUGGY]  if((  input.read()  ==  0)||(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  ==  0)||(offset  %  2)  ==  0)  {	  if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    	compilable	  [FE]  IOException  	199	2	replace
1503	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  input.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  input.length  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  input.length  >  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	159	None	replace
1504	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  >=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
1505	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  >=  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  >=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  >=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
1506	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
1507	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset!=  0)  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset!=  0)  {	  if(input.available()    ==    0    ||    offset    %    2!=    0)    {    	compilable	  [FE]  IOException  	159	2	replace
1508	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1509	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  +  2  ==  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	140	2	replace
1510	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >=  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  <  =  0  ||  input.available()  ==  0)  {	  if(input.available()    >=    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1511	[BUG]  [BUGGY]  InputStream  input  =  output.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  output.readInput();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  output.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1512	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(input.read());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  getInputStream(input.read());  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  getInputStream(input.read());	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1513	[BUG]  [BUGGY]  InputStream  input  =  input.read();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  InputStream  input  =  input.read();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.read();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	203	None	replace
1514	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
1515	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  If((  offset  %  2)  ==  0)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
1516	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  +  1)  ==  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)  ==  0)  {  If((  offset  +  1)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {  If((  offset  +  1)  ==  0)  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
1517	[BUG]  [BUGGY]  If  ((  offset  %  2)  ==  0  ||(offset  >  0))  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If  ((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If  ((  offset  %  2)  ==  0  ||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
1518	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.readInput();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.readInput();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.readInput();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1519	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getArInput();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getArInput();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.getArInput();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1520	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getArEntry();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getArEntry();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.getArEntry();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1521	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getInput();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getInput();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.getInput();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1522	[BUG]  [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.available();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  int  offset  =  input.available();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    int  offset  =  input.available();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1523	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.read();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.read();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.read();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1524	[BUG]  [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getAr();  if  (offset  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  (offset  >=  1)  {  InputStream  input  =  input.getAr();  if  (offset  >=  1)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    >=    1)    {    InputStream  input  =  input.getAr();  if  (offset  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
1525	[BUG]  [BUGGY]  if((  offset  %  2)!=  1)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  1)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  1)||(offset  >  0))  {	  if    ((    offset    %    2!=    1)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1526	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.length  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.length  <  =  0)  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1527	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length  <  2)  {  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input  ==  null  ||  input.length  <  2)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.length  <  2)  {	  if(input    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  length	150	None	replace
1528	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  if(input!=  null  ||  input.length  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=    null    ||    input.available()    ==    0)    {    if(input!=  null  ||  input.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
1529	[BUG]  [BUGGY]  if(input!=  null)  {  InputStream  offset  =  input.available();  if(offset  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  InputStream  offset  =  input.available();  if(offset  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  InputStream  offset  =  input.available();  if(offset  ==  0)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1530	[BUG]  [BUGGY]  if(input!=  null)  {  InputStream  input  =  input.available();  if(input!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input!=  null)  {  InputStream  input  =  input.available();  if(input!=  null)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {  InputStream  input  =  input.available();  if(input!=  null)  {	  if    (offset    %    2    ==    1)    {    InputStream    offset    =    input.available();    if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1531	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  >=  0  ||  input.available()  >  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	179	2	replace
1532	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  >  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0  ||  input.available()  >  0)  {	  if(offset    >=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	179	2	replace
1533	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  {  0)  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  if(offset  >=  0  ||  input.available()  {  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    >=    0    ||    input.available()    ==    0)    {    if(offset  >=  0  ||  input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	178	None	add
1534	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2)  ==  0  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1535	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0  ||(offset  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2)  ==  0  ||(offset  >  0))  {	  if((    offset    %    2)    ==    0    ||(offset    >    0))    {    	compilable	  [FE]  IOException  	152	2	replace
1536	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  >  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
1537	[BUG]  [BUGGY]  if((  input.read()  >  0)&&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2  ==  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  >  0)&&(offset  %  2  ==  0))  {	  if((    offset    %    2    ==    0)&&(offset    >    0))    {    	compilable	  [FE]  IOException  	9	2	replace
1538	[BUG]  [BUGGY]  if(read  <  0  ||  input.available()  <  0)  {  [CE]  cannot  find  symbol  read  [FE]                  AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  <  0  ||  input.available()  <  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  <  0  ||  input.available()  <  0)  {	  if(input.available()    ==    0)    {    if(input.available()    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	116	None	replace
1539	[BUG]  [BUGGY]  if(read  <  0  ||  input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(read  <  0  ||  input.available()  <  =  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(read  <  0  ||  input.available()  <  =  0)  {	  if(input.available()    ==    0)    {    if(input.available()    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1540	[BUG]  [BUGGY]  if(input.available()  >  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  >  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input.available()    ==    0)    {    return    null;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
1541	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()!=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
1542	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >>  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
1543	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
1544	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0    ||    offset    %    2    ==    0    ||    input.available()    ==    0)    {    if(input.available()  >  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
1545	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	156	2	replace
1546	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2    ==    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	156	2	replace
1547	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  if((  off  %  2)!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2)!=  0)  {  if((  off  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2)!=    0)    {    if((  off  %  2)!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
1548	[BUG]  [BUGGY]  Integer  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  Integer  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	Integer  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int    offset    %    2!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  ';'  expected	154	None	replace
1549	[BUG]  [BUGGY]  if(input.length  ==  0  ||  offset!=  input.length)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.length  ==  0  ||  offset!=  input.length)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.length  ==  0  ||  offset!=  input.length)  {	  if(offset!=    0    ||    input.available()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	187	None	replace
1550	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset!=  0  ||  input.available()  ==  0)  {	  if(offset!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	187	2	replace
1551	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.available()  ==  0  ||  offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset!=  0  ||  input.available()  ==  0)  {	  if(offset!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	187	2	replace
1552	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1553	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)||(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1554	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)&&(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1555	[BUG]  [BUGGY]  if((  input.available()  >  0)&&(offset  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.available()  >  0)&&(offset  >  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)&&(offset  >  0))  {	  if((    input.available()    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	6	2	replace
1556	[BUG]  [BUGGY]  if(input.isEnabled(ArArchiveEntry.class))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled(ArArchiveEntry.class))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled(ArArchiveEntry.class))  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1557	[BUG]  [BUGGY]  if(input.isEnabled(ArInputStream.DEFAULT_INIT_ERROR))  {  [CE]  cannot  find  symbol  ArInputStream  [FE]            AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if(input.isEnabled(ArInputStream.DEFAULT_INIT_ERROR))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.isEnabled(ArInputStream.DEFAULT_INIT_ERROR))  {	  if(input.available()    ==    0)    {    if(input.available()    ==    0    ||    input.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  ArInputStream	144	None	replace
1558	[BUG]  [BUGGY]  AnsertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  AnsertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	AnsertionFailedError  <  AssertionFailedError>  offset  =  input.available();	  if    (offset    %    2    ==    1)    {    AssertionFailedError    <    AssertionFailedError>    offset    =    input.available();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	174	None	replace
1559	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.read()  >  0)&&(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
1560	[BUG]  [BUGGY]  if((  input.read()  >  0)&&(offset  %  2)!=  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  input.read()  >  0)&&(offset  %  2)!=  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.read()  >  0)&&(offset  %  2)!=  0)  {	  if((    offset    %    2)!=    0)    {    	compilable	  [FE]  IOException  	197	2	replace
1561	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2)!=  1)||(offset  >=  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  if  ((  offset  %  2)!=  1)||(offset  >=  0))  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    1)||(offset    >=    0))    {    if  ((  offset  %  2)!=  1)||(offset  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1562	[BUG]  [BUGGY]  If(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  If(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	If(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }	  if(input.available()    >    0)    {    for(int    i    =    0,    length    =    input.length;    i    <    length;    ++i)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
1563	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)&|(offset  %  2)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  }  }    if  (input.available()  ==  0)  {  return  null;  }      [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  if((  offset  %  2  ==  0)&|(offset  %  2)  ==  0)  {  [BUGGY]      read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((    offset    %    2    ==    0)||(offset    %    2)    ==    0)    {    if((  offset  %  2  ==  0)&|(offset  %  2)  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
