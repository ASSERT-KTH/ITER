projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80returnnull;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80returnthis;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");thrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwables.throwable("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwables.warning("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");ThrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwables.log("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");thrownewIOException(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");thrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");Throwables.thrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");ThrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");Throwables.showError("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");Throwables.throwable("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");thrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");ThrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");Throwables.thrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");Throwables.warning("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");thrownewIllegalStateException(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());thrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());Throwables.throwAsIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());Throwables.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());ThrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());Throwables.warning("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80pInput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80pInput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80pInput.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());Throwables.thrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());thrownewIOException("Invalidinput:..."+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");Throwablecause=newIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwables.thrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");thrownewIOException('");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");thrownewIllegalStateException('");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");newIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwablet=input.read("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");newIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input,offset.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.toString());if("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");newIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("");System.err.println("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getValue()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getRawValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());thrownewIllegalStateException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());ThrownewIllegalStateException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());Throwables.thrownewIllegalStateException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());Throwables.log("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());Throwables.warning("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes(i));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes(0));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes()+"of");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes(1));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input>=null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Return(input!=null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input>>null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getKey()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getValue()+"));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input,offset.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getClass().getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=filemode.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=in.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80intfilemode=input.read();offset+=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=output.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=pInput.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80offset=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input>=null)?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80returninput!=null?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());thrownewIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());ThrownewIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());Throwables.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());Throwables.warning("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());Throwables.throwable("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getArEntryType());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Readerreader=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getNextArEntry());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getArEntryName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContext(newArArchiveEntry(this,input));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablecause=newIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80finalThrowablecause=newIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablecause=newIllegalArgumentException("Inputerror:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.getLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.bytelength;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());thrownewIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());ThrownewIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());Throwables.thrownewIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());Throwables.log("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());Throwables.warning("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("Invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("Invalidinput:"+input.toString());}else{thrownewIOException("Invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("Invalidinput:"+input.toString());}else{System.err.println("Invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.toString()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.length,expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.toString()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.toString()+",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes(i));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes(0));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input,offset.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(e,"Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(input,"Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.toString()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.toString
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()!=0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("msg.bad.input.expected.length");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("msg.bad.internal.expected.length");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("");}else{System.arraycopy(input,0,expected,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("");}else{input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("".equals(input.available()));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIOException("");}else{System.arraycopy(input,0,expected[i],0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());thrownewIOException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());if("Unexpectedinput:"+input.available()){thrownewIOException("Unexpectedinput:"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());Throwables.log("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());Throwables.warning("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());Throwables.throwable("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()+")");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes(i));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes(0));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()+",expected:"+expected[i]);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Return(input==null)?null:input.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.getKey();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("JSC_INTERNAL_ERROR");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input,filemode.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input,offset.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input,in.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){filemode[i]==realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getName(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.readInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80readInput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80fileInput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Reader.throwable("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("[null]");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("",input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80reader.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80in.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80user.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80pInput.flush();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.getName
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("Invalidheader"+input.getName()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()!=0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>=0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("JSC_INTERNAL_ERROR");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Unexpectederror:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("]");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("JSC_INTERNAL_ERROR");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("JSC_INTERNAL_SERIALIZED_ERROR");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("PMD.error("+input.available()+")");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>0){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>=0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()!=0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80readFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80readFully(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80handleMissingName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());thrownewIOException("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());if(input.available()==0){thrownewIOException("invalidheader"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());if(input.available()==0){thrownewIOException("invalidheader"+input.available());}else{read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());Throwables.warning("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());Throwables.log("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());Throwables.throwables("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getValue(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");t=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t!=input.read()){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t==input.read()){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t!=null){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Filefilemode=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80intfilemode=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80wiremode=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80||input.available()==0){thrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80||input.available()==0){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(i);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(data);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newString(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:..."+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.toString());thrownewIOException("Invalidinput:..."+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalStateException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidheader:"+input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());thrownewIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());ThrownewIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());Throwables.thrownewIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());Throwables.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());Throwables.warning("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.getName
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.getName()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>1){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized)
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80fileInput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Inputinput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getValue(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input,offset.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());thrownewIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());Throwables.thrownewIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());ThrownewIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());Throwables.warning("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());Throwables.log("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());Throwables.throwable("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>1){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException("'");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getRawPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+filemode.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80intfilemode=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Filefilemode=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80wiremode=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.available(),input.length));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.available()),input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput.available():"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Inputerror:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalStateException("".length());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80returninput==null?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getKey();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input>=null)?null:input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());thrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());if(input.available()==0){thrownewIOException("Invalidinput:"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());Throwables.throwAsIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());Throwables.throwable("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());Throwables.warning("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getName()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IOException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThreadContext.thrownewIOException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThreadContext.thrownewIllegalArgumentException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThreadContext.thrownewIllegalStateException("");Throwablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThreadContext.thrownewIllegalArgumentException("");t=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getRawName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachable:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachable:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Reader.write(input,0,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachablefilemode:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachable:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachableinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalArgumentException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());thrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());if(input.available()==0){thrownewIOException("invalidheader:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());if(input.toString()!=null){thrownewIOException("invalidheader:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());Throwables.log("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(!input.available()>1){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getValue()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("Unexpectederror:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("Invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("Invalidinput:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Stringinput=input.toString();Throwables.warning("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.error("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ger.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+output.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]>=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){filemode[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Unexpectedinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException(""));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getValue()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){read();}else{thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()>0){read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()>0){read();}else{thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader:"+input.getBytes());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidheader:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getRawName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80||input.available()==0){thrownewIllegalStateException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80||input.available()==0){thrownewIllegalStateException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input>=null)?null:input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString()){thrownewIOException("invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString()){thrownewIOException("Invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString()){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if("Invalidinput:"+input.toString()){return;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());thrownewIOException("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());if(input.available()==0){thrownewIOException("invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());if(input.toString()!=null){thrownewIOException("invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());if(input.toString()==null){thrownewIOException("invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());if(input.available()==0){thrownewIOException("invalidheader"+input.toString());}else{read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read("");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read(",");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read("n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read("[");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read("<");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablet=input.read(":");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwAsIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrowAsIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(i));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes()+"n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(0));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes()+"bytesmayhavesideeffectsandcan'tberemoved");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes()+"bytescannotbedeprecated.");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());thrownewIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());if(input.available()==0){thrownewIOException("invalidinput:"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());Throwables.warning("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());Throwables.throwables("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());Throwables.log("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getLength());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidheader:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+input.getName()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+input.getName
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]>=realized[i]){thrownewIOException("invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable(":");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable(";");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.getLength());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());newIllegalStateException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getCurrentThreadContext());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getNextArEntryLoader());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getArEntryResource());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(getArEntryResolver());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalStateException(".");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader["+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader["+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80i.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80accessor.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwableinput=input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input,input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalStateException("Invalidinput:"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Return(input!=null)?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClass(getClass().getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().interrupt();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80intexpectedLength=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80initFilemode(input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Reader.log("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().setContextClassLoader(newArArchiveEntryLoader());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());ThrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());Throwables.thrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());ThrownewIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());Throwables.thrownewIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());thrownewIOException(",invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException(""+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.toString(),expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getBytes(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("msg.bad.input.available");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes(i);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.length+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.read;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.getPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.toString()+"n";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());Throwables.thrownewIOException("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());ThrownewIOException("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());thrownewIOException(",invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Return(input==null)?null:input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());newIllegalStateException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());if(invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());error("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input,input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getText()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80pInput=input.read();offset+=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Filefilemode=input.read();offset+=filemode.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80input=input.read();offset+=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.getRawValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input,input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("null");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablecause=newIllegalArgumentException("".equals(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.getText()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("'");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());ThrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());Throwables.thrownewIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());newIOException("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());if("invalidheader:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Stringt=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("");InputStreaminput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80t=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException(""+InputStream.toString(input));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80if(input.available()==0){thrownewIllegalStateException(",");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("".equals(input.getKey()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.length+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.read;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.array;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(i),input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:",+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80JSError.throwAsIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Reader.throwAsIOException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());if(invalidinput:"+input.toString()){thrownewIllegalArgumentException("invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()>0){thrownewIOException("]");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ArEntryinput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80PERSIZE=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80entry=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentExceptiont=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t=input.read()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("")t=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()==0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()!=0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()>=0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()[Delete]0){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80for(inti=0;i<expected.length;i++){if(!input.available()>1){thrownewIOException("Invalidheader"+input.getName());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getText());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80this.filemode=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader:"+input.getAbsolutePath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader"+newString(input.available()));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("invalidheader"+newString(input.available()));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80PInputinput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80PomInputinput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());Throwables.thrownewIOException("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());ThrownewIOException("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());Throwables.log("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());thrownewIOException(",invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.log("Invalidinput:{0}");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Stringinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newString(filemode));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("".equals(input.getValue()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("n");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unabletoaccessinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Logger.log(Level.WARNING,"Unreachable:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unabletoreadinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalArgumentException("Invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());newIllegalStateException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("".equals(input.getKey()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("Inputerror:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80init();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80reset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());ThrownewIOException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.available());Throwables.thrownewIOException("Unexpectedinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidinput:"+input.getBytes()+"bounds:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.available());newIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Unexpectedinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input==null)?null:input.available;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidheader:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.available());error("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(),expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalArgumentException("Invalidinput:"+input.getBytes(input.length));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwablecause=newIllegalArgumentException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());if(input.toString()!=null){thrownewIOException("invalidheader"+input.toString());}else{read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.toString());newIOException("invalidheader"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("invalidinput:"+input.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("".equals(input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalStateException("".equals(input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIllegalStateException("invalidinput:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=expected.length;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader"+input.toString()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()==0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>0){thrownewIOException("Invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()!=0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(!input.available()){for(inti=0;i<expected.length;i++){if(!input.available()>=0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("".equals(input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("Invalidheader:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getName()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("",Integer.toString(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwable("",Integer.toHexString(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().getContextClassLoader().reportCodeChange();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Thread.currentThread().getContextClassLoader().reset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()==0){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalArgumentException("Invalidinput:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.read());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidinput:"+input.read());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("invalidinput:"+input.toString());if(input.toString()!=null){thrownewIllegalStateException("invalidinput:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException(""+InputStream.toString(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException(""+InputStream.toHexString(input.available()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());if(input.available()>0){thrownewIOException("invalidheader"+input.available());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());if(input.available()>0){thrownewIOException("invalidheader"+input.available());}else{read();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+input.available());newIOException("invalidheader"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.showError("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIOException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80return(input!=null)?null:input.available;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=expected.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read();offset+=in.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80InputStreaminput=input.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());newIllegalArgumentException("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("invalidinput:"+input.toString());error("invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80this.filemode=input.available();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:"+input.available());Throwables.log("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwAsIOException("Invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.throwAsIOException("Invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader"+input.getAbsolutePath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80read();if(input.available()==0){thrownewIOException("Invalidheader"+input.getPath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>=0){thrownewIOException("Invalidheader"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Entryinput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Fileinput=input.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.warning("msg.unknown.length");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(input.available()>0){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80IllegalArgumentException("");if(t=input.read()){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unreachablestatement");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unabletoreadinput.");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80System.err.println("Unabletoaccessinput:");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwableinput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Mutablet=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Decodert=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Invalidinput:"+input.toString());error("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidinput:"+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.thrownewIOException("invalidinput:"+input.getClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("Invalidinput:"+input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("".equals(input.toString()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80newIllegalArgumentException("".equals(input.getBytes()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newFile(input.getPath()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newFile(InputStreamReader.DEFAULT_FILE_SIZE));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newFile(InputStreamReader.DEFAULT_PREFIX));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newFile(InputStreamReader.DEFAULT_FILENAME));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80filemode=input.read(newFile(input.getAbsolutePath()));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader"+newString(realized));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()+",expected:"+expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()+"of"+expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80Throwables.wrap(newIOException("Invalidinput:"+input.getBytes()+"of");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("Invalidinput:..."+input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalStateException("Invalidinput:"+input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<input.length;i++){if(!input.available()==0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]==realized[i]){thrownewIOException("Invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("Invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80while(input.available()>0){for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getValue());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIOException("invalidheader:"+input.getKey());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalArgumentException("Invalidinput:"+input.toString());newIllegalArgumentException("Invalidinput:"+input.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIOException("invalidheader:"+input.toString());if(input.toString()==null){thrownewIOException("invalidheader:"+input.toString());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80PsiInputinput=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80ThrownewIllegalArgumentException("invalidinput:"+input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java80thrownewIllegalStateException("Inputerror:"+input,input.getBytes());
