projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset!=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(Offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset>=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(Offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.groupid.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_PREFIX.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.size()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>lastmodified.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||off!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||set.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_OFFSET.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_OFFSET){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>required.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read!=ArArchiveEntry.HEADER.length){
