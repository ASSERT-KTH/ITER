projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset!=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(Offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset>=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(Offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.groupid.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_PREFIX.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.size()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>lastmodified.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.length()){if(offset==0||off!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||set.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_OFFSET.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_OFFSET){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>required.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){If(offset==0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset>=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=arArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset==1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset==1||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset==1||offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){If(offset==1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(Offset==1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset>=1||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getValue()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getCount()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.size()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(".s.IFJDCS");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode,"UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("US-ASCII");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8").getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(",UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||groupid==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||groupid.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_HOUR_OFFSET){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_BACKSLASH){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_LONG){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||groupid!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||leftModified!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("ERROR");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>arArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>requested.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>needed.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getAllArEntries();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getHeaders();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=arArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&filemode!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&header!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&result.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry().getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry().getArgumentCount();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset>=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.groupid==0||offset>this.groupid.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<this.groupid.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=this.groupid.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.groupmode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||groupid==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset<ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(this.getNextArEntry());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextArEntry(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_OFFSET.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_HOUR_OFFSET.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_LONG.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0&&offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset>=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset>=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){if(offset>>0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){If(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset!=0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||filemode!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(Offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(Offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry<K,V>expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("Invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(arArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(arArchiveEntry.HEADER.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_BACKSLASH.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_BYTE.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_HOUR_LENGTH){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||input.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length==4){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length==3){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected!=0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||read==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected>=0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||input.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||name!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset==0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){If(offset==0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset>=0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset!=0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset==0||offset<arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(offset==0||offset<ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(input==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||input.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=1||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=1||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=this.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read>this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset>=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){if(offset>>0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){If(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||input.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){If(offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset!=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(Offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||offset>ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||offset>arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<=0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&isEnabled(ArArchiveEntry.HEADER)&&offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_ARGUMENTS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_FILE)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes(filemode);for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getAllArEntries();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException(""));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.filemode==0||offset>this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&result.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&isEnabled(ArArchiveEntry.HEADER)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>>ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(this.filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset>>0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){If(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(Offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(OffsetUtils.length==0||expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){If(length==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset<0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){If(offset<0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(Offset<0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset<0||offset>ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset<0||offset>arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset>>0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){If(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){If(length==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){If(offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&currentOffset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&result.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&filemode!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&result.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&header!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&offset>=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset>=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset>>0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){If(offset!=0&&offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset>=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=this.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextArEntry(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextErrorEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset!=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset>>0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){If(offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(Offset>=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset[Delete]0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||off!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||off>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){If(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset>=0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&offset[BUGGY]ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&filemode!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&result.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset!=0||this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||offset.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()+1];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()-1];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()*2];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()/2];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()*4];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset==0&&offset>>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset!=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){If(offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset>=0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(Offset==0&&offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>=ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HeADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset!=0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||read==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||input.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||groupid==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||expected.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||offset!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&filemode==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset!=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(input==null){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextSegment();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=ArArchiveEntry.HEADER.length()){if(Offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(Offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(Offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(Offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||filemode!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||firstmodified!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.offset==ArArchiveEntry.HEADER){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&result.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextArEntry(source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(".UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8","UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8"+File.separator);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||extended.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(OffsetUtil.length()==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&getNextArEntry()==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset>=0||this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||offset.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_FILENAME)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expect.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(width==0||expected.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(OffsetUtils.length()==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expect.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){if(offset!=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset>0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||leftModified==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(length==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=ArArchiveEntry.HEADER.length()){if(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_LENGTH.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&header==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&this.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&isEnabled(ArchiveEntry.HEADER)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_OFFSET){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("")
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63staticfinalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(format==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||start.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(length==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected==0||offset.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=ArArchiveEntry.HEADER.length()){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0){If(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.lastmodified.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(Offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextErrorEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&isEnabled(ArArchiveEntry.HEADER)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&ArArchiveEntry.HEADER!=this.header.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||off==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getHeaders();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=ArArchiveEntry.HEADER.length()){If(offset==0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||firstmodified!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||firstModified!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=arArchiveEntry.HEADER.size()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){if(offset>=0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset==ArArchiveEntry.HEADER.length()){If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.length()){If(offset==0||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_BACKSLASH.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0&&offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=arArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&result.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(width==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(left==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(format==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&header==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(format==0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(left==0||expected.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expect.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset!=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_HOUR_PREFIX){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||header!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.length()){if(Offset==0||offset<ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){finalbyte[]offset=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||endOffset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==0||offset>=ArArchiveEntry.HEADER.length()){if(offset>=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||firstModified==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&expected.length>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()+2];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&header==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&getNextArEntry()==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&filemode!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&expected.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextArEntry(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextArEntry(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length==ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode==ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(read==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||isEnabled(Feature.HEADER_NON_NUMERIC_NUMBERS)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>MAX_ARGUMENT){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>MAX_ARRAY){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length<ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0||expected.length!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset==ArArchiveEntry.HEADER.length()){if(offset>=0||offset==ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||this.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(width==0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||startModified==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&name!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||filemode.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length>=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||startModified==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||set.length!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&isEnabled(ArArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&nextEntry==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&ArArchiveEntry.HEADER!=input.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset<ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>arArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>this.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&lastmodified!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&this.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||written!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>this.groupId.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(Offset<0||offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=newArArchiveEntry[size()>0];
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||set.length!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getArEntryArray();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&arArchiveEntry.HEADER!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||this.offset==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||expected.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||header==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||buffer.getLength()==ArArchiveEntry.HEADER){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset>ArArchiveEntry.HEADER.length()){if(offset>=0||offset>ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0L&&offset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&arArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==ArArchiveEntry.HEADER.length()||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(input==null){if(offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(input==null||input==null){if(offset!=0||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(length==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextHandlerEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextHeaderEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry.HEADER=getNextHandler();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||count!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||scheduled.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextSegmentArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=getNextRawEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_BUFFER_LENGTH){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HEAD_PREFIX){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(filemode,this.lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||filemode!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||header!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(input==null){if(offset>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&expected.length==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&this.filemode==ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0||offset==ArArchiveEntry.HEADER.length()){if(offset!=0||offset==ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0L||offset==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>HOUR_ENTRY.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||leftModified!=ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||selected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&arArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&this.filemode==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry[]expected=ArArchiveEntry.HEADER.getBytes();for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("failedtoreadheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset==ArArchiveEntry.HEADER.length()){if(offset==0&&off==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset<0||offset>ArArchiveEntry.HEADER.length()){if(offset<0||off>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(size==0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset!=ArArchiveEntry.HEADER.length()){if(offset==0&&off!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||isEnabled(ArchiveEntry.HEADER)&&offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||this.offset==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||slot==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||header==ArArchiveEntry.HEADER.getRawOffset()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(this.offset==0||expected.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length>ArArchiveEntry.HEADER.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>saved.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(System.identityHashCode(this));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=newArArchiveEntry<K,V>(source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==2||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||length>this.filemode.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||expected.length!=ArArchiveEntry.HEADER.size()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset!=ArArchiveEntry.HEADER.getSize()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0&&offset>=ArArchiveEntry.HEADER.length()){if(offset==0&&off>=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset>=0||offset<=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset==2||offset!=ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==1||offset!=ArArchiveEntry.HEADER.length()){if(offset==1||offset!=ArArchiveEntry.HeADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||endOffset==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||startModified==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63ArArchiveEntry.HEADER=getNextSecondArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length==ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||offset>ArArchiveEntry.HEADER.length()){if(offset==0||off>ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||lastmodified.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||left.length!=ArArchiveEntry.HEADER.getLength()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset==0||set.length!=ArArchiveEntry.HEADER.getBytes()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalArArchiveEntry<K,V>expected=this.getNextRawEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63if(offset!=0&&offset==ArArchiveEntry.HEADER.length()){if(offset!=0&&off==ArArchiveEntry.HEADER.length()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63staticfinalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-8");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes("UTF-16");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java63finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(0);
