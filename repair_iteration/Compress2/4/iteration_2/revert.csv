projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAr();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.input+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.ar;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),file);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+File.separator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,close);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.ar();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.open;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,off);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,0,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,null,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(i);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this.offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),off);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed="";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed?true:null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed:false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed?false:true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.arRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.arRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawInput(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,output);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawClass().asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAbsolutePath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getResourceName().asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsIO();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.inputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);This.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);super(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);((ArArchiveInputStream)pInput).input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);super();this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48file=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getAr()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAr()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asRaw(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toAsRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asRaw()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.arArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.arArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArchiveInput(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArchive();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this.offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,close);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()+3;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readFully(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readFully(IResource.DEFAULT_PREFIX);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readFully(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,input);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=0;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.arArchive();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(pInput)+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.read());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readUTF()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput.read(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),buffer,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.arArchiveInputStream);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),offset,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.arArchiveFile);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.symbol);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),DEFAULT_SOURCE);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length-2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newFileInputStream(pInput.getAbsolutePath(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length-1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.length-4);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=this.pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=pInput.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=_pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.toArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.toArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toArRawInput(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.toArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pPos);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pOut);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=this.arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=DEFAULT_PREFIX;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.ar;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.readIn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_INPUT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_PREFIX);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_INIT_ERROR);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEPRECATED);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_NAME);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length-offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newBufferedInputStream(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newFileInputStream(pInput.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newFileInputStream(pInput.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,DEFAULT_PREFIX);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.output;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.ar;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBoolean()?Boolean.TRUE:Boolean.FALSE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBooleanValue()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBoolean()?Boolean.FALSE:Boolean.TRUE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBoolean()?1:pInput+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),offset,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this.buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(buffer.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer,po);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this.asPadding);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOutput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer,pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOutput,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.toByteArray(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.toString(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.fromString(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this,po);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(file.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.file);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),file,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),file,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),file,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),DEFAULT_VERSION,file);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),null,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newFileInputStream(pInput.getAbsolutePath(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),null,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),null,this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getInputStream(IResource.DEPRECATED);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getOutputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getArRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48null=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48nullinput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawClass().toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsByteArray();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawClass();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=this.pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.inputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=this.pInputStream.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=this.pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),dataArea);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,0,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,0,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,null,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,0L);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,input);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,offset);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,pInput);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,longoffset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=this.pInputStream.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(this.offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,this.sourceName);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(this.offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,this.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.input+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.input+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.input+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),dataArea);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),offset,pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pOutput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pOutput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pOutput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,input);this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,this.offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=offset+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=offset+3;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pOutput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath()+2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding(),input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding(),0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getEncoding(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,longoffset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,Long.MAX_VALUE);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,offset,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getInput());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getInputStream());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.input,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length-1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length-offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()||pInput.asInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.asInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=pInput.input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=this.arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=pInput.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=DEFAULT_DEPRECATED;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=offset+pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+long;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+this.offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length-2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput.length-1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getBytes(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,longoffset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,length,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,po);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).flush();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeEnd();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeAnswer();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeAndClose();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeAllArchives();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+System.getProperty("file.separator");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput+File.separator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+System.getProperty("user.dir")+File.separator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+file.separator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+File.pathSeparator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes(offset)+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes(offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes(offset+1)+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes(offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,closed,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,closed,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,null,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(data);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(IResource.DEFAULT_TYPE);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(IResource.DEFAULT_PREFIX);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(IResource.DEFAULT_NAME);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(IResource.DEFAULT_KEY);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOut);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),arInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),file);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.inputStream);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEnd());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getRawClass().getLength());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,0,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newBufferedInputStream(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length/1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length+2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,file.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,path.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,this.pInput.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.getArRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.ar();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.as();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+1,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed?true:false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed?null:false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).clone();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.getCharset());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.charAt(0));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.arArchiveInputStream=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.arArchiveInputStream=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,close);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,pInput.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,pInput.charAt(pInput.length));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.length,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString(),offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAsString()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readLine()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init=pInput.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input.getAr();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAbsolutePath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()*2+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()*1000+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getArRawOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawWrite();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawRead();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawSource();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,offset,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newBufferedInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,off);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=pInput.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput.getRawInput());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);this.input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);this.arArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);pInput.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),longoffset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),offset,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=input.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInputStream.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=this.pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getRawLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),file);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48null=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);finalInputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48null=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getBytes(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getPath()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsPath()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);this.pInput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);InputStreamoutput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreampInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);this(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength()-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-1,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.toString());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getStartEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.getArRawInput());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=cfg.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=db.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,input.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr()*+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.openStream()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this,open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),buffer,edge);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(buff.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),this+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asIO();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.openStream(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.parseInput(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=pInput+File.separatorChar;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.getInput(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.asRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,close);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-1,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),closed,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAr(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.open;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(converter);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(resourceName);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,0,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length*2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(data,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(newFileOutputStream("UTF-8"));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(buffer,0,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.readEnd());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()+4;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()+3;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(buffer.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),DEFAULT_TEST_VERSION,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArArchiveInputStream(pInput);super(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.getRawInput());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=getInputStream().getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=cfg.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),closed,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+offset,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getArRawOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toArRawOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOutput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pOutput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pOutput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()*+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getArRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.readFully();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);InputStreamoutput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);InputStreamoutput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ARArchiveInputStream)pInput).closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput),closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pIn).closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.fromArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toArRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput.getRawInput());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsIOD();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsk();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getInputStream(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,output);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(input,pInput);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAbsolutePath()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toString()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);closed=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newFileInputStream(file.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.toURI().getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath(),false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath()+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+File.separator+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+File.separator+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+File.separator+this.offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+System.getProperty("line.separator");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,close,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,off,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pOutput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getAbsolutePath(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pOutput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+1,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArInputStream(pInput);pInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,this.sourceDir);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,this.sourceEnd);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion()-1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getName(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getVersion(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(data,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset)+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArc();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnchor();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAnswer()*+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asRaw(Offsets.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeOpenState();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toURI();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+LAST_VALID_ARRAY;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+DEFAULT_PREFIX;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+DEFAULT_INIT_PARAM;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+LAST_VALID_DEFAULT;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ARArchiveInputStream)pInput).closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput),closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length-2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=ioContext.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=ioContext.readInput(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=i.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,this.arArchiveInputStream.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=newArArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getAbsolutePath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getVersion(),pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,closing);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,pInput.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput+offset,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength()-offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length/offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.length-off);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.open;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+in.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+offset+File.separator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(context);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.openArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arInternal();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getMillis(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(input,pInput);this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.toArray();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput.readLine(),pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput.readLine(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawInput()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()+4;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.getType());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.getParent());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),IOContext.DEFAULT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),null,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.input+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.open();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.array();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.input();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arrayRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arrayArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput!=null?null:pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput==null?null:pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readUTF();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_TEST);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_ENCODING);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(IResource.DEFAULT_KEY);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getLength(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getRawOffset());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=newArInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(input,pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput);this.offset=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=a.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=cfg.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=d.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath(),closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toURI());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.toArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminit=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getEncoding(),pInput.getCharset());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,close);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArInputStream(pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(newFileInputStream(pInput));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readIn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.readIn(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInputStream.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.arArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asInput()||pInput.asInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getEncoding(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),pOutput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getEncoding(),this.pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput==null){input=newArArchiveInputStream(pInput);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,close,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getArRawInput()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.pInput=InputStream.parseInput(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getPath()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).start();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).setEnabled(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.offset=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.length,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),pInput.getCharset());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.readLine(),pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,buffer.getEncoding(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toByteArray();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.toString()+",";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.readLine(),pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=pInputStream.getRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.readIn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,null,pInput.getResourceName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput.getMethod());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.read(IResource.DEPRECATED);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.asPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).input=newInputStreamReader(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreaminput=newArArchiveInputStream(pInput);this.offset=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48finalArArchiveInputStreampInput=newArArchiveInputStream(pInput);this.input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput==null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}else{init();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,this.offset,this.sourceStart);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput.getMask());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.toByteArray();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.getAr(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=newArArchiveInputStream(pInput);pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length+1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,pInput.length-2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getData()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.start();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.input=pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,this.encoding.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newArArchiveInputStream(pInput,getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48ArArchiveInputStreampInput=newArArchiveInputStream(pInput.getEncoding());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput.asRead();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),getChronology());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,pInput.read()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),pInput.getAbsolutePath()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath()*1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed=pInput==null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed=pInput!=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closed?false:null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput!=null?pInput.readLine():null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput!=null?pInput.readLine():DEFAULT_DEPRECATED;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput!=null?pInput.readLine():DEFAULT_PREFIX;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput!=null?pInput.readLine():newFileInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput.inputStream);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48super(pInput,null,pInput.getResourceName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInputStream.getAr()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput,0,pInput.length-1,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getRawInput()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAr(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput.getBytes(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput,pInput.getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closePath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48((ArArchiveInputStream)pInput).closeRoot();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this(pInput.getRawInput(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getLength());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=newFileInputStream(file.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48init(pInput,file.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),pInput.toByteArray());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),pInput.toUTC());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.toString(),pInput.toCharArray());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAstRoot(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);InputStreaminput=newArArchiveInputStream(pInput);}else{init();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48if(pInput!=null){input=newArArchiveInputStream(pInput);finalInputStreaminput=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.asPath()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.arRawInput(this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+DEFAULT_DEPRECATED;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput+DEFAULT_SIZE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.startArchiveInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48InputStreaminput=pInput.readInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,pInput.getBytes(),pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput==null?null:pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput!=null?null:pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput!=null?newArArchiveInputStream(pInput.readLine()):null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInput!=null?this.arArchiveInputStream.readLine():pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48pInput=pInputStream.getArRawInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(buff.getAbsolutePath(),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newFileInputStream(pInput.getAbsolutePath(),this.sourceDir);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsBytes()||pInput.getAsBytes()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newBufferedInputStream(pInput,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=pInput.getAsString()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pName);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput.getBytes(),pOutputBuffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java48input=newArArchiveInputStream(pInput,buffer,pInput);
