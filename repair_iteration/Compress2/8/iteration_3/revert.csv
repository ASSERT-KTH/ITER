projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(length,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HeADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getPreviousArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry2();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=filemode.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECOND.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECONDS.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getPrevious();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getRawHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(Offset.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry2();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.headerSeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntrySize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ARArchiveEntry.HEADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryImpl();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()+offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()+offset,offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()*offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryName()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName()+offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,filemode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getLastModified();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getEnd();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getStart();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getRawOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntry.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupmode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.filemode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode,offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,filemode,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,length,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=offset.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=this.input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=output.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=filemode.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HeADER.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.heADER.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArgument();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntryBytes.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntryBytes.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry1();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry0();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry3();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry2(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=offset.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=this.groupid.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=this.filemode.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=path.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this.source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,line);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(Offset.OFFSET);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(Offset.ZERO);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(Offset.OFFSET);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryName()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getPreviousArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryName()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HeADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.heADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.length.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,offset,len);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.filemode.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.nextArEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getPreviousArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntry(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getLastArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntrySize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ARArchiveEntry.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,len);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,line);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,filemode.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getRawSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getBase();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getEndSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderData(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getHeaderData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderDataByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_DATA;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderDataReference();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderDataId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(null,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,null,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(width,offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,null,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,null,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.Header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.heADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.heaDER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.first.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(groupid,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,filemode+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(input,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,size);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECOND;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECOND,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SCALE.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_QUOTE.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_CONSTRUCTOR.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_STATEMENT.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(arInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(InputStream.DEFAULT,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asFileHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asBase();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.length.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.heADER.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HeADER.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()*1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()*2+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+3;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,input,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this.input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.heADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HeADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset)+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getKey();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.setValue(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(Offset.MIN_VALUE);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(Offset.DEFAULT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry1();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry0();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry3();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry4();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(arArchiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(width,offset,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(ARArchiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(RawArchiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(range,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,ArArchiveEntry.HEADER,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HeADER.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.heADER.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getPreviousArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getPreviousArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.setPreviousArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getLastArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,set);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this.filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInputStream(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInputStream(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getOutputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=this.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getArInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,filemode,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(length,offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryId(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryHandler();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryName(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryName(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=getNextArEntry().getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getRawSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getRawHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=filemode.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getRawHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getRawHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValueHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getLastHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(arrangement);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(filemode,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(filemode,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(arrangement);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode().getAbsolutePath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode().getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode().replace('','/');
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode().replace('n','/');
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry0;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(groupid,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(range,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(arrangement,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(width,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()*offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()/offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+offset,offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=offset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=length()-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=length()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=this.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=length()-offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,height);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,filemode.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getEndArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getFirstChronology();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getLastModifiedName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntryName.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntryName.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.ararchy.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryImpl(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryImpl();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryImpl();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getPrevious();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getLastModified();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.setPrevious(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getPrevious();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getName()+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getName()+File.separatorChar);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getName()+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getName(),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getFilemode());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getRawName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntrySize(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntrySize()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntrySize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntrySize(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryNames(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryNames()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryNames2();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(groupid.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECONDS;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_COMMA.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,set);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.ARRAY_ENTRY.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.ERROR.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.ArEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HeADER.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.EAGER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(groupmode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(filemode,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(groupid,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyteexpected.length=read(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(filemode,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(Offset.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(Offset.zero());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=this.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInput().getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupSeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntrySeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.filemode.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntrySeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getHeaderSize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getWrappedHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=this.input.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length()-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=input.length()-offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=output.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(4);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(3);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupid.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rEntry.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.filemode.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.groupmode.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,ArArchiveEntry.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(System.currentTimeMillis());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(R.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(RawOffset.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(Lineno.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeaderSeparator(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECOND.parseHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.parseHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseBaseHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(groupid.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(groupId);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(groupid,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(arrangement);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_ARRAY;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_ARGS;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_ARG;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_READ_ERROR;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,format);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getWrappedHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedRawHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedAbsoluteHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedFileHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRaw(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRaw2();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRaw(2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRaw(1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getRawParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,height);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,width);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.Header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.ArEntry.HeADER.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HeAder.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getPrevious();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getPrevious();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryNames2D();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryNames();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(newFile(filemode));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64intexpected.length=read(left);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getArgName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getNextName());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(edge);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(sourcePosition);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.ARRAY.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(arInput,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(this.input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SUBJECT.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_ARRAY.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SECOND,filemode.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.root.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.sourcemode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(width,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(ararchiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(ARGiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(arrangement,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.HEADER.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryImpl();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,input.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,this.groupid.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(offset)+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER_SEPARATOR.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getNextHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInputStream().readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getNextInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(lastmodified,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(groupmode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(lastmodified+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(newString(filemode));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,output);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,endpoint);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryBytes(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getValue(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.rootSeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.bodySeparator.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.headerSeparator,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getPreviousArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getPreviousArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.headerSeparator;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,this.lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getOutput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInput().getEncoding();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getInput().getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryLength(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(lastmodified,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(sourceName,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNextArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,this.filemode.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,input.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getLastModifiedArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(offset,source);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.root.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryBytes(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryRawSize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getRawHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getRawHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=data.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(range);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getHeaderData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_DATA.getHeaderData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderDataRef();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.root.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=filemode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,edge);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,this.sourceName);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,end);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getHeaderSeparator(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderSeparator(offset,predicate);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input,lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(length,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryName()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ARRAYEntry.HEADER.getArEntryName()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(width,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(args);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,input.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_KEY,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getHeaderSeparator()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,header.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input.length+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,name+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.aarArchiveEntry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=input.getArEntry(offset,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,input,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ARRAYEntry.HEADER.getNextArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,edge);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,this.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=getNextArEntry().getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=filemode.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNextAREntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(left);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(newString(lastmodified));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(newFile(lastmodified));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,start);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryLength()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryLength()+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryLength()+this.groupid;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseLeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(ARGiveEntry.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(Polyline.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(newFile(filemode));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(left);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.root.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.asHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SCRIPT.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SERVICE.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset,lastmodified);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(getPosition());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(args,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(range,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryName(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemodeInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemodeWithOffset(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getWrappedHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getWrappedHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWrappedArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.root.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getNextArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getNextParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryLength()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(getPosition());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_KEY;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_REGEXP;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_QUOTE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getHeader(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected=read(groupID);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValueByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue2();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset+1,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,2);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(Rhino.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(RawClass.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(ARRAY_PREFIX);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(ARRAY_ENTRY_BYTE_UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntryByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=AarArchiveEntry.HEADER.getNextArEntryId();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.ARRAY.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(this.groupid);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getWeaverHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64Filefilemode=getFilemode().replace('/','.');
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntryByName(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.asParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeaderDataReflection();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,this.filemode.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_ARRAY,offset.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,getBase().getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(arInput,offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(width,length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(offset,input,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseArEntryName(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntry(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_SEPARATOR.getHeaderSeparator(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(newString(offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(compiler);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(Offset.UTF8);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNext(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arEntry.getArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryMask();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getHeader());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.append(getSize());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.ARRAY.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.fromName(filemode);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.headerSeparator.getHeaderSeparator(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.headerSeparator.removeHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=entry.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(offset,1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName1();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=path.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=entry.getArEntryName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,this.filemode.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,header.getNext();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset.getHeaderSize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpected.length=read(name);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(var,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(arInput,offset,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.decodeBase64Header(arrangementStream,ArArchiveEntry.HEADER);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(lastmodified,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=header.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=entry.getArEntryBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextSegment();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64InputStreaminput=getArInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getValue(pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_PROTOTYPE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER+offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=read(undefined);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,header.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,this.lastmodified.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER,entry.getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseBase64HeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.encodeHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(offset,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER_STANDARD.getHeaderSeparator();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=offset+length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=offsets.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryBytes(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(arInput,offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(this,offset,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntry(input,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntrySize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntryRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.HEADER.getArEntrySize();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryByName(offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getArEntryLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.Header.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.arArchiveEntry.header.getHeader();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(offset,offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getBytes(filemode,offset,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=this.header.getArEntry(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.parseHeader(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getArEntryName(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getHeader(offset,header);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=ArArchiveEntry.HEADER.getNextArEntryBytes(offset,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalbyte[]expected=arArchiveEntry.HEADER.getNextArEntryBytes(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java64finalintexpectedLength=data.length;
