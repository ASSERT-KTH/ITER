projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input==null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){If(input==null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input!=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input==null||input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input==null||input.available()>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input>=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){if(input.available()>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){if(input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){if(input.available()>>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){If(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input!=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input==null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){If(input!=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input>=null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input!=null||input.available()>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input>>null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.length()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.length()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.isEnabled()||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.isEmpty()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.isVersion()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()<=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpInput=newAssertionFailedError(input.available());if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){If(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpInput=newAssertionFailedError(input);if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpInput=newAssertionFailedError(input.available()+1);if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpIn=newAssertionFailedError(input.available());if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpInput=newAssertionFailedError(input.available()+offset);if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedErrorpInput=newAssertionFailedError(input.available());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79InputStreaminput=getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79InputStreaminput=getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79finalintoffset=input.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79InputStreaminput=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79InputStreaminput=getArEntryStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79InputStreaminput=getArEntryInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input==null||input.available(){0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.isEnabled()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){AssertionFailedErrorpInput=newAssertionFailedError(input.available());if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){AssertionFailedErrorpIn=newAssertionFailedError(input.available());if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){AssertionFailedErrorpInput=newAssertionFailedError(input);if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){AssertionFailedErrorpIn=newAssertionFailedError(input);if(input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){AssertionFailedError<Integer>input=input.available();if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){InputStreaminput=input.available();if(input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0||expected[i]!=null){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(offset<0){thrownewIllegalStateException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(offset<0){thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(offset<0){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79intoffset=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79finalintoffset=input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0||input.length>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(filemode[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized[i]));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIllegalStateException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79for(inti=0;i<expected.length;i++){if(!closed){thrownewIOException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.isEnabled()||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.isEmpty()){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0||input.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0||expected.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input!=null||input.available()==0){if(input!=null||input.available(){0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.length==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input==null||input.available()==0){if(input{null||input.available()==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()!=0){if(Input.available()!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){if(Input.available()>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){if(input.available()>0)<returnnull;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java79if(input.available()>0){InputStreaminput=input.available()>0){
