bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
2	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
3	[BUG]  [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).guess();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).guess();	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
4	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess());	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	47	None	replace
5	[BUG]  [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).as());  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).as());	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	47	None	replace
6	[BUG]  [BUGGY]  return  fit(getFitter(),  new  ParameterGuesser(getStandardObservations())).guess());  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getFitter(),  new  ParameterGuesser(getStandardObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getFitter(),  new  ParameterGuesser(getStandardObservations())).guess());	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	47	None	replace
7	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }  [CE]  not  a  statement  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	135	None	replace
8	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected  [CE]  not  a  statement  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	135	None	replace
9	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  [CE]  not  a  statement  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	135	None	replace
10	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }  [CE]  not  a  statement  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected;  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	135	None	replace
11	[BUG]  [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
13	[BUG]  [BUGGY]  if(pools  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pools  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pools  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
14	[BUG]  [BUGGY]  WeightedObservedPoint[]  pools  =  getObservedPoints();  [CE]  cannot  find  symbol  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  pools  =  getObservedPoints();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  pools  =  getObservedPoints();	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
15	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations())).as(),  omega,  observations);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations())).as(),  omega,  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations())).as(),  omega,  observations);	  return    fit((    new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
16	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations);	  return    fit((    new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	118	None	replace
17	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  Point  phi  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  Point  phi  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  Point  phi  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    Point    phi    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	38	None	replace
19	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
20	[BUG]  [BUGGY]  while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  '.class'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  For(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	For(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
22	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega,  observations).a);  [CE]  cannot  find  symbol  omega  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega,  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega,  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  cannot  find  symbol  omega	82	None	replace
23	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations).a);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	82	None	replace
24	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[results.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[results.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().clone();    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	23	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [CE]  cannot  find  symbol  points  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	23	None	replace
27	[BUG]  [BUGGY]  while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
28	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }  [CE]  '.class'  expected  [FE]                              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  For(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	For(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  '.class'  expected	23	None	replace
29	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).as());  [CE]  ';'  expected  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getFitter())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
30	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint())).as());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoint())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
31	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).toString());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).toString());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).toString());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
32	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[1]);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[1]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[1]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
33	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  this);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  this);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
34	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[2]);  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[2]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[2]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
35	[BUG]  [BUGGY]  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
36	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).as());  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).as());  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).as());  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
37	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).a.guess());  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).a.guess());  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).a.guess());  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
38	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[5];  [CE]  missing  return  statement  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[5];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[5];	  WeightedObservedPoint[]    points    =    new    WeightedObservedPoint[3];    	non-compiled	[CE]  missing  return  statement	96	None	replace
39	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observations);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observations);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observations);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(this);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
40	[BUG]  [BUGGY]  return((  ParameterGuesser)getObservations()).guess();  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  ParameterGuesser)getObservations()).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  ParameterGuesser)getObservations()).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    return((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  inconvertible  types	145	None	replace
41	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
43	[BUG]  [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
44	[BUG]  [BUGGY]  if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
45	[BUG]  [BUGGY]  if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservations())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
46	[BUG]  [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
47	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).as());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoint())).as());	  return((    new    ParameterGuesser(getReturnPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
48	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).a.guess());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).a.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoint())).a.guess());	  return((    new    ParameterGuesser(getReturnPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
49	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).guess(),  observations);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).guess(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoint())).guess(),  observations);	  return((    new    ParameterGuesser(getReturnPoint())).guess());    	non-compiled	[CE]  ')'  expected	32	None	replace
50	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
51	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
52	[BUG]  [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
53	[BUG]  [BUGGY]  ((  ParameterGuesser)getObservations()).guess();  [CE]  inconvertible  types  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser)getObservations()).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser)getObservations()).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    ((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  inconvertible  types	35	None	replace
54	[BUG]  [BUGGY]  ((  ParameterGuesser)getObservations()).guess());  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser)getObservations()).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser)getObservations()).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    ((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	35	None	replace
55	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
56	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
58	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
59	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
60	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [CE]  ')'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  ')'  expected	92	None	replace
61	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
62	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  observations)).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	116	None	replace
63	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length)).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	116	None	replace
64	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  omega)).guess();  [CE]  cannot  find  symbol  omega  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  omega)).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol  omega	116	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length    	non-compiled	[CE]  ';'  expected	131	None	replace
66	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length    	non-compiled	[CE]  ';'  expected	131	None	replace
67	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    return    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
68	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    return    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
69	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
70	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
72	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getStandardObservations();  [CE]  cannot  find  symbol  [FE]        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getStandardObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getStandardObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observers    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
73	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getAllObservations();  [CE]  cannot  find  symbol  [FE]          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getAllObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getAllObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observers    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
74	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getObservations().size()  ]);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getObservations().size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getObservations().size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
75	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.observations.size()  ]);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.observations.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.observations.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[temps.size()    ]);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	14	None	replace
76	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.temps.size()  ]);  [CE]  cannot  find  symbol  temps  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.temps.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.temps.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  temps	14	None	replace
77	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  missing  return  statement	44	None	replace
78	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations()).guess();  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations()).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations()).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  missing  return  statement	44	None	replace
79	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations());  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations());  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return  new  ParameterGuesser(getObservations());  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  incompatible  types	44	None	replace
80	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  observations,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  observations,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  observations,  getObservations()));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	61	None	replace
81	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  observations));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	61	None	replace
82	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  observations.length));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	61	None	replace
83	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  observers,  getObservations()));  [CE]  cannot  find  symbol  observers  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  observers,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  observers,  getObservations()));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol  observers	61	None	replace
84	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().clone();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().clone();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardObservations().clone();	  WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
85	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().cloneTree();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().cloneTree();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardObservations().cloneTree();	  WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
86	[BUG]  [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  variable  observations  is  already  defined  in  method  fit()  [FE]        [CONTEXT]      public  double[]  fit()  {      [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	                WeightedObservedPoint[]        observations        =        getObservations();        WeightedObservedPoint[]    observers    =    getObservations();    WeightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();	  	non-compiled	[CE]  variable  observations  is  already  defined  in  method  fit()	148	None	add
87	[BUG]  [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  variable  observers  is  already  defined  in  method  fit()  [FE]          [CONTEXT]      public  double[]  fit()  {      [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	                WeightedObservedPoint[]        observations        =        getObservations();        WeightedObservedPoint[]    observers    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();	  	non-compiled	[CE]  variable  observers  is  already  defined  in  method  fit()	148	None	add
88	[BUG]  [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  weightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  weightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	                WeightedObservedPoint[]        observations        =        getObservations();        WeightedObservedPoint[]    observers    =    getObservations();    weightedObservedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();	  	non-compiled	[CE]  cannot  find  symbol	148	None	add
89	[BUG]  [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observation  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  variable  observers  is  already  defined  in  method  fit()  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  WeightedObservedPoint[]  observation  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	                WeightedObservedPoint[]        observations        =        getObservations();        WeightedObservedPoint[]    observers    =    getObservations();    WeightedObservedPoint[]  observation  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();	  	non-compiled	[CE]  variable  observers  is  already  defined  in  method  fit()	148	None	add
90	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
91	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
92	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
93	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
94	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().clone();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().clone();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedObservations().clone();	  WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
95	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
96	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().length;  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedObservations().length;	  WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
97	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getPoints())).guess());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getPoints())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getPoints())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    if(getObservations()!=    null)    {    return((    new    ParameterGuesser(getObservations())).guess());    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
98	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFields())).guess());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFields())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFields())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    if(getObservations()!=    null)    {    return((    new    ParameterGuesser(getObservations())).guess());    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
99	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observations.length)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observations.length)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  this,  observations.length)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	56	None	replace
100	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  omega)).guess();  [CE]  cannot  find  symbol  omega  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  this,  omega)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  cannot  find  symbol  omega	56	None	replace
101	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess();  [CE]  cannot  find  symbol  observationTypes  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observationTypes	56	None	replace
102	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  this,  observations)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	56	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	59	None	replace
104	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  '.class'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  For(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	For(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  '.class'  expected	59	None	replace
105	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
106	[BUG]  [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
107	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations(),  observations)).guess());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations(),  observations)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations(),  observations)).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
108	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).guess();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).guess();	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
109	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).guess());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations())).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
110	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).guess());  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
111	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this).a);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  this).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  ';'  expected	133	None	replace
112	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  observations).a;  [CE]  cannot  find  symbol  omega  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  observations).a;  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  observations).a;	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  cannot  find  symbol  omega	133	None	replace
113	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this.phi);  [CE]  cannot  find  symbol  omega  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this.phi);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  this.phi);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  cannot  find  symbol  omega	133	None	replace
114	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFitter();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFitter();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
115	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFitters();  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFitters();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFitters();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
116	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getFitter();  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getFitter();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
117	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getFitter();  [CE]  cannot  find  symbol  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getFitter();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
118	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observations.length)).guess());  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observations.length)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  this,  observations.length)).guess());	  return((    new    ParameterGuesser(getObservations(),    this)).guess());    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	33	None	replace
119	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  omega)).guess());  [CE]  cannot  find  symbol  omega  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  omega)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  this,  omega)).guess());	  return((    new    ParameterGuesser(getObservations(),    this)).guess());    	non-compiled	[CE]  cannot  find  symbol  omega	33	None	replace
120	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observations)).guess());  [CE]  observations  has  private  access  in  CurveFitter  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observations)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  this,  observations)).guess());	  return((    new    ParameterGuesser(getObservations(),    this)).guess());    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	33	None	replace
121	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess());  [CE]  cannot  find  symbol  observationTypes  [FE]                  AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  this,  observationTypes)).guess());	  return((    new    ParameterGuesser(getObservations(),    this)).guess());    	non-compiled	[CE]  cannot  find  symbol  observationTypes	33	None	replace
122	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getFitter()).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getFitter()).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  getFitter()).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    getObservations()).a);    	non-compiled	[CE]  ';'  expected	30	None	replace
123	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getEndObservations()).a);  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getEndObservations()).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  getEndObservations()).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    getObservations()).a);    	non-compiled	[CE]  ';'  expected	30	None	replace
124	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoint()).a);  [CE]  ';'  expected  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoint()).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoint()).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    getObservations()).a);    	non-compiled	[CE]  ';'  expected	30	None	replace
125	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getMotionedObservations();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getMotionedObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getMotionedObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    weightedObservedPoint[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
126	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
127	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
128	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeeks();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeeks();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeeks();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
130	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
131	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
132	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().clone();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().clone();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedPoints().clone();	  WeightedObservedPoint[]    observations    =    getFixedPoints();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
133	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getFixedPoints();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
134	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);  [CE]  cannot  find  symbol  temps  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(new  WeightedObservedPoint[temps.size()  ]);	  WeightedObservedPoint[]    observations    =    getFixedPoints();    	non-compiled	[CE]  cannot  find  symbol  temps	98	None	replace
135	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
136	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
138	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).weight());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).weight());	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  ';'  expected	91	None	replace
139	[BUG]  [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).weight());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getStandardObservations(),  new  ParameterGuesser(getStandardObservations())).weight());	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  ';'  expected	91	None	replace
140	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).weight(),  observations);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).weight(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).weight(),  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  ';'  expected	91	None	replace
141	[BUG]  [BUGGY]  this.observations  =  new  WeightedObservedPoint[1];  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  this.observations  =  new  WeightedObservedPoint[1];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	this.observations  =  new  WeightedObservedPoint[1];	  this.observations    =    new    WeightedObservedPoint[0];    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	138	None	replace
142	[BUG]  [BUGGY]  this.observations  =  new  WeightedObservedPoint[2];  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  this.observations  =  new  WeightedObservedPoint[2];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	this.observations  =  new  WeightedObservedPoint[2];	  this.observations    =    new    WeightedObservedPoint[0];    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	138	None	replace
143	[BUG]  [BUGGY]  this.observations  =  new  WeightedObservedPoint[3];  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  this.observations  =  new  WeightedObservedPoint[3];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	this.observations  =  new  WeightedObservedPoint[3];	  this.observations    =    new    WeightedObservedPoint[0];    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	138	None	replace
144	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  omega);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations),  omega);	  return    fit(new    ParameterGuesser(getObservations(),    observations)).a);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	28	None	replace
145	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.references.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.references.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  references	157	None	replace
146	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().clone();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().clone();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().clone();	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
147	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[results.size()  ]);	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol  results	17	None	replace
148	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);  [CE]  cannot  find  symbol  temps  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol  temps	17	None	replace
149	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
150	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getReturnPoints();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getReturnPoints();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getReturnPoints();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getReturnPoints();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
151	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getRangePoints();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getRangePoints();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getRangePoints();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getReturnPoints();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
152	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[1]);  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[1]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[1]);	  WeightedObservedPoint[]    observations    =    getObservations().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
153	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  this);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  this);	  WeightedObservedPoint[]    observations    =    getObservations().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
154	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  weightedFitter);  [CE]  cannot  find  symbol  weightedFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  weightedFitter);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  weightedFitter);	  WeightedObservedPoint[]    observations    =    getObservations().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol  weightedFitter	121	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	155	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  points  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	155	None	replace
157	[BUG]  [BUGGY]  while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
158	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [CE]  '.class'  expected  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  For(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	For(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  '.class'  expected	155	None	replace
159	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).as());  [CE]  cannot  find  symbol  omega  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  omega)).as());	  return((    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  cannot  find  symbol  omega	31	None	replace
160	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).as(),  omega);  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).as(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).as(),  omega);	  return((    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ')'  expected	31	None	replace
161	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations()),  this.a).as());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations()),  this.a).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations()),  this.a).as());	  return((    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ')'  expected	31	None	replace
162	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length    	non-compiled	[CE]  ';'  expected	127	None	replace
163	[BUG]  [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
164	[BUG]  [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
165	[BUG]  [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
166	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
167	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
168	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeeks();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeeks();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeeks();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
169	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
171	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a)).guess();  [CE]  cannot  find  symbol  a  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  a)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  a	51	None	replace
172	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observedPoints)).guess();  [CE]  cannot  find  symbol  observedPoints  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observedPoints)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observedPoints)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  observedPoints	51	None	replace
173	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observer)).guess();  [CE]  cannot  find  symbol  observer  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observer)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observer)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  observer	51	None	replace
174	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  observations);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations()),  observations);	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	81	None	replace
175	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  a);  [CE]  cannot  find  symbol  a  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations()),  a);	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  cannot  find  symbol  a	81	None	replace
176	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observer));  [CE]  cannot  find  symbol  observer  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observer));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observer));	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  cannot  find  symbol  observer	81	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  points  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	9	None	replace
178	[BUG]  [BUGGY]  while(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
179	[BUG]  [BUGGY]  while(points!=  null  &&  points.length  >  0)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(points!=  null  &&  points.length  >  0)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(points!=  null  &&  points.length  >  0)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
180	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  '.class'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  For(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	For(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  '.class'  expected	9	None	replace
181	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getStandardObservations();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getStandardObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getStandardObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
182	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
183	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
184	[BUG]  [BUGGY]  WeightedObservedPoint[]  pieces  =  getObservedPoints();  [CE]  cannot  find  symbol  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  pieces  =  getObservedPoints();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  pieces  =  getObservedPoints();	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
186	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())).guess());  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  (new  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	(new  ParameterGuesser(getObservations())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	36	None	replace
187	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  missing  return  statement	36	None	replace
188	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess());  (new  ParameterGuesser(getObservations())).guess();  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess());  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess());  (new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  unreachable  statement	36	None	replace
189	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).as());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardObservations())).as());	  return((    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
190	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardObservations(),  observations)).guess());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardObservations(),  observations)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardObservations(),  observations)).guess());	  return((    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
191	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).a.guess());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).a.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardObservations())).a.guess());	  return((    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
192	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
194	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [CE]  illegal  start  of  expression  [FE]                              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).as());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints())).as());	  return((    new    ParameterGuesser(getReturnPoints())).guess());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
197	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).a.guess());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).a.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints())).a.guess());	  return((    new    ParameterGuesser(getReturnPoints())).guess());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
198	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).a);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints())).a);	  return((    new    ParameterGuesser(getReturnPoints())).guess());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
199	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega));	  return    fit(new    ParameterGuesser(getObservations(),    observations.length));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	63	None	replace
200	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	63	None	replace
201	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length  -  1));	  return    fit(new    ParameterGuesser(getObservations(),    observations.length));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	63	None	replace
202	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  omega);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length),  omega);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	63	None	replace
203	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[8];  [CE]  missing  return  statement  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[8];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[8];	  WeightedObservedPoint[]    points    =    new    WeightedObservedPoint[0];    	non-compiled	[CE]  missing  return  statement	77	None	replace
204	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observedPoints);  [CE]  cannot  find  symbol  observedPoints  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observedPoints);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observedPoints);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(required);    	non-compiled	[CE]  cannot  find  symbol  observedPoints	158	None	replace
205	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(observedPoints);  [CE]  cannot  find  symbol  observedPoints  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(observedPoints);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(observedPoints);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(required);    	non-compiled	[CE]  cannot  find  symbol  observedPoints	158	None	replace
206	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getOrCreateObservations();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getOrCreateObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getOrCreateObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrCreateObservations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
207	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getOrCreateObservations();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getOrCreateObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getOrCreateObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrCreateObservations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
208	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getOrCreateObservations();  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getOrCreateObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getOrCreateObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrCreateObservations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
209	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  '	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	129	None	replace
210	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	129	None	replace
211	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i!=  	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
212	[BUG]  [BUGGY]  if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(observations!=    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
213	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).as();  [CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getObservations())).as();	  return    fit(getObservations(),    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)	66	None	replace
214	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).toString());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).toString());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getObservations())).toString());	  return    fit(getObservations(),    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	66	None	replace
215	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue());  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue());	  return    fit(getObservations(),    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	66	None	replace
216	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  a).guess());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  a).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  a).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations())),    observations).guess());    	non-compiled	[CE]  ';'  expected	48	None	replace
217	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).a);	  return    fit((    new    ParameterGuesser(getStandardObservations())),    observations).guess());    	non-compiled	[CE]  ';'  expected	48	None	replace
218	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  this.observations).guess());  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  this.observations).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  this.observations).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations())),    observations).guess());    	non-compiled	[CE]  ';'  expected	48	None	replace
219	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
220	[BUG]  [BUGGY]  ((  ParameterGuesser(getObservations())).guess());  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser(getObservations())).guess());	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
221	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
222	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess());  }	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	152	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return  new  ParameterGuesser(getObservations()).guess();  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return  new  ParameterGuesser(getObservations()).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return  new  ParameterGuesser(getObservations()).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	152	None	replace
225	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getRequirements();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getRequirements();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getRequirements();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getRequirements();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
226	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getEquirements();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getEquirements();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getEquirements();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getRequirements();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
227	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  observations)).guess();	  return(new    ParameterGuesser(this)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	113	None	replace
228	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  observers)).guess();  [CE]  cannot  find  symbol  observers  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  observers)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  observers)).guess();	  return(new    ParameterGuesser(this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observers	113	None	replace
229	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  observedPoints)).guess();  [CE]  cannot  find  symbol  observedPoints  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  observedPoints)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  observedPoints)).guess();	  return(new    ParameterGuesser(this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observedPoints	113	None	replace
230	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).as();  [CE]  cannot  find  symbol  omega  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  omega)).as();	  return(new    ParameterGuesser(getObservations())).as();    	non-compiled	[CE]  cannot  find  symbol  omega	57	None	replace
231	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations()),  omega).as();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations()),  omega).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations()),  omega).as();	  return(new    ParameterGuesser(getObservations())).as();    	non-compiled	[CE]  ')'  expected	57	None	replace
232	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations)).as();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations)).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations)).as();	  return(new    ParameterGuesser(getObservations())).as();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	57	None	replace
233	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).a,  observations);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).a,  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).a,  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).a);    	non-compiled	[CE]  ';'  expected	90	None	replace
234	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).a);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).a);	  return    fit((    new    ParameterGuesser(getStandardObservations())).a);    	non-compiled	[CE]  ';'  expected	90	None	replace
235	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).a,  observations);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).a,  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).a,  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).a);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
236	[BUG]  [BUGGY]  while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null  &&!observations.isEmpty())  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
237	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a));  [CE]  cannot  find  symbol  a  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  a));	  return    fit(new    ParameterGuesser(getObservations(),    omega));    	non-compiled	[CE]  cannot  find  symbol  a	60	None	replace
238	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotated));  [CE]  cannot  find  symbol  annotated  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotated));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  annotated));	  return    fit(new    ParameterGuesser(getObservations(),    omega));    	non-compiled	[CE]  cannot  find  symbol  annotated	60	None	replace
239	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  anchor));  [CE]  cannot  find  symbol  anchor  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  anchor));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  anchor));	  return    fit(new    ParameterGuesser(getObservations(),    omega));    	non-compiled	[CE]  cannot  find  symbol  anchor	60	None	replace
240	[BUG]  [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
241	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
242	[BUG]  [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
243	[BUG]  [BUGGY]  FitterTraversal.traverse(compiler,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(compiler,  this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(compiler,  this);	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  compiler	24	None	replace
244	[BUG]  [BUGGY]  FitterTraversal.traverse(this,  new  WeightedObservedPoint[]  {  }  );  [CE]  cannot  find  symbol  FitterTraversal  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(this,  new  WeightedObservedPoint[]  {  }  );  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(this,  new  WeightedObservedPoint[]  {  }  );	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  FitterTraversal	24	None	replace
245	[BUG]  [BUGGY]  FitterTraversal.traverse(this,  new  HarmonicFitter());  [CE]  constructor  HarmonicFitter  in  class  HarmonicFitter  cannot  be  applied  to  given  types;  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(this,  new  HarmonicFitter());  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(this,  new  HarmonicFitter());	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  constructor  HarmonicFitter  in  class  HarmonicFitter  cannot  be  applied  to  given  types;	24	None	replace
246	[BUG]  [BUGGY]  FitterTraversal.traverse(compiler,  this,  new  HarmonicFitter());  [CE]  cannot  find  symbol  compiler  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(compiler,  this,  new  HarmonicFitter());  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(compiler,  this,  new  HarmonicFitter());	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  compiler	24	None	replace
247	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(observations,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(observations,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(observations,  getObservations()));	  return    fit(new    ParameterGuesser(a,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	109	None	replace
248	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(observes,  getObservations()));  [CE]  cannot  find  symbol  observes  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(observes,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(observes,  getObservations()));	  return    fit(new    ParameterGuesser(a,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol  observes	109	None	replace
249	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(Observations.EAGER,  getObservations()));  [CE]  cannot  find  symbol  Observations  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(Observations.EAGER,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(Observations.EAGER,  getObservations()));	  return    fit(new    ParameterGuesser(a,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol  Observations	109	None	replace
250	[BUG]  [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  new  ParameterGuesser(this.observations)).guess();	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
251	[BUG]  [BUGGY]  return  this.observations.fit(new  ParameterGuesser(this.observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  this.observations.fit(new  ParameterGuesser(this.observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  this.observations.fit(new  ParameterGuesser(this.observations)).guess();	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
252	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  this.a)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  this.a)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  this.a)).guess();	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
253	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).as());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).as());	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
254	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).a.guess());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).a.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).a.guess());	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
255	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).guess(),  observations);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).guess(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).guess(),  observations);	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  ')'  expected	105	None	replace
256	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations,  this.a)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations,  this.a)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations,  this.a)).guess();	  return(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	54	None	replace
257	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations),  this.a).guess();  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations),  this.a).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations),  this.a).guess();	  return(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  ')'  expected	54	None	replace
258	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  measurements)).guess();  [CE]  cannot  find  symbol  measurements  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  measurements)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  measurements)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations)).guess();    	non-compiled	[CE]  cannot  find  symbol  measurements	52	None	replace
259	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  this);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  this);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations),  this);	  return    fit(new    ParameterGuesser(getObservations(),    observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	52	None	replace
260	[BUG]  [BUGGY]  if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
261	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().cloneTree();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().cloneTree();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllObservations().cloneTree();	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
262	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllParameters();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllParameters();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllParameters();	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
263	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
264	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getOrClearObservations();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getOrClearObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getOrClearObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrClearObservations();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
265	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getOrClearObservations();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getOrClearObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getOrClearObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrClearObservations();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
266	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getOrClearObservations();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getOrClearObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getOrClearObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrClearObservations();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
267	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservation();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservation();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservation();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getObservation();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
268	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  missing  return  statement  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getObservation();    	non-compiled	[CE]  missing  return  statement	147	None	replace
269	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).weight();  [CE]  cannot  find  symbol  omega  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  omega)).weight();	  return(new    ParameterGuesser(getObservations())).weight();    	non-compiled	[CE]  cannot  find  symbol  omega	114	None	replace
270	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  Omega)).weight();  [CE]  cannot  find  symbol  Omega  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  Omega)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  Omega)).weight();	  return(new    ParameterGuesser(getObservations())).weight();    	non-compiled	[CE]  cannot  find  symbol  Omega	114	None	replace
271	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  getObservations())).weight();  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  getObservations())).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  getObservations())).weight();	  return(new    ParameterGuesser(getObservations())).weight();    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	114	None	replace
272	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  phi);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  phi);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).a,  phi);	  return    fit(new    ParameterGuesser(getObservations())).a,    omega);    	non-compiled	[CE]  ';'  expected	80	None	replace
273	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations.length);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations.length);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations.length);	  return    fit(new    ParameterGuesser(getObservations())).a,    omega);    	non-compiled	[CE]  ';'  expected	80	None	replace
274	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations)).a,  omega);  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations)).a,  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations)).a,  omega);	  return    fit(new    ParameterGuesser(getObservations())).a,    omega);    	non-compiled	[CE]  ';'  expected	80	None	replace
275	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
277	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).a.guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).a.guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).a.guess();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
278	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).as();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).as();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
279	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).correct();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).correct();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).correct();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
280	[BUG]  [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  instanceof  HarmonicFitter)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  inconvertible  types	153	None	replace
281	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations()).guess();  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations()).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations()).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  ')'  expected	153	None	replace
282	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
283	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
284	[BUG]  [BUGGY]  if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  ==  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  missing  return  statement	45	None	replace
285	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  observations)).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations(),  observations)).guess();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
286	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  observations.length)).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  observations.length)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations(),  observations.length)).guess();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
287	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).as();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations())).as();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
288	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations,  this.a)).weight();  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations,  this.a)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations,  this.a)).weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	115	None	replace
289	[BUG]  [BUGGY]  return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  new  ParameterGuesser(this.observations).weight();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  new  ParameterGuesser(this.observations).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  new  ParameterGuesser(this.observations).weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  ')'  expected	115	None	replace
290	[BUG]  [BUGGY]  return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  this.weight();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  this.weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations  ==  null?  new  ParameterGuesser(this.observations):  this.weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  ')'  expected	115	None	replace
291	[BUG]  [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observations,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observations,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  new  ParameterGuesser(this.observations,  getObservations()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
292	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getNormalizedFitter()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getNormalizedFitter()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getNormalizedFitter()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
293	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getNormalizedPoint()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getNormalizedPoint()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getNormalizedPoint()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
294	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getStandardObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getStandardObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getStandardObservations()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
295	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).a);  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length  +  1)).a);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).a);    	non-compiled	[CE]  ';'  expected	29	None	replace
296	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations.length);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations.length);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).as(),  omega,  observations.length);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
297	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  a);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as(),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).as(),  a);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
298	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as()  /  omega);  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as()  /  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).as()  /  omega);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
299	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  observations)).guess();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEmptyPoints(),  observations)).guess();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
300	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservedPoints())).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservedPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservedPoints())).guess();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
301	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  observations.length)).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  observations.length)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEmptyPoints(),  observations.length)).guess();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
302	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  a)).as());  [CE]  cannot  find  symbol  a  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  a)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  a)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  a	150	None	replace
303	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  ARRAY)).as());  [CE]  cannot  find  symbol  ARRAY  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  ARRAY)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  ARRAY)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  ARRAY	150	None	replace
304	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  annotated)).as());  [CE]  cannot  find  symbol  annotated  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  annotated)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  annotated)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  annotated	150	None	replace
305	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  phi)).as());  [CE]  cannot  find  symbol  phi  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  phi)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  phi)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  phi	150	None	replace
306	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  '	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	128	None	replace
307	[BUG]  [BUGGY]  ((  ParameterGuesser(getObservations())).guess();  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  ParameterGuesser(getObservations())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ')'  expected	119	None	replace
308	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());  [CE]  ')'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  ')'  expected	143	None	replace
309	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations(),  observations),  omega).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  ';'  expected	143	None	replace
310	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega));  [CE]  ')'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  omega));	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  ')'  expected	143	None	replace
311	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint(),  observations)).guess());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint(),  observations)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint(),  observations)).guess());	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
312	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).as());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint())).as());	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
313	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint(),  getFixedPoint())).guess());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint(),  getFixedPoint())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint(),  getFixedPoint())).guess());	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
314	[BUG]  [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
315	[BUG]  [BUGGY]  FitterTraversal.traverse(compiler,  this,  points,  a);  [CE]  cannot  find  symbol  compiler  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(compiler,  this,  points,  a);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(compiler,  this,  points,  a);	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  compiler	20	None	replace
316	[BUG]  [BUGGY]  FitterTraversal.traverse(compiler,  points,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(compiler,  points,  this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(compiler,  points,  this);	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  compiler	20	None	replace
317	[BUG]  [BUGGY]  return(new  ParameterGuesser(getReturnPoint())).guess();  new  ParameterGuesser(getReturnPoint())).guess();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getReturnPoint())).guess();  new  ParameterGuesser(getReturnPoint())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getReturnPoint())).guess();  new  ParameterGuesser(getReturnPoint())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	151	None	replace
318	[BUG]  [BUGGY]  (new  ParameterGuesser(getObservations())).guess();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	(new  ParameterGuesser(getObservations())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  missing  return  statement	42	None	replace
319	[BUG]  [BUGGY]  if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
320	[BUG]  [BUGGY]  WeightedObservedPoint[]  observers  =  getFixedObservations();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observers  =  getFixedObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observers  =  getFixedObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
321	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getFixedObservations();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getFixedObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getFixedObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
322	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFastFixedObservations();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFastFixedObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFastFixedObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
323	[BUG]  [BUGGY]  while(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
324	[BUG]  [BUGGY]  while(Points.length!=  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(Points.length!=  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(Points.length!=  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
325	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {	  for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  points.length  -  1;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  points.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  measurements.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  measurements.length;  ++i)  {	  for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
328	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  this.points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  this.points.length;  ++i)  {	  for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
329	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    Point    phi    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
330	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	6	None	replace
331	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
332	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
333	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  i++)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
335	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
336	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.parameters));  [CE]  cannot  find  symbol  parameters  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.parameters));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this.parameters));	  return    fit(new    ParameterGuesser(getObservations(),    observations));    	non-compiled	[CE]  cannot  find  symbol  parameters	62	None	replace
337	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  measurements));  [CE]  cannot  find  symbol  measurements  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  measurements));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  measurements));	  return    fit(new    ParameterGuesser(getObservations(),    observations));    	non-compiled	[CE]  cannot  find  symbol  measurements	62	None	replace
338	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.observingPoints));  [CE]  cannot  find  symbol  observingPoints  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.observingPoints));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this.observingPoints));	  return    fit(new    ParameterGuesser(getObservations(),    observations));    	non-compiled	[CE]  cannot  find  symbol  observingPoints	62	None	replace
339	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).a);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).a);	  return((    new    ParameterGuesser(getObservations())).a.guess());    	non-compiled	[CE]  incompatible  types	34	None	replace
340	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).a,  omega.guess());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).a,  omega.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).a,  omega.guess());	  return((    new    ParameterGuesser(getObservations())).a.guess());    	non-compiled	[CE]  ')'  expected	34	None	replace
341	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).a,  Omega.guess());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).a,  Omega.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).a,  Omega.guess());	  return((    new    ParameterGuesser(getObservations())).a.guess());    	non-compiled	[CE]  ')'  expected	34	None	replace
342	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {	  if(points!=    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
343	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {	  if(points!=    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
344	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {	  if(points!=    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
345	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).weight(),  omega);  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).weight(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).weight(),  omega);	  return((    new    ParameterGuesser(getObservations())).weight());    	non-compiled	[CE]  ')'  expected	103	None	replace
346	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).weight());  [CE]  cannot  find  symbol  omega  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  omega)).weight());	  return((    new    ParameterGuesser(getObservations())).weight());    	non-compiled	[CE]  cannot  find  symbol  omega	103	None	replace
347	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).weight(),  Omega);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).weight(),  Omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).weight(),  Omega);	  return((    new    ParameterGuesser(getObservations())).weight());    	non-compiled	[CE]  ')'  expected	103	None	replace
348	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints());	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  ';'  expected	144	None	replace
349	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
350	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).missingPoints(),  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  ';'  expected	144	None	replace
351	[BUG]  [BUGGY]  if(workers  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(workers  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(workers  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
352	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega)).a;  [CE]  cannot  find  symbol  omega  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega)).a;  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega)).a;	  return    fit(new    ParameterGuesser(getObservations(),    omega)).a);    	non-compiled	[CE]  cannot  find  symbol  omega	27	None	replace
353	[BUG]  [BUGGY]  FitterTraversal.traverse(compiler,  new  HarmonicFitter());  [CE]  cannot  find  symbol  compiler  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  FitterTraversal.traverse(compiler,  new  HarmonicFitter());  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	FitterTraversal.traverse(compiler,  new  HarmonicFitter());	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  compiler	130	None	replace
354	[BUG]  [BUGGY]  Context.checkState(points.length  ==  1);  [CE]  cannot  find  symbol  points  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Context.checkState(points.length  ==  1);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Context.checkState(points.length  ==  1);	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	130	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  observations.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  weightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  observations.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
359	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getStandardObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
360	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
361	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeavingPoints();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
362	[BUG]  [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.points,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.points,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  new  ParameterGuesser(this.points,  getObservations()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
363	[BUG]  [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observings,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.observings,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  new  ParameterGuesser(this.observings,  getObservations()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
364	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getBase()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getBase()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getBase()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
365	[BUG]  [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.plugins,  getObservations()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  new  ParameterGuesser(this.plugins,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  new  ParameterGuesser(this.plugins,  getObservations()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
366	[BUG]  [BUGGY]  safeMultiply(getObservedPoints())).guess();  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeMultiply(getObservedPoints())).guess();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeMultiply(getObservedPoints())).guess();	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
367	[BUG]  [BUGGY]  safeMultiply(getObservedPoints());  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeMultiply(getObservedPoints());  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeMultiply(getObservedPoints());	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
368	[BUG]  [BUGGY]  safeMultiply(getObserves())).guess();  [CE]  ';'  expected  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeMultiply(getObserves())).guess();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeMultiply(getObserves())).guess();	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
369	[BUG]  [BUGGY]  safeMultiply(getObservedPoints()));  [CE]  ';'  expected  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeMultiply(getObservedPoints()));  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeMultiply(getObservedPoints()));	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  ';'  expected	24	None	replace
370	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardFitters();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardFitters();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardFitters();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
371	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardFitter();  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardFitter();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getFitter();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
372	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess();  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ')'  expected	106	None	replace
373	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess();  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	106	None	replace
374	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardArgs())).guess());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardArgs())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardArgs())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    return((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
375	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.  omega,  getObservations()));  [CE]  cannot  find  symbol  omega  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.  omega,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.  omega,  getObservations()));	  return    fit(new    ParameterGuesser(a,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol  omega	109	None	replace
376	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(this);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(this);	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
377	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
378	[BUG]  [BUGGY]  return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.weight();  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	115	None	replace
379	[BUG]  [BUGGY]  return(this.observations  ==  null)?  new  ParameterGuesser(this.observations):  this.weight();  [CE]  observations  has  private  access  in  CurveFitter  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations  ==  null)?  new  ParameterGuesser(this.observations):  this.weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations  ==  null)?  new  ParameterGuesser(this.observations):  this.weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	115	None	replace
380	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations,  this.  omega)).weight();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations,  this.  omega)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations,  this.  omega)).weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	115	None	replace
381	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator().next();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator().next();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator().next();	  if(points!=    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
382	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).weight();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).weight();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
383	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).asSequence();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).asSequence();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).asSequence();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
384	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).guess());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations())).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
385	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).doubleValue());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).doubleValue());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).doubleValue());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
386	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).guess());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getFitter())).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
387	[BUG]  [BUGGY]  while(observations!=  null  &&  getObservations().length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null  &&  getObservations().length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null  &&  getObservations().length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
388	[BUG]  [BUGGY]  while(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
389	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
390	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
391	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  observations);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  observations);	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
392	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  omega);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).weight(),  omega);	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
393	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).a.clone());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).a.clone());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).a.clone());	  return((    new    ParameterGuesser(getObservations())).a.guess());    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
394	[BUG]  [BUGGY]  &&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  &&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	&&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
395	[BUG]  [BUGGY]  &&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  &&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	&&  points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
396	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  (new  ParameterGuesser(getFixedPoints())).guess();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  (new  ParameterGuesser(getFixedPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFixedPoints())).guess();  (new  ParameterGuesser(getFixedPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
397	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  (new  ParameterGuesser(getEdge())).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  (new  ParameterGuesser(getEdge())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdge())).guess();  (new  ParameterGuesser(getEdge())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
398	[BUG]  [BUGGY]  return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations!=  null)?  new  ParameterGuesser(this.observations):  this.guess();	  return(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	54	None	replace
399	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
400	[BUG]  [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
401	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
403	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).weight());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).weight());	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
404	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).a);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).a);	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
405	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    ((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ')'  expected	35	None	replace
406	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  getObservations())).as();  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  getObservations())).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  getObservations())).as();	  return(new    ParameterGuesser(getObservations())).as();    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	57	None	replace
407	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFixedPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
408	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFieldType())).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFieldType())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFieldType())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
409	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[reportingPoints.size()  ]);  [CE]  cannot  find  symbol  reportingPoints  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[reportingPoints.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[reportingPoints.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  reportingPoints	14	None	replace
410	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  observations.length)).a);  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  observations.length)).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations(),  observations.length)).a);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).a);    	non-compiled	[CE]  ';'  expected	29	None	replace
411	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints(),  observations.length)).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints(),  observations.length)).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoints(),  observations.length)).a);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).a);    	non-compiled	[CE]  ';'  expected	29	None	replace
412	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observingPoints);  [CE]  cannot  find  symbol  observingPoints  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observingPoints);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this.observingPoints);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(required);    	non-compiled	[CE]  cannot  find  symbol  observingPoints	158	None	replace
413	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a);  [CE]  ')'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  a);	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  ')'  expected	81	None	replace
414	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  this);  [CE]  no  suitable  method  found  for  fit(ParameterGuesser,HarmonicFitter)  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations()),  this);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations()),  this);	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  no  suitable  method  found  for  fit(ParameterGuesser,HarmonicFitter)	81	None	replace
415	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getSingleFitter();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getSingleFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getSingleFitter();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
416	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).weight());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints())).weight());	  return((    new    ParameterGuesser(getReturnPoints())).guess());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
417	[BUG]  [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
418	[BUG]  [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
420	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  parameters));  [CE]  cannot  find  symbol  parameters  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  parameters));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  parameters));	  return    fit(new    ParameterGuesser(getObservations(),    observations));    	non-compiled	[CE]  cannot  find  symbol  parameters	62	None	replace
421	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(this);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedObservations().toArray(this);	  WeightedObservedPoint[]    observations    =    getFixedObservations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
422	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.points.length;  i  <  len;  i++)  {  }  [CE]  cannot  find  symbol  points  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  this.points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  this.points.length;  i  <  len;  i++)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	154	None	replace
423	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  i++)  {  }  [CE]  missing  return  statement  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  i++)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  missing  return  statement	154	None	replace
424	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  observation)).guess();  [CE]  cannot  find  symbol  observation  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  observation)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  observation)).guess();	  return(new    ParameterGuesser(this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observation	113	None	replace
425	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
426	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getWeightedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getWeightedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getWeightedObservations();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
427	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  +  1);  new  ParameterGuesser(getObservations())).guess();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  +  1);  new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess()  +  1);  new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
428	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess());  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess()  &&  new  ParameterGuesser(getObservations())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
429	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).as(),  omega);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).as(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations())).as(),  omega);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
430	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).as(),  omega);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getFitter())).as(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getFitter())).as(),  omega);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
431	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).a,  omega,  observations);	  return    fit(new    ParameterGuesser(getObservations())).a,    omega);    	non-compiled	[CE]  ';'  expected	80	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
433	[BUG]  [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
434	[BUG]  [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
435	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  points  =  getObservations().iterator();	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
436	[BUG]  [BUGGY]  if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess());  }  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess());  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess());  }	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ')'  expected	36	None	replace
437	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess();  (new  ParameterGuesser(getObservations())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ')'  expected	36	None	replace
438	[BUG]  [BUGGY]  if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [CE]  cannot  find  symbol  phi  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.phi!=  null)  {  return((  new  ParameterGuesser(getObservations())).guess());  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol  phi	36	None	replace
439	[BUG]  [BUGGY]  return  fit(getFixedPoints(),  new  ParameterGuesser(getFixedPoints())).guess());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getFixedPoints(),  new  ParameterGuesser(getFixedPoints())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getFixedPoints(),  new  ParameterGuesser(getFixedPoints())).guess());	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	47	None	replace
440	[BUG]  [BUGGY]  return  fit(getFixedPoint(),  new  ParameterGuesser(getFixedPoint())).guess());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getFixedPoint(),  new  ParameterGuesser(getFixedPoint())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getFixedPoint(),  new  ParameterGuesser(getFixedPoint())).guess());	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	47	None	replace
441	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess();  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getStandardObservations())).guess();	  return    fit(getStandardObservations(),    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
442	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoints()).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoints()).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  getReturnPoints()).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    getObservations()).a);    	non-compiled	[CE]  ';'  expected	30	None	replace
443	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  return	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    return    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
444	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  omega));  [CE]  cannot  find  symbol  omega  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getObservations(),  omega));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getObservations(),  omega));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol  omega	61	None	replace
445	[BUG]  [BUGGY]  return  fit(this,  new  ParameterGuesser(this,  getObservations()));  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this,  new  ParameterGuesser(this,  getObservations()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this,  new  ParameterGuesser(this,  getObservations()));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	61	None	replace
446	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).reason());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).reason());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).reason());	  return    fit((    new    ParameterGuesser(getStandardObservations())),    observations).guess());    	non-compiled	[CE]  ';'  expected	48	None	replace
447	[BUG]  [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
448	[BUG]  [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getObservations())).guess	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  ';'  expected	153	None	replace
449	[BUG]  [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  omega.length;  ++i)  {  return(new  ParameterGuesser(getEmbeddedPoint())).guess  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  omega.length;  ++i)  {  return(new  ParameterGuesser(getEmbeddedPoint())).guess  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()  instanceof  HarmonicFitter)  {  double[]  omega  =  new  double[getObservations().size()  ];  for(int  i  =  0;  i  <  omega.length;  ++i)  {  return(new  ParameterGuesser(getEmbeddedPoint())).guess	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  ';'  expected	153	None	replace
450	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAndOrClearObservations();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAndOrClearObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAndOrClearObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrClearObservations();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
451	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
452	[BUG]  [BUGGY]  this.points  =  new  WeightedObservedPoint[points.length];  [CE]  cannot  find  symbol  points  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  this.points  =  new  WeightedObservedPoint[points.length];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	this.points  =  new  WeightedObservedPoint[points.length];	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	23	None	replace
453	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEmptyPoints())).weight();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEmptyPoints())).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEmptyPoints())).weight();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
454	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEmptyPoints())).a.guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEmptyPoints())).a.guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEmptyPoints())).a.guess();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
455	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdge())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
456	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  a).guess());  [CE]  ')'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  a).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  a).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  ')'  expected	143	None	replace
457	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).a);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).a);	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
458	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).weight());  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).weight());	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
459	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAndCreateObservations();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAndCreateObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAndCreateObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getOrCreateObservations();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
460	[BUG]  [BUGGY]  return  fit(this,  new  ParameterGuesser(this,  getObservations())).guess();  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this,  new  ParameterGuesser(this,  getObservations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this,  new  ParameterGuesser(this,  getObservations())).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	116	None	replace
461	[BUG]  [BUGGY]  if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length!=  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
462	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getParameters();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getParameters();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getParameters();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
463	[BUG]  [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  ';'  expected	59	None	replace
464	[BUG]  [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  }  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  ++i)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  ';'  expected	59	None	replace
465	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  a);  [CE]  cannot  find  symbol  a  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  a);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[0],  a);	  WeightedObservedPoint[]    observations    =    getObservations().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol  a	121	None	replace
466	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).weight());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardObservations())).weight());	  return((    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
467	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).a);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardObservations())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardObservations())).a);	  return((    new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
468	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  it  =  points.iterator();  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  it  =  points.iterator();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  it  =  points.iterator();	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
469	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  it  =  observations.iterator();  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  it  =  observations.iterator();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  it  =  observations.iterator();	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
470	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(this);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
471	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  true);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  true);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  true);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(this);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
472	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations()),  a).weight());  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations()),  a).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations()),  a).weight());	  return((    new    ParameterGuesser(getObservations())).weight());    	non-compiled	[CE]  ')'  expected	103	None	replace
473	[BUG]  [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  weightedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [CE]  cannot  find  symbol  [FE]        [CONTEXT]      public  double[]  fit()  {      [BUGGY]          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]  observers  =  getObservations();  weightedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	                WeightedObservedPoint[]        observations        =        getObservations();        WeightedObservedPoint[]    observers    =    getObservations();    weightedPoint[]  observations  =  getObservations();  WeightedObservedPoint[]  observers  =  getObservations();	  	non-compiled	[CE]  cannot  find  symbol	148	None	add
474	[BUG]  [BUGGY]  weightedObservedPoint[]  points  =  new  WeightedObservedPoint[0];  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  points  =  new  WeightedObservedPoint[0];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  points  =  new  WeightedObservedPoint[0];	  weightedObservedPoint[]    points    =    new    WeightedObservedPoint[1];    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
475	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this)).guess();  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	51	None	replace
476	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  weight)).guess();  [CE]  cannot  find  symbol  weight  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  weight)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  weight)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  weight	51	None	replace
477	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  weightedPoint)).guess();  [CE]  cannot  find  symbol  weightedPoint  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  weightedPoint)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  weightedPoint)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  weightedPoint	51	None	replace
478	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  this).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  this).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations),  this).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	52	None	replace
479	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length)).a;  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length)).a;  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length)).a;	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
480	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this.a);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this.a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length),  this.a);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
481	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length    	non-compiled	[CE]  ';'  expected	131	None	replace
482	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  a);  [CE]  cannot  find  symbol  a  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  a);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[0],  a);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[0]);    	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
483	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  new  ParameterGuesser(getFixedPoints())).guess();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFixedPoints())).guess();  new  ParameterGuesser(getFixedPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFixedPoints())).guess();  new  ParameterGuesser(getFixedPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	151	None	replace
484	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  new  ParameterGuesser(getEdge())).guess();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  new  ParameterGuesser(getEdge())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdge())).guess();  new  ParameterGuesser(getEdge())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	151	None	replace
485	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).guess();  new  ParameterGuesser(getFitter())).guess();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).guess();  new  ParameterGuesser(getFitter())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).guess();  new  ParameterGuesser(getFitter())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	151	None	replace
486	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
487	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getShapes();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getShapes();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getShapes();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
488	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
489	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
490	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
491	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
492	[BUG]  [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
493	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i)	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
494	[BUG]  [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.observations!=  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
495	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [CE]  ')'  expected  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  ')'  expected	92	None	replace
496	[BUG]  [BUGGY]  if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
497	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(this);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(this);	  WeightedObservedPoint[]    observations    =    getFixedPoints();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
498	[BUG]  [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
499	[BUG]  [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
500	[BUG]  [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObserves())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
501	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  points  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  this.points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  this.points.length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	155	None	replace
502	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  ++i)  {  }  [CE]  missing  return  statement  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  getObservations().length;  i  <  len;  ++i)  {  }	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  missing  return  statement	155	None	replace
503	[BUG]  [BUGGY]  ((  HarmonicFitter)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  HarmonicFitter)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  HarmonicFitter)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
504	[BUG]  [BUGGY]  ((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  get	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
505	[BUG]  [BUGGY]  ((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  ((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	((  HarmonicFitter  <  WeightedPoint>)points).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObserv	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
506	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
507	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
508	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
509	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
510	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  p)).as());  [CE]  cannot  find  symbol  p  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  p)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  p)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  p	150	None	replace
511	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations()),  omega,  observations).a);  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations()),  omega,  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations()),  omega,  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  ';'  expected	82	None	replace
512	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getFitter()),  omega,  observations).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getFitter()),  omega,  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getFitter()),  omega,  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  ';'  expected	82	None	replace
513	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).weight());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint())).weight());	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
514	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).a);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint())).a);	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
515	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).a.guess());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getFixedPoint())).a.guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getFixedPoint())).a.guess());	  return((    new    ParameterGuesser(getFixedPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
516	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotations));  [CE]  cannot  find  symbol  annotations  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotations));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  annotations));	  return    fit(new    ParameterGuesser(getObservations(),    omega));    	non-compiled	[CE]  cannot  find  symbol  annotations	60	None	replace
517	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this));  [CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this));	  return    fit(new    ParameterGuesser(getObservations(),    omega));    	non-compiled	[CE]  constructor  ParameterGuesser  in  class  ParameterGuesser  cannot  be  applied  to  given  types;	60	None	replace
518	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this);  [CE]  cannot  find  symbol  omega  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  this);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  this);	  return    fit(new    ParameterGuesser(getObservations(),    omega)).a);    	non-compiled	[CE]  cannot  find  symbol  omega	27	None	replace
519	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).weight());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoint())).weight());	  return((    new    ParameterGuesser(getReturnPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
520	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).a);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoint())).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoint())).a);	  return((    new    ParameterGuesser(getReturnPoint())).guess());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
521	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
522	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getEquivalentObservations();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getEquivalentObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getEquivalentObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    weightedObservedPoint[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
523	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i)  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i)  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i)	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
524	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
525	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  measurements.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
526	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
527	[BUG]  [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	While(this.observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  ';'  expected	125	None	replace
528	[BUG]  [BUGGY]  While(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  While(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	While(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  ';'  expected	125	None	replace
529	[BUG]  [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	While(this.observations!=  null)  {  for(int  i  =  0;  i  <  this.observations.length;  i++)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  ';'  expected	125	None	replace
530	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue();  [CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getObservations())).doubleValue();	  return    fit(getObservations(),    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)	66	None	replace
531	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).toString());  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).toString());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).toString());	  return((    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  incompatible  types	31	None	replace
532	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[results.size()  ]);	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol  results	18	None	replace
533	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);  [CE]  cannot  find  symbol  temps  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[temps.size()  ]);	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol  temps	18	None	replace
534	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(this);  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(this);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(this);	  WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
535	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[0]);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[0]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[0]);	  WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
536	[BUG]  [BUGGY]  return  get(new  ParameterGuesser(this.observations)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  get(new  ParameterGuesser(this.observations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  get(new  ParameterGuesser(this.observations)).guess();	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
537	[BUG]  [BUGGY]  return  fit(this.observations,  adjuster).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(this.observations,  adjuster).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(this.observations,  adjuster).guess();	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
538	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).as());  [CE]  ';'  expected  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
539	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).doubleValue());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).doubleValue());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).doubleValue());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
540	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as();  [CE]  no  suitable  method  found  for  fit(ParameterGuesser)  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).as();	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  no  suitable  method  found  for  fit(ParameterGuesser)	64	None	replace
541	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEvaluations())).as());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEvaluations())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEvaluations())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
542	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getReferences().size()  ]);  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getReferences().size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[getReferences().size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[references.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
543	[BUG]  [BUGGY]  return(new  ParameterGuesser(getSingleFitter())).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getSingleFitter())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getSingleFitter())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
544	[BUG]  [BUGGY]  return(new  ParameterGuesser(getNegativePoints())).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getNegativePoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getNegativePoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
545	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  omega);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  omega);	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
546	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).missingPoints());  [CE]  ';'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).missingPoints());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).missingPoints());	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  ';'  expected	144	None	replace
547	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  Omega);  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  Omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).missingPoints(),  Omega);	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
548	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFixedObservations();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
549	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  observations)).a);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  observations)).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations(),  observations)).a);	  return    fit(new    ParameterGuesser(getObservations(),    observations)).a);    	non-compiled	[CE]  ';'  expected	28	None	replace
550	[BUG]  [BUGGY]  if(Points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(observations!=    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
551	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  omega)).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations(),  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations(),  omega)).guess();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
552	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).weight();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations())).weight();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
553	[BUG]  [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).a.guess();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getStandardObservations())).a.guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getStandardObservations())).a.guess();	  return(new    ParameterGuesser(getStandardObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
554	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  omega),  observations).a);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEndObservations(),  omega),  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEndObservations(),  omega),  observations).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  ';'  expected	133	None	replace
555	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints(),  omega),  observations).a);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints(),  omega),  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoints(),  omega),  observations).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  ';'  expected	133	None	replace
556	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getEdge())).guess());  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getEdge())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getEdge())).guess());	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
557	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getObservations())).guess());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdge())).guess();  ((  ParameterGuesser(getObservations())).guess());	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
558	[BUG]  [BUGGY]  if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getParameters()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
559	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).a,  omega);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())).a,  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())).a,  omega);	  return    fit((    new    ParameterGuesser(getStandardObservations())).a);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
560	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  omega);  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  omega);	  return    fit((    new    ParameterGuesser(getStandardObservations())).a);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
561	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getMean()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getMean()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getMean()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
562	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getSlope()));  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this.observations,  getSlope()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this.observations,  getSlope()));	  return    fit(new    ParameterGuesser(this.observations,    getObservations()));    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	108	None	replace
563	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	135	None	replace
564	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  '	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	135	None	replace
565	[BUG]  [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i!=  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i!=  '	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	135	None	replace
566	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected  [CE]  not  a  statement  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  expected	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	135	None	replace
567	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations())).toString();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations())).toString();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations())).toString();	  return(new    ParameterGuesser(getObservations())).as();    	non-compiled	[CE]  incompatible  types	57	None	replace
568	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints(),  getReturnPoints())).guess());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints(),  getReturnPoints())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints(),  getReturnPoints())).guess());	  return((    new    ParameterGuesser(getReturnPoints())).guess());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
569	[BUG]  [BUGGY]  if(points  ==  null  ||  points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null  ||  points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null  ||  points.length!=  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
570	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getStandardObservations().toArray(new  WeightedObservedPoint[results.size()  ]);	  WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol  results	16	None	replace
571	[BUG]  [BUGGY]  if(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length  ==  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  }	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
572	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).guess();  [CE]  cannot  find  symbol  omega  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  omega)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  cannot  find  symbol  omega	56	None	replace
573	[BUG]  [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observationSize)).guess();  [CE]  cannot  find  symbol  observationSize  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getObservations(),  this,  observationSize)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getObservations(),  this,  observationSize)).guess();	  return(new    ParameterGuesser(getObservations(),    this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observationSize	56	None	replace
574	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  a);  [CE]  cannot  find  symbol  omega  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  a);	  return    fit(new    ParameterGuesser(getObservations(),    omega)).a);    	non-compiled	[CE]  cannot  find  symbol  omega	27	None	replace
575	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  annotations)).as());  [CE]  cannot  find  symbol  annotations  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  annotations)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  annotations)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  annotations	150	None	replace
576	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  gesunde)).as());  [CE]  cannot  find  symbol  gesunde  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations(),  gesunde)).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations(),  gesunde)).as());	  return    fit((    new    ParameterGuesser(getObservations(),    omega)).as());    	non-compiled	[CE]  cannot  find  symbol  gesunde	150	None	replace
577	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint(),  omega),  observations).a);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint(),  omega),  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoint(),  omega),  observations).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    observations).a);    	non-compiled	[CE]  ';'  expected	133	None	replace
578	[BUG]  [BUGGY]  while(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
579	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdge())).fitter());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdge())).fitter());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdge())).fitter());	  return((    new    ParameterGuesser(getEdge())).guess());    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
580	[BUG]  [BUGGY]  &&  points.length  >  0)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  &&  points.length  >  0)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	&&  points.length  >  0)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
581	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  a);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations),  a);	  return    fit(new    ParameterGuesser(getObservations(),    observations)).a);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	28	None	replace
582	[BUG]  [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  }	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
583	[BUG]  [BUGGY]  return(new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getReturnPoints())).guess();  new  ParameterGuesser(getReturnPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ';'  expected	151	None	replace
584	[BUG]  [BUGGY]  return(new  ParameterGuesser(getReturnPoints())).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getReturnPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
585	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  (new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    (new    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  missing  return  statement	42	None	replace
586	[BUG]  [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  points.length;  ++i)  {	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
587	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotations)).guess();  [CE]  cannot  find  symbol  annotations  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  annotations)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  annotations)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    omega)).guess();    	non-compiled	[CE]  cannot  find  symbol  annotations	51	None	replace
588	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[references.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getAllObservations().toArray(new  WeightedObservedPoint[references.size()  ]);	  WeightedObservedPoint[]    observations    =    getAllObservations();    	non-compiled	[CE]  cannot  find  symbol  references	18	None	replace
589	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length    	non-compiled	[CE]  ';'  expected	131	None	replace
590	[BUG]  [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  }	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
591	[BUG]  [BUGGY]  if(hasParameters())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasParameters())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasParameters())  {  for(int  i  =  0;  i  <  pools.length;  ++i)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
592	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getBase();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
593	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFields();  for(int  j  =  0;  j  <  points.length;  ++j)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    j    =    0;    j    <    points.length;    ++j)    {    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
594	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.a));  [CE]  cannot  find  symbol  a  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.a));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this.a));	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  cannot  find  symbol  a	81	None	replace
595	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observers));  [CE]  cannot  find  symbol  observers  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observers));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observers));	  return    fit(new    ParameterGuesser(getObservations()),    omega);    	non-compiled	[CE]  cannot  find  symbol  observers	81	None	replace
596	[BUG]  [BUGGY]  if(getObservedPoints()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getObservedPoints()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getObservedPoints()!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
597	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  [CE]  not  a  statement  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')'	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  not  a  statement	134	None	replace
598	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')  [CE]  unclosed  character  literal  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  >=  ')	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i    	non-compiled	[CE]  unclosed  character  literal	134	None	replace
599	[BUG]  [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(hasObservedPoints())  {  for(int  i  =  0;  i  <  pools.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
600	[BUG]  [BUGGY]  &&  pools!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  &&  pools!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	&&  pools!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
601	[BUG]  [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [CE]  ')'  expected  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  ')'  expected	92	None	replace
602	[BUG]  [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  pools  =  getObservedPoints();  for(int  i  =  0;  i  <  pools.length;	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pools    =    getObservedPoints();    for(int    i    =    0;    i    <    pools.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
603	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    return    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
604	[BUG]  [BUGGY]  if(points  ==  null  ||  points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points  ==  null  ||  points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points  ==  null  ||  points.length  ==  0)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(points    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
605	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).guess());  new  ParameterGuesser(getReturnPoints())).guess();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getReturnPoints())).guess());  new  ParameterGuesser(getReturnPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getReturnPoints())).guess());  new  ParameterGuesser(getReturnPoints())).guess();	  return((    new    ParameterGuesser(getObservations())).guess());    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  ';'  expected	107	None	replace
606	[BUG]  [BUGGY]  return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  new  double[0];  [CE]  observations  has  private  access  in  CurveFitter  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  new  double[0];  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  new  double[0];	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
607	[BUG]  [BUGGY]  return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  this.observations;  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  this.observations;  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(this.observations  ==  null)?  fit(new  ParameterGuesser(this.observations)).guess()  :  this.observations;	  return    fit(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	117	None	replace
608	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega)).guess();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length,  omega)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
609	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length)).as();  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length)).as();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length)).as();	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	53	None	replace
610	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getObservation();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getObservation();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getObservation();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getObservation();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
611	[BUG]  [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(answers!=  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  if(answers    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
612	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).as());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getStandardObservations())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getStandardObservations())).as());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
613	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservedPoints())).guess());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservedPoints())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservedPoints())).guess());	  return    fit(new    ParameterGuesser(getStandardObservations())).guess());    	non-compiled	[CE]  ';'  expected	46	None	replace
614	[BUG]  [BUGGY]  weightedObservedPoint[]  observations  =  getObservations();  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  weightedObservedPoint[]  observations  =  getObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	weightedObservedPoint[]  observations  =  getObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    weightedObservedPoint[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
615	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  observations  =  this.observations.iterator();  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  observations  =  this.observations.iterator();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  observations  =  this.observations.iterator();	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
616	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
617	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getSlopes();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getSlopes();  for(int  i  =  0;  i  <  points.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getSlopes();  for(int  i  =  0;  i  <  points.length;  ++i)  {	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
618	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints())).as());  [CE]  ';'  expected  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoints())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
619	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEmptyPoints())).as());  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEmptyPoints())).as());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEmptyPoints())).as());	  return    fit(new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  ';'  expected	64	None	replace
620	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdges())).guess();  ((  ParameterGuesser(getEdges())).guess());  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdges())).guess();  ((  ParameterGuesser(getEdges())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdges())).guess();  ((  ParameterGuesser(getEdges())).guess());	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  not  a  statement	43	None	replace
621	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEdges())).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEdges())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEdges())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
622	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getEdges())).guess());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getEdges())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getEdges())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    return((    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
623	[BUG]  [BUGGY]  int  len  =  points.length;  [CE]  cannot  find  symbol  points  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  int  len  =  points.length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	int  len  =  points.length;	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	130	None	replace
624	[BUG]  [BUGGY]  int  len  =  points.length  -  1;  [CE]  cannot  find  symbol  points  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  int  len  =  points.length  -  1;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	int  len  =  points.length  -  1;	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	130	None	replace
625	[BUG]  [BUGGY]  safeFitter();  [CE]  cannot  find  symbol  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeFitter();	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
626	[BUG]  [BUGGY]  safeFitter  =  getFitter();  [CE]  cannot  find  symbol  safeFitter  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  safeFitter  =  getFitter();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	safeFitter  =  getFitter();	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol  safeFitter	130	None	replace
627	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.objects.size()  ]);  [CE]  cannot  find  symbol  objects  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.objects.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(new  WeightedObservedPoint[this.objects.size()  ]);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(new    WeightedObservedPoint[temps.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  objects	14	None	replace
628	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getStandardArguments()).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  omega),  getStandardArguments()).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  omega),  getStandardArguments()).a);	  return    fit(new    ParameterGuesser(getObservations(),    omega),    getObservations()).a);    	non-compiled	[CE]  ';'  expected	30	None	replace
629	[BUG]  [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	(new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
630	[BUG]  [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	(new  ParameterGuesser(this,  getObservations())).guess();  if(points!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
631	[BUG]  [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  (new  ParameterGuesser(this,  getObservations())).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	(new  ParameterGuesser(this,  getObservations())).guess();  if(getObservations()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservedPoints()	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservedPoints();    if(points!=    null)    {    return(new    ParameterGuesser(    	non-compiled	[CE]  ';'  expected	120	None	replace
632	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter(),  omega)).guess();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter(),  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter(),  omega)).guess();	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
633	[BUG]  [BUGGY]  return(new  ParameterGuesser(getFitter())).passes(this);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getFitter())).passes(this);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getFitter())).passes(this);	  return(new    ParameterGuesser(getFitter())).guess();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
634	[BUG]  [BUGGY]  return(new  ParameterGuesser(this,  observationPoints)).guess();  [CE]  cannot  find  symbol  observationPoints  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this,  observationPoints)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this,  observationPoints)).guess();	  return(new    ParameterGuesser(this)).guess();    	non-compiled	[CE]  cannot  find  symbol  observationPoints	113	None	replace
635	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observationCount);  [CE]  cannot  find  symbol  observationCount  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observationCount);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(this,  observationCount);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(this);    	non-compiled	[CE]  cannot  find  symbol  observationCount	97	None	replace
636	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[6];  [CE]  missing  return  statement  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[6];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  new  WeightedObservedPoint[6];	  WeightedObservedPoint[]    points    =    new    WeightedObservedPoint[3];    	non-compiled	[CE]  missing  return  statement	96	None	replace
637	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint(),  omega,  observations).a);  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoint(),  omega,  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoint(),  omega,  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
638	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints()),  omega,  observations).a);  [CE]  ';'  expected  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints()),  omega,  observations).a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoints()),  omega,  observations).a);	  return    fit(new    ParameterGuesser(getObservations()),    omega,    observations).a);    	non-compiled	[CE]  ';'  expected	82	None	replace
639	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =  [CE]  illegal  start  of  expression  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  Point  phi  =	  if(points    ==    null)    {    for(int    i    =    0,    len    =    observations.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    Point    phi    =    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
640	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getPartialPoints();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getPartialPoints();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getPartialPoints();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getReturnPoints();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
641	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [CE]  cannot  find  symbol  results  [FE]            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[results.size()  ]);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservations().toArray(new  WeightedObservedPoint[results.size()  ]);	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getObservations();    	non-compiled	[CE]  cannot  find  symbol  results	70	None	replace
642	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getFields();  for(int  i  =  0;  i  <  points.length;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
643	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getEvaluations())).guess();  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getEvaluations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getEvaluations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	153	None	replace
644	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getSeconds())).guess();  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getSeconds())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getSeconds())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()    instanceof    ParameterGuesser)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	153	None	replace
645	[BUG]  [BUGGY]  if(Points.length  ==  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length  ==  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length  ==  1)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
646	[BUG]  [BUGGY]  if(Points.length!=  points.length)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(Points.length!=  points.length)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(Points.length!=  points.length)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    points.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
647	[BUG]  [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  points  =  getBase();  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  }	  WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
648	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).weight());  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).weight());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations())),  observations).weight());	  return    fit((    new    ParameterGuesser(getStandardObservations())).weight());    	non-compiled	[CE]  ';'  expected	91	None	replace
649	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).missingPoints());  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).missingPoints());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations)).missingPoints());	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
650	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  getStandardObservations())).missingPoints());  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  getStandardObservations())).missingPoints());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  getStandardObservations())).missingPoints());	  return    fit((    new    ParameterGuesser(getStandardObservations())).missingPoints());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
651	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >=  	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
652	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >>  '  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  ++i  >>  '	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i    	non-compiled	[CE]  illegal  line  end  in  character  literal	128	None	replace
653	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  alignment)).guess();  [CE]  cannot  find  symbol  alignment  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  alignment)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  alignment)).guess();	  return    fit(new    ParameterGuesser(getObservations(),    observations)).guess();    	non-compiled	[CE]  cannot  find  symbol  alignment	52	None	replace
654	[BUG]  [BUGGY]  if(annotationTypes!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(annotationTypes!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(annotationTypes!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
655	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getStandardPoints())).guess());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getStandardPoints())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getStandardPoints())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    if(getObservations()!=    null)    {    return((    new    ParameterGuesser(getObservations())).guess());    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
656	[BUG]  [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(points!=  null)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  ++i)  {  WeightedObservedPoint[]  points  =  getObservations();  for(int  i  =  0;  i  <  points.length;	  if(points    ==    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    WeightedObservedPoint[]    points    =    getObservations();    for(int    i    =    0;    i    <    points.length;    ++i)    {    Point    phi    =    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
657	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(required);  [CE]  cannot  find  symbol  required  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(required);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getWeightedObservations().toArray(required);	  WeightedObservedPoint[]    observations    =    getWeightedObservations();    	non-compiled	[CE]  cannot  find  symbol  required	17	None	replace
658	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getReturnPoints())).guess();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getReturnPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getReturnPoints())).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
659	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getEvaluations())).guess();  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getEvaluations())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getEvaluations())).guess();	  return    fit(new    ParameterGuesser(this,    getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
660	[BUG]  [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  this.points.iterator();  [CE]  cannot  find  symbol  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  Iterator  <  WeightedObservedPoint>  points  =  this.points.iterator();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	Iterator  <  WeightedObservedPoint>  points  =  this.points.iterator();	  if(points!=    null)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
661	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observingPoints)).weight();  [CE]  cannot  find  symbol  observingPoints  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observingPoints)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observingPoints)).weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  cannot  find  symbol  observingPoints	115	None	replace
662	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observings)).weight();  [CE]  cannot  find  symbol  observings  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observings)).weight();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observings)).weight();	  return(new    ParameterGuesser(this.observations)).weight();    	non-compiled	[CE]  cannot  find  symbol  observings	115	None	replace
663	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  phi);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations())).a,  omega,  phi);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations())).a,  omega,  phi);	  return    fit(new    ParameterGuesser(getObservations())).a,    omega);    	non-compiled	[CE]  ';'  expected	80	None	replace
664	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  a);  [CE]  observations  has  private  access  in  CurveFitter  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  observations.length),  a);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  observations.length),  a);	  return    fit(new    ParameterGuesser(getObservations(),    observations.length)).a);    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	29	None	replace
665	[BUG]  [BUGGY]  if(annotationTypes  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(annotationTypes  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(annotationTypes  ==  null)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
666	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(requiredPoints);  [CE]  cannot  find  symbol  requiredPoints  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(requiredPoints);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getFixedPoints().toArray(requiredPoints);	  WeightedObservedPoint[]    observations    =    getFixedPoints();    	non-compiled	[CE]  cannot  find  symbol  requiredPoints	98	None	replace
667	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getPartialObservations();  [CE]  cannot  find  symbol  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getPartialObservations();  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getPartialObservations();	          WeightedObservedPoint[]    observations    =    getObservations();    WeightedObservedPoint[]    observations    =    getStandardObservations();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
668	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&(new  ParameterGuesser(getObservations())).guess());  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations())).guess()  &&(new  ParameterGuesser(getObservations())).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations())).guess()  &&(new  ParameterGuesser(getObservations())).guess());	  return((    new    ParameterGuesser(getObservations())).guess());    (    new    ParameterGuesser(getObservations())).guess());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	36	None	replace
669	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  this).guess());  [CE]  ')'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  this).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getStandardObservations(),  observations),  this).guess());	  return    fit((    new    ParameterGuesser(getStandardObservations(),    observations)).guess());    	non-compiled	[CE]  ')'  expected	143	None	replace
670	[BUG]  [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [CE]  ')'  expected  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces  ==  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  ')'  expected	95	None	replace
671	[BUG]  [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [CE]  ')'  expected  [FE]                            [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(pieces!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  ')'  expected	95	None	replace
672	[BUG]  [BUGGY]  if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [CE]  ')'  expected  [FE]                              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  WeightedObservedPoint[]  pieces  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++i	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    	non-compiled	[CE]  ')'  expected	95	None	replace
673	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(this,  getReturnPoints()));  [CE]  cannot  find  symbol  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(this,  getReturnPoints()));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(this,  getReturnPoints()));	  return    fit(new    ParameterGuesser(this,    getObservations()));    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
674	[BUG]  [BUGGY]  if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(workers!=  null)  {  for(int  i  =  0;  i  <  pieces.length;  i++)  {  }	  if(observations    ==    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    pieces    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
675	[BUG]  [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(a);  [CE]  cannot  find  symbol  a  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(a);  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	WeightedObservedPoint[]  observations  =  getObservedPoints().toArray(a);	  WeightedObservedPoint[]    observations    =    getObservedPoints().toArray(required);    	non-compiled	[CE]  cannot  find  symbol  a	158	None	replace
676	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.observings));  [CE]  cannot  find  symbol  observings  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getObservations(),  this.observings));  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getObservations(),  this.observings));	  return    fit(new    ParameterGuesser(getObservations(),    observations));    	non-compiled	[CE]  cannot  find  symbol  observings	62	None	replace
677	[BUG]  [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess();  }  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  ((  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  ')'  expected	119	None	replace
678	[BUG]  [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [CE]  cannot  find  symbol  phi  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol  phi	119	None	replace
679	[BUG]  [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  phi  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(this.phi!=  null)  {  return(new  ParameterGuesser(getObservations())).guess();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return(new    ParameterGuesser(getObservations())).guess();    ((    ParameterGuesser(getObservations())).guess();    	non-compiled	[CE]  cannot  find  symbol  phi	119	None	replace
680	[BUG]  [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).guess());  [CE]  cannot  find  symbol  omega  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return((  new  ParameterGuesser(getObservations(),  omega)).guess());  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return((  new  ParameterGuesser(getObservations(),  omega)).guess());	  return((    new    ParameterGuesser(getObservations(),    this)).guess());    	non-compiled	[CE]  cannot  find  symbol  omega	33	None	replace
681	[BUG]  [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  omega)).guess();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getEmptyPoints(),  omega)).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getEmptyPoints(),  omega)).guess();	  return(new    ParameterGuesser(getEmptyPoints())).guess();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
682	[BUG]  [BUGGY]  this.observations  =  new  WeightedObservedPoint[8];  [CE]  observations  has  private  access  in  CurveFitter  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  this.observations  =  new  WeightedObservedPoint[8];  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	this.observations  =  new  WeightedObservedPoint[8];	  this.observations    =    new    WeightedObservedPoint[0];    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	138	None	replace
683	[BUG]  [BUGGY]  return(new  ParameterGuesser(this.observations)).correct();  [CE]  observations  has  private  access  in  CurveFitter  [FE]        AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(this.observations)).correct();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(this.observations)).correct();	  return(new    ParameterGuesser(this.observations)).guess();    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	54	None	replace
684	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints())).as(),  omega);  [CE]  ';'  expected  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getReturnPoints())).as(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getReturnPoints())).as(),  omega);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
685	[BUG]  [BUGGY]  return  fit(new  ParameterGuesser(getEmptyPoints())).as(),  omega);  [CE]  ';'  expected  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(new  ParameterGuesser(getEmptyPoints())).as(),  omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(new  ParameterGuesser(getEmptyPoints())).as(),  omega);	  return    fit(new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ';'  expected	65	None	replace
686	[BUG]  [BUGGY]  while(Points.length  >  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(Points.length  >  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(Points.length  >  1)  {  for(int  i  =  0,  len  =  points.length;  i  <  len;  i++)  {  }	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
687	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  }  [CE]  cannot  find  symbol  points  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  }  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0,  len  =  points.length;  i  <  Len;  i++)  {  }	  if(Points.length    ==    1)    {    for(int    i    =    0,    len    =    points.length;    i    <    len;    i++)    {    }    	non-compiled	[CE]  cannot  find  symbol  points	156	None	replace
688	[BUG]  [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).returnNull();  [CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)  [FE]                  [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit(getObservations(),  new  ParameterGuesser(getObservations())).returnNull();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit(getObservations(),  new  ParameterGuesser(getObservations())).returnNull();	  return    fit(getObservations(),    new    ParameterGuesser(getObservations())).as());    	non-compiled	[CE]  no  suitable  method  found  for  fit(WeightedObservedPoint[],ParameterGuesser)	66	None	replace
689	[BUG]  [BUGGY]  return(new  ParameterGuesser(getPoints())).guess();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  ParameterGuesser(getPoints())).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  ParameterGuesser(getPoints())).guess();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
690	[BUG]  [BUGGY]  return(new  WeightedObservedPoint[getObservations()  ]).guess();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  WeightedObservedPoint[getObservations()  ]).guess();  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  WeightedObservedPoint[getObservations()  ]).guess();	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  incompatible  types	44	None	replace
691	[BUG]  [BUGGY]  return(new  WeightedObservedPoint[]  {  getObservations()  }  );  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return(new  WeightedObservedPoint[]  {  getObservations()  }  );  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return(new  WeightedObservedPoint[]  {  getObservations()  }  );	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  incompatible  types	44	None	replace
692	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations()),  omega).as(),  observations);  [CE]  ')'  expected  [FE]              [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations()),  omega).as(),  observations);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations()),  omega).as(),  observations);	  return    fit((    new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  ')'  expected	118	None	replace
693	[BUG]  [BUGGY]  return  fit((  new  ParameterGuesser(getObservations())).as(),  Omega);  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      public  double[]  fit()  {      [BUGGY]  return  fit((  new  ParameterGuesser(getObservations())).as(),  Omega);  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	return  fit((  new  ParameterGuesser(getObservations())).as(),  Omega);	  return    fit((    new    ParameterGuesser(getObservations())).as(),    omega);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
694	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  points.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
695	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  ++	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
696	[BUG]  [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  [CE]  illegal  start  of  expression  [FE]                          [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(observations!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  observations  =  getObservedPoints();  for(int  i  =  0;  i  <  observations.length;	  if(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    observations    =    getObservedPoints();    for(int    i    =    0;    i    <    observations.length;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
697	[BUG]  [BUGGY]  while(observations!=  null  &&  isEnabled(Feature.QUOTE_FIATS))  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null  &&  isEnabled(Feature.QUOTE_FIATS))  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null  &&  isEnabled(Feature.QUOTE_FIATS))  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
698	[BUG]  [BUGGY]  while(observations!=  null  &&  parameters.length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null  &&  parameters.length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null  &&  parameters.length  >  0)  {  for(int  i  =  0;  i  <  observations.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
699	[BUG]  [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observation.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  while(observations!=  null)  {  for(int  i  =  0;  i  <  observation.length;  ++i)  {  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	while(observations!=  null)  {  for(int  i  =  0;  i  <  observation.length;  ++i)  {	  while(observations!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
700	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getImpl())).guess();  }  [CE]  observations  has  private  access  in  CurveFitter  [FE]          AssertionError      [CONTEXT]      public  double[]  fit()  {      [BUGGY]  for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getImpl())).guess();  }  [BUGGY]      }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	for(int  i  =  0;  i  <  observations.length;  ++i)  {  return(new  ParameterGuesser(getImpl())).guess();  }	  return(new    ParameterGuesser(getObservations())).guess();    if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    ++i)    {    return(new    ParameterGuesser(getObservations())).guess();    }    	non-compiled	[CE]  observations  has  private  access  in  CurveFitter	152	None	replace
701	[BUG]  [BUGGY]  if(getParam()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        [CONTEXT]      public  double[]  fit()  {      [BUGGY]  if(getParam()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return  [BUGGY]      return  fit((new  ParameterGuesser(getObservations())).guess());  }  [CLASS]  HarmonicFitter  ParameterGuesser  [METHOD]  fit  [RETURN_TYPE]  double[]  [VARIABLES]  WeightedObservedPoint[]  observations  double  a  omega  phi  boolean  	projects/Math25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java	0.0	77	77	0	replace	if(getParam()!=  null)  {  for(int  i  =  0;  i  <  observations.length;  i++)  {  WeightedObservedPoint[]  points  =  getObservations().get(i);  if(points!=  null)  {  return	  if(getObservations()!=    null)    {    for(int    i    =    0;    i    <    observations.length;    i++)    {    WeightedObservedPoint[]    points    =    getObservations().get(i);    if(points!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
