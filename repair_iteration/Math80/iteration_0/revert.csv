projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(MathUtils.SAFE_MIN*work[j]/work[j]){if(work[i]<=TOLERANCE_2*d){work[j]=-0.0;d=work[j]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(MathUtils.SAFE_MIN*work[j]/work[j]){if(work[i]>=TOLERANCE_2*d){work[j]=-0.0;d=work[j]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(MathUtils.SAFE_MIN*work[j]/work[j]){if(work[i]<=TOLERANCE_2*d){work[j]=-1.0;d=work[j]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(MathUtils.SAFE_MIN*work[j]/work[j]){if(work[i]>=TOLERANCE_2*d){work[j]=-1.0;d=work[j]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(MathUtils.SAFE_MIN*work[j]/work[j]){if(work[i]<=TOLERANCE_2*d){work[j]=-2.0;d=work[j]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960if(MathUtils.SAFE_MIN*work[i+1]&&(MathUtils.SAFE_MIN*work[j]/work[j])){d=work[i+2]/work[j];d*=
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960if(MathUtils.SAFE_MIN*work[i+1]&&(MathUtils.SAFE_MIN*work[j]/work[j])){d=work[i+2];if(work[i]<=TOLERANCE_2*
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960if(MathUtils.SAFE_MIN*work[i+1]&&(MathUtils.SAFE_MIN*work[j]-d)){d=work[i+2]/work[j];d*=tmp;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960if(MathUtils.SAFE_MIN*work[i+1]&&(MathUtils.SAFE_MIN*work[j]/work[j])){d=work[i+2];if(work[i]<TOLERANCE_2*
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960if(MathUtils.SAFE_MIN*work[i+1]&&(MathUtils.SAFE_MIN*work[j]/work[j])){d=work[i+2]/work[j];d
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+2]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+2]=-1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+2]=-10.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+2]=-2.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+2]=-1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i=Math.max(work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i=Math.min(work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i=1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i=Math.max(work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i=1+i/2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1],Math.min(work[3+pingPong],work[7+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1,Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056if(flipIfWarranted(deflatedEnd-1)){work[l-1]=Math.min(work[l-1],Math.min(work[3+pingPong],work[7+pingPong]));}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-2]=Math.min(work[l-1],Math.min(work[3+pingPong],work[7+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1,Math.min(work[3+pingPong],work[4*pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.max(dMin2,work[l-1]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.min(dMin3,work[l-1]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.min(dMin2,work[l-1]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.min(dMin3,work[1]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.max(dMin3,work[1]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=1+i/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=1+i/2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=1+i*4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=1*i/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872break;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=1+i/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872if(work[i0+1]==0){break;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872if(work[i0]>0){break;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.min(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.min(dMin,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.max(dMin,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.max(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+2]==TolerANCE_2*d){work[i+2]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+2]==TolerANCE_2*d){work[i+2]=-2.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+2]==TolerANCE_2*d){work[i+2]=-0.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+2]==TolerANCE_2*d){d=work[i+2];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+2]==TolerANCE_2*d){work[i+2]=-0.5;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-10.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=TOLERANCE_1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=i;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=TOLERANCE_2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=tolerance_1*d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=tolerance_2*d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=MathUtils.SAFE_2*work[j];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=MathUtils.SAFE_1*work[i];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=MathUtils.SAFE_2*work[i];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+2]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+1]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i]/work[j];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(MathUtils.SAFE_MIN*work[i]/work[j]){if(work[i]<=TOLERANCE_2*d){work[j]=-0.0;d=work[i]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(MathUtils.SAFE_MIN*work[i]/work[j]){if(work[i]>=TOLERANCE_2*d){work[j]=-0.0;d=work[i]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(MathUtils.SAFE_MIN*work[i]/work[j]){if(work[i]<=TOLERANCE_2*d){work[j]=-1.0;d=work[i]/work[j];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d*=work[i]/(d+work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d*=work[i+1]/(d+work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d*=work[i]/(d+work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d=work[i]/(d+work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d=work[i]/(d+work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(work[i]+work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.min(i0,work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.min(i0,work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.min(i0,work[i+4]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i]-1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i+3];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.min(dMin1,work[0]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.max(dMin1,work[0]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.min(dMin1);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.min(dMin1,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.min(dMin1,work[0]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[i+3];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[j+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i+1]<TOLERANCE_1&&work[i]<=Tolerance_2){if(work[j+1]==0.0){work[j]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i+1]<TOLERANCE_1&&work[i]<=Tolerance_2){if(work[j+1]==0.0){work[j*=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i+1]<TOLERANCE_1&&work[i]<=TOLERANCE_2){if(work[j+1]==0.0){work[j*=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i+1]<TOLERANCE_1&&work[i]<=Tolerance_2){if(work[j+1]==0){work[j*=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i+1]<TOLERANCE_1&&work[i]<=TOLERANCE_2){if(work[j+1]==0.0){work[j]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+1]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d=work[i+1]/TOLERANCE_2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d=work[i+1]/TOLERANCE_1*d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d*=work[i+1]/TOLERANCE_2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+1]=-1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944d=work[i+1]/TOLERANCE_1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]*TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]-tolerance_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]*TOLERANCE_2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]/TOLERANCE_2;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(i0,work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(i0,work[i+4]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872offDiagMax=Math.max(i0,work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(i0,work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872work[i]=Math.max(work[i]/2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[i]=Math.max(work[i]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[i]=Math.max(work[i]/TOLERANCE_3);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[i]=Math.max(work[i]*TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[i]=Math.max(work[i]-toLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i+1]<TOLERANCE_1&&work[i]<=Tolerance_2){if(work[j+1]==d){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=0+i/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=0*i/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=0+work/4;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.max(dMin1,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055work=Math.max(dMin1,dMin2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.max(dMin1,work[0],work[1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.max(dMin1,work[l+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=TOLERANCE_3;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872if(work[i+1]<0){break;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872if(i0>=n2){break;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872if(i0>0){break;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+1]=-10.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+1]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]=Math.pow(MathUtils.SAFE_MIN*work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]=Math.pow(MathUtils.SAFE_MIN*work[i+2],TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]=Math.pow(MathUtils.SAFE_MIN*work[i+1],TOLERANCE_2*work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]=Math.pow(MathUtils.SAFE_MIN*work[i+1],TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]=Math.pow(MathUtils.SAFE_MIN*work[i+2]/work[j]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i]/TOLERANCE_3;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(dMin2,work[l-1],Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.max(dMin2,work[l-1],Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(dMin1,work[l-1],Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(dMin2,work[l+1],Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin1=Math.max(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin1=Math.max(dMin2,work[l+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin2=Math.max(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.max(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin1=Math.max(dMin2,work[l]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+1]==TOLERANCE_2*d){work[i+1]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+1]==TOLERANCE_2*d){work[i]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){if(work[i+1]==TOLERANCE_2*d){work[i+1]=-0.5;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){for(intk=0;k<k;++k){d*=work[i+1];}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){for(intk=0;k<k;++k){work[i+1]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work=Math.max(work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871offDiagMax=Math.max(diagMin,work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=Math.max(work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i+1]=Math.max(work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work=Math.max(work[i+2]-0);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055work[l]=Math.max(work[0],Math.min(work[1],work[2],work[3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin1=Math.max(work[0],Math.min(work[1],work[2],work[3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i]>=TOLERANCE_1*work[j]){if(work[i+1]==TOLERANCE_2&&work[i]<=TOLERANCE_3){work[j]=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i]>=TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[j]<=tolerance_2){if(work[j+1]==0.0){work[j]=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i]>=TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[j]}tolerance_2){if(work[j+1]==0.0){work[j]=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i]>=TOLERANCE_1*work[j]){if(work[i+1]==TOLERANCE_2&&work[i]<=TOLERANCE_3){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if(work[i]>=TOLERANCE_1*work[j]){if(work[i+1]==TOLERANCE_2&&work[i]<=TOLERANCE_3){work[j=d;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i]==TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[i]<=Tolerance_3){if(work[j+1]==0.0){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i]==TOLERANCE_1&&work[i]<=TOLERANCE_2){if(work[j+1]==0.0){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i]==TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[i]<=tolerance_2){if(work[j+1]==0.0){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i]==TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[i]<=tolerANCE_2){if(work[j+1]==0.0){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if(work[i]==TOLERANCE_1&&work[i]<=TOLERANCE_2&&work[i]<=Tolerance_3){if(work[j+1]==d){work[j]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-2.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=-work;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]-=d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i-1]==TOLERANCE_1*d){if(work[i-1]==ToLERANCE_2*d){work[i+1]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i-1]==TOLERANCE_1*d){if(work[i-1]==ToLERANCE_2*d){work[i-=0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){for(inti=0;i<work.length;++i){work[i]=-1.0;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945if(work[i+1]==TOLERANCE_1*d){for(inti=0;i<work.length;++i){work[i]=-work;}
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.max(dMin2,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin1=Math.max(dMin1,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMin3=Math.max(dMin3,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056dMax=Math.max(dMax,work[l-1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+3]=-2.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+3]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i+3]=-1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[j]-=Math.max(work[i+1]-TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[j]-=Math.max(work[i]/TOLERANCE_1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[j]-=Math.max(work[i]/TOLERANCE_3);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[j]-=Math.max(work[i]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960work[i]-=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]-TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]-tolerANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]-work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.max(work[i]-TOLERANCE_1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i]=solve(work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i]=(work[i+1]==TOLERANCE_1*d)?work[i+1]:work[i].doubleValue();
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i]=(work[i+1]==TOLERANCE_2*d)?work[i-1]:work[i-1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i]=(work[i+1]==TOLERANCE_1*d)?work[i+1]:work[i];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java944work[i]=Math.max(work[i]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871i0=1+work[i+4];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1],Math.min(work[3+pingPong],work[4+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1],Math.min(work[2+pingPong],work[3+pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1056work[l-1]=Math.min(work[l-1],Math.min(work[3*pingPong],work[4*pingPong]));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=Math.max(work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=Math.max(work[i+3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=Math.max(work[i+1]-diagMin);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=(work[i+1]==0)?work[i+1]:null;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java871work[i]=Math.max(work[i+1]-0);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[j+3];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java960d=work[j+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.min(dMin,work[l-1,1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.min(dMin,work[0]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1055dMin2=Math.min(dMin,work[1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872work[i]=Math.max(work[i]-i0);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872work[i]=Math.max(work[i]-i1);i0=Math.min(i0-work[i]-1);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(i0,work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872work[i]=Math.max(work[i]-i1);i0=Math.min(i0-work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.max(i0,work[i+3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java872i0=Math.min(i0,work[i]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java945d=work[i]/TOLERANCE_1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+3]=0.0;
