projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-1;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=-1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d*=work[i]/(work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d*=work[i]/(work[i+1]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d*=work[i]/(work[i+3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d=work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.abs(work[i+2]*TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d=work[i+2]*(work[i+2]*TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=Math.abs(work[i+2]*TOLERANCE_2-1);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957work[i]=1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d=work[i+2]*Math.sqrt((MathUtils.SAFE_MIN*work[i+2])&&(MathUtils.SAFE_MIN*work[j]<=TOLERANCE_2*d));
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java957d=work[i+2]*Math.sqrt((MAthUtils.SAFE_MIN*work[i+2])&&(MathUtils.SAFE_MIN*work[j]<=TOLERANCE_2*d));
