projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+2]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+1]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+2]=1.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+3]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959d=work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959d=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959d=work[i+1]*Math.pow(0,work[j]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=work[i+2]*(work[i+2]/TOLERANCE_2*d);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=work[i+2]*tmp;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=work[i+2]*(work[i+2]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[i+2]=work[i+2]*(work[i+2]*d);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959work[j+2]=-0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[j]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[j]
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+3]/work[
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java959if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[j]);d*=work[i
