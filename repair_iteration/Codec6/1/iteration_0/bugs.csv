bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] base64.setInitialBuffer(b, offset, len); [FE] AssertionFailedError [CONTEXT] interop with InputStreamReader for that scenario. ----- This is a fix for CODEC-101  if (!base64.hasData()) { byte[] buf = new byte[doEncode ? 4096 : 8192]; int c = in.read(buf);   if (c > 0 && b.length == len) { [BUGGY] base64.setInitialBuffer(b, offset, len); [BUGGY] } if (doEncode) { base64.encode(buf, 0, c); } else { base64.decode(buf, 0, c); } } return base64.readResults(b, offset, len); } [CLASS] Base64InputStream [METHOD] read [RETURN_TYPE] int  byte[] b int offset int len [VARIABLES] byte[] b buf lineSeparator singleByte boolean doEncode Base64 base64 int c len offset  	projects/Codec6/src/java/org/apache/commons/codec/binary/Base64InputStream.java	0.5	170	170	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] interop with InputStreamReader for that scenario. ----- This is a fix for CODEC-101  if (!base64.hasData()) { byte[] buf = new byte[doEncode ? 4096 : 8192]; int c = in.read(buf);   if (c > 0 && b.length == len) { [BUGGY] [BUGGY] base64.setInitialBuffer(b, offset, len); } if (doEncode) { base64.encode(buf, 0, c); } else { base64.decode(buf, 0, c); } } return base64.readResults(b, offset, len); } [CLASS] Base64InputStream [METHOD] read [RETURN_TYPE] int  byte[] b int offset int len [VARIABLES] byte[] b buf lineSeparator singleByte boolean doEncode Base64 base64 int c len offset  	projects/Codec6/src/java/org/apache/commons/codec/binary/Base64InputStream.java	0.5	170	170	1	add	
