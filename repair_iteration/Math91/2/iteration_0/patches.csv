bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue()  +  1;  [BUGGY]  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  object.doubleValue()  +  1;	double  dOn  =  object.doubleValue();  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
2	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue()  -  1;  [BUGGY]  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  object.doubleValue()  -  1;	double  dOn  =  object.doubleValue();  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
3	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]  int  dOn  =  object.doubleValue();  [BUGGY]  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.doubleValue();	double  dOn  =  object.doubleValue();  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
4	[BUG]  [BUGGY]    [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    [BUGGY]  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	  	double  dOn  =  object.doubleValue();  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
5	[BUG]  [BUGGY]    double  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    double  nOd  =  object.doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    double  nOd  =  object.doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
6	[BUG]  [BUGGY]    int  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    int  nOd  =  object.doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    int  nOd  =  object.doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
7	[BUG]  [BUGGY]    nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    nOd  =  object.doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    nOd  =  object.doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
8	[BUG]  [BUGGY]    long  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    long  nOd  =  object.doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    long  nOd  =  object.doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
9	[BUG]  [BUGGY]    int  nOd  =  object.getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    int  nOd  =  object.getN();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    int  nOd  =  object.getN();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
10	[BUG]  [BUGGY]  double  dOn  =  value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]  double  dOn  =  value.doubleValue();  [BUGGY]  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  value.doubleValue();	double  dOn  =  object.doubleValue();  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
11	[BUG]  [BUGGY]    int  n  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  [BUGGY]    int  n  =  object.doubleValue();  [BUGGY]  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	    int  n  =  object.doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	add
