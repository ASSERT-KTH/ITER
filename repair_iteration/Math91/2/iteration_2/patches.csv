bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  dOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  dOn  =  object.doubleValue()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  dOn  =  object.doubleValue()  -  1;	  int    dOn    =    object.doubleValue()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
2	[BUG]  [BUGGY]  Double  dOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  Double  dOn  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	Double  dOn  =  object.doubleValue()  +  1;	  Double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
3	[BUG]  [BUGGY]  Double  dOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  Double  dOn  =  object.doubleValue()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	Double  dOn  =  object.doubleValue()  -  1;	  Double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
4	[BUG]  [BUGGY]  double  dOn  =  getDenominator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  getDenominator();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  getDenominator();	  int    dOn    =    getDenominator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
5	[BUG]  [BUGGY]  int  dOn  =  getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getN();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getN();	  int    dOn    =    getDenominator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
6	[BUG]  [BUGGY]  int  dOn  =  getDeniator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDeniator();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDeniator();	  int    dOn    =    getDenominator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
7	[BUG]  [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.getDestination().compareTo(nOd,  denominator);	  int    dOn    =    object.getDestination().compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
8	[BUG]  [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  numerator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  numerator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.getDestination().compareTo(nOd,  numerator);	  int    dOn    =    object.getDestination().compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
9	[BUG]  [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.getDestination().compareTo(nOd,  nDenominator);	  int    dOn    =    object.getDestination().compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
10	[BUG]  [BUGGY]  double  dOn  =  object.getDestination().compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  object.getDestination().compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  object.getDestination().compareTo(nOd);	  int    dOn    =    object.getDestination().compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
11	[BUG]  [BUGGY]  long  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  dOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  dOn  =  object.doubleValue();	  long    dOn    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
12	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  object.doubleValue()  -  nOd;	  int    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
13	[BUG]  [BUGGY]  int  nOdOn  =  object.doubleValue()  -  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOdOn  =  object.doubleValue()  -  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOdOn  =  object.doubleValue()  -  nOd;	  int    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
14	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue()  -  nOd  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.doubleValue()  -  nOd  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.doubleValue()  -  nOd  +  1;	  int    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
15	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue()  /  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.doubleValue()  /  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.doubleValue()  /  nOd;	  int    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
16	[BUG]  [BUGGY]  long  dOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  dOn  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  dOn  =  object.doubleValue()  +  1;	  int    dOn    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
17	[BUG]  [BUGGY]  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  dOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	dOn  =  object.doubleValue();	  int    dOn    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
18	[BUG]  [BUGGY]  int  dOn  =  getDenominator().compareTo(nOd,  object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDenominator().compareTo(nOd,  object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDenominator().compareTo(nOd,  object);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
19	[BUG]  [BUGGY]  int  dOn  =  getDenominator().compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDenominator().compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDenominator().compareTo(nOd);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
20	[BUG]  [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDenominator().compareTo(object,  nOd);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
21	[BUG]  [BUGGY]  double  dOn  =  getDenominator().compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  getDenominator().compareTo(object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  getDenominator().compareTo(object);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
22	[BUG]  [BUGGY]  long  n  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  n  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  n  =  object.doubleValue()  +  1;	  int    n    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
23	[BUG]  [BUGGY]  double  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  object.getN()  -  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  object.getN()  -  1;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
24	[BUG]  [BUGGY]  double  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  object.getN()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  object.getN()  +  1;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
25	[BUG]  [BUGGY]  double  nOd  =  object.getN()  -  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  object.getN()  -  2;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  object.getN()  -  2;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
26	[BUG]  [BUGGY]  double  n  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  n  =  this.object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  n  =  this.object.doubleValue();	  int    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	19	None	replace
27	[BUG]  [BUGGY]  int  n  =  this.object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  n  =  this.object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  n  =  this.object.doubleValue()  +  1;	  int    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	19	None	replace
28	[BUG]  [BUGGY]  long  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  nOd  =  object.getN()  -  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  nOd  =  object.getN()  -  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
29	[BUG]  [BUGGY]  double  nOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOn  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOn  =  object.doubleValue()  +  1;	  double    nOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
30	[BUG]  [BUGGY]  double  nOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOn  =  object.doubleValue()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOn  =  object.doubleValue()  -  1;	  double    nOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
31	[BUG]  [BUGGY]  int  nOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOn  =  object.doubleValue();	  double    nOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
32	[BUG]  [BUGGY]  int  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  this.object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  this.object.doubleValue();	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
33	[BUG]  [BUGGY]  long  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  nOd  =  this.object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  nOd  =  this.object.doubleValue();	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
34	[BUG]  [BUGGY]  double  nOd  =  object.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  object.compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  object.compareTo(nOd);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
35	[BUG]  [BUGGY]  int  nOd  =  nOd.compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  nOd.compareTo(object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  nOd.compareTo(object);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
36	[BUG]  [BUGGY]  int  nOd  =  object.compareTo(nOd,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  object.compareTo(nOd,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  object.compareTo(nOd,  denominator);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
37	[BUG]  [BUGGY]  int  nOd  =  object.compareTo(nOd,  numerator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  object.compareTo(nOd,  numerator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  object.compareTo(nOd,  numerator);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
38	[BUG]  [BUGGY]  int  dOn  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  item.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  item.doubleValue();	  double    dOn    =    item.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
39	[BUG]  [BUGGY]  nOd  =  value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  value.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  value.doubleValue();	  int    dOn    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
40	[BUG]  [BUGGY]  n  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  n  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	n  =  object.doubleValue();	  double    n    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
41	[BUG]  [BUGGY]  nOd  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  item.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  item.doubleValue();	  nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
42	[BUG]  [BUGGY]  nOd  =  objects.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  objects.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  objects.doubleValue();	  nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
43	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  Double  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	Double  nOd  =  object.doubleValue();	  double    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	22	None	replace
44	[BUG]  [BUGGY]  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  object.getN()  -  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  object.getN()  -  1;	  nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
45	[BUG]  [BUGGY]  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  object.getN()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  object.getN()  +  1;	  nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
46	[BUG]  [BUGGY]  nOd  =  object.getN()  -  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  object.getN()  -  2;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  object.getN()  -  2;	  nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
47	[BUG]  [BUGGY]  double  nOd  =  object.intValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  object.intValue();	  int    nOd    =    object.intValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
48	[BUG]  [BUGGY]  long  nOd  =  object.intValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  nOd  =  object.intValue();	  int    nOd    =    object.intValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
49	[BUG]  [BUGGY]  long  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  nOd  =  object.getN()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  nOd  =  object.getN()  +  1;	  int    nOd    =    object.getN()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
50	[BUG]  [BUGGY]  int  dOn  =  nOd.compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  nOd.compareTo(object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  nOd.compareTo(object);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
51	[BUG]  [BUGGY]  double  dOn  =  object.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  object.compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  object.compareTo(nOd);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
52	[BUG]  [BUGGY]  int  nOdOn  =  object.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOdOn  =  object.compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOdOn  =  object.compareTo(nOd);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
53	[BUG]  [BUGGY]  int  dOn  =  object.compareTo(nOd,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.compareTo(nOd,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.compareTo(nOd,  denominator);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
54	[BUG]  [BUGGY]  nOd  =  this.object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  this.object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  this.object.doubleValue()  +  1;	  nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	25	None	replace
55	[BUG]  [BUGGY]  nOd  =  this.object.compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  this.object.compareTo(object);  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  this.object.compareTo(object);	  nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	25	None	replace
56	[BUG]  [BUGGY]  int  dOn  =  getDestination().compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestination().compareTo(nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestination().compareTo(nOd);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
57	[BUG]  [BUGGY]  int  dOn  =  getDestination().compareTo(nOd,  object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestination().compareTo(nOd,  object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestination().compareTo(nOd,  object);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
58	[BUG]  [BUGGY]  int  dOn  =  getDestination().compareTo(object,  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestination().compareTo(object,  nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestination().compareTo(object,  nOd);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
59	[BUG]  [BUGGY]  double  dOn  =  getDestination().compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  getDestination().compareTo(object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  getDestination().compareTo(object);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
60	[BUG]  [BUGGY]  int  dOn  =  object.compareTo(nOd  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.compareTo(nOd  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.compareTo(nOd  -  1);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
61	[BUG]  [BUGGY]  nOd  =  this.object.doubleValue()  +  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  nOd  =  this.object.doubleValue()  +  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	nOd  =  this.object.doubleValue()  +  object.doubleValue();	  nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	25	None	replace
62	[BUG]  [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd  +  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.getDestination().compareTo(nOd  +  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.getDestination().compareTo(nOd  +  1);	  int    dOn    =    object.getDestination().compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
63	[BUG]  [BUGGY]  int  dOn  =  getDestination().compareTo(object,  n);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestination().compareTo(object,  n);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestination().compareTo(object,  n);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
64	[BUG]  [BUGGY]  int  dOn  =  getDestination().compareTo(object,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestination().compareTo(object,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestination().compareTo(object,  denominator);	  int    dOn    =    getDestination().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
65	[BUG]  [BUGGY]  int  dOn  =  getDestinator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDestinator();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDestinator();	  int    dOn    =    getDenominator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
66	[BUG]  [BUGGY]  double  n  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  n  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  n  =  object.doubleValue()  +  1;	  int    n    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
67	[BUG]  [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  n);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  n);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDenominator().compareTo(object,  n);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
68	[BUG]  [BUGGY]  int  nOd  =  object.compareTo(nOd,  DEFAULT_NUMBER_INT);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  object.compareTo(nOd,  DEFAULT_NUMBER_INT);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  object.compareTo(nOd,  DEFAULT_NUMBER_INT);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
69	[BUG]  [BUGGY]  int  nOd  =  object.getN()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  object.getN()  *  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  object.getN()  *  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
70	[BUG]  [BUGGY]  double  nOd  =  this.object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  this.object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  this.object.doubleValue()  +  1;	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
71	[BUG]  [BUGGY]  Double  dOn  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  Double  dOn  =  this.object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	Double  dOn  =  this.object.doubleValue();	  Double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
72	[BUG]  [BUGGY]  int  n  =  this.object.getNumber();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  n  =  this.object.getNumber();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  n  =  this.object.getNumber();	  int    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	19	None	replace
73	[BUG]  [BUGGY]  double  dOn  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  dOn  =  this.object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  dOn  =  this.object.doubleValue();	  double    dOn    =    item.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
74	[BUG]  [BUGGY]  long  nOd  =  object.getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  long  nOd  =  object.getN();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	long  nOd  =  object.getN();	  int    nOd    =    object.getN()    -    2;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	18	None	replace
75	[BUG]  [BUGGY]  Double  dOn  =  value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  Double  dOn  =  value.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	Double  dOn  =  value.doubleValue();	  int    dOn    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
76	[BUG]  [BUGGY]  double  nOd  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOd  =  item.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOd  =  item.doubleValue();	  double    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	22	None	replace
77	[BUG]  [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getDenominator().compareTo(object,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getDenominator().compareTo(object,  denominator);	  int    dOn    =    getDenominator().compareTo(object);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
78	[BUG]  [BUGGY]  double  nOn  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  double  nOn  =  this.object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	double  nOn  =  this.object.doubleValue();	  double    nOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
79	[BUG]  [BUGGY]  int  dOn  =  getNumerator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  getNumerator();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  getNumerator();	  int    dOn    =    getDenominator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
80	[BUG]  [BUGGY]  int  nOd  =  object.compareTo(nOd  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  nOd  =  object.compareTo(nOd  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  nOd  =  object.compareTo(nOd  -  1);	  int    nOd    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
81	[BUG]  [BUGGY]  int  dOn  =  object.compareTo(nOd,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();      [BUGGY]  int  dOn  =  object.compareTo(nOd,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	260	260	1	replace	int  dOn  =  object.compareTo(nOd,  nDenominator);	  int    dOn    =    object.compareTo(nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
