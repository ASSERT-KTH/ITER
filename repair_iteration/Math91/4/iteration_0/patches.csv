bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  numerator  /(double)denominator;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]  return  numerator  /(double)denominator;  [BUGGY]  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	return  numerator  /(double)denominator;	return  (double)numerator  /  (double)denominator;  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
2	[BUG]  [BUGGY]    [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    [BUGGY]  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	  	return  (double)numerator  /  (double)denominator;  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
3	[BUG]  [BUGGY]    int  numerator  =  getNumerator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  numerator  =  getNumerator();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  numerator  =  getNumerator();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
4	[BUG]  [BUGGY]    int  numerator  =  getNumber().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  numerator  =  getNumber().doubleValue();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  numerator  =  getNumber().doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
5	[BUG]  [BUGGY]    int  numerator  =  Math.min(numerator,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  numerator  =  Math.min(numerator,  denominator);  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  numerator  =  Math.min(numerator,  denominator);		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
6	[BUG]  [BUGGY]    int  numerator  =  getNumber();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  numerator  =  getNumber();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  numerator  =  getNumber();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
7	[BUG]  [BUGGY]    int  numerator  =  getNumerator().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  numerator  =  getNumerator().doubleValue();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  numerator  =  getNumerator().doubleValue();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
8	[BUG]  [BUGGY]    int  denominator  =  getNumerator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  denominator  =  getNumerator();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  denominator  =  getNumerator();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
9	[BUG]  [BUGGY]    int  desominator  =  getNumerator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError  [CONTEXT]  public  double  doubleValue()  {  [BUGGY]    int  desominator  =  getNumerator();  [BUGGY]  return  (double)numerator  /  (double)denominator;  }  [CLASS]  Fraction  [METHOD]  doubleValue  [RETURN_TYPE]  double  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.4472135954999579	270	270	1	replace	    int  desominator  =  getNumerator();		non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	add
