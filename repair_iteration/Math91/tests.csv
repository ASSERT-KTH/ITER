name,outcome,runtime,stacktrace
org.apache.commons.math.fraction.FractionTest#testFloatValue,PASS,19431215,
org.apache.commons.math.fraction.FractionTest#testAbs,PASS,3760427,
org.apache.commons.math.fraction.FractionTest#testAdd,PASS,62260761,
org.apache.commons.math.fraction.FractionTest#testSubtract,PASS,19254835,
org.apache.commons.math.fraction.FractionTest#testReciprocal,PASS,31091672,
org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor,PASS,3615761,
org.apache.commons.math.fraction.FractionTest#testGetReducedFraction,PASS,29328254,
org.apache.commons.math.fraction.FractionTest#testConstructorDouble,PASS,19459724,
org.apache.commons.math.fraction.FractionTest#testCompareTo,FAIL,21988726,junit.framework.AssertionFailedError: expected:<-1> but was:<0> at junit.framework.Assert.fail(Assert.java:57) at junit.framework.Assert.failNotEquals(Assert.java:329) at junit.framework.Assert.assertEquals(Assert.java:78) at junit.framework.Assert.assertEquals(Assert.java:234) at junit.framework.Assert.assertEquals(Assert.java:241) at junit.framework.TestCase.assertEquals(TestCase.java:409) at org.apache.commons.math.fraction.FractionTest.testCompareTo(FractionTest.java:178) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at org.junit.runner.JUnitCore.run(JUnitCore.java:115) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
org.apache.commons.math.fraction.FractionTest#testDoubleConstructor,PASS,6604723,
org.apache.commons.math.fraction.FractionTest#testLongValue,PASS,30497861,
org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor,PASS,21614271,
org.apache.commons.math.fraction.FractionTest#testIntValue,PASS,3447457,
org.apache.commons.math.fraction.FractionTest#testDivide,PASS,24416719,
org.apache.commons.math.fraction.FractionTest#testMultiply,PASS,27551378,
org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode,PASS,3008920,
org.apache.commons.math.fraction.FractionTest#testNegate,PASS,44506840,
org.apache.commons.math.fraction.FractionTest#testGoldenRatio,PASS,7829282,
org.apache.commons.math.fraction.FractionTest#testIntegerOverflow,PASS,30844801,
org.apache.commons.math.fraction.FractionTest#testDoubleValue,PASS,16536337,
org.apache.commons.math.fraction.FractionTest#testConstructor,PASS,20289465,
