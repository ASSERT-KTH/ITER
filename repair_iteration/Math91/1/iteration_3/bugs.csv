bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  nOd  =  getN()  *  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  1;	  double    nOd    =    getN()    -    1;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
2	[BUG]  [BUGGY]  Double  nOd  =  getN();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getN();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getN();	  double    nOd    =    getN()    -    1;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
3	[BUG]  [BUGGY]  int  n  =  this.object.numerator();  [CE]  cannot  find  symbol  object  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.object.numerator();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.object.numerator();	  int    n    =    object.numerator();    	non-compiled	[CE]  cannot  find  symbol  object	49	None	replace
4	[BUG]  [BUGGY]  int  n  =  type.numerator();  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  type.numerator();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  type.numerator();	  int    n    =    object.numerator();    	non-compiled	[CE]  cannot  find  symbol  type	49	None	replace
5	[BUG]  [BUGGY]  int  n  =  item.numerator();  [CE]  cannot  find  symbol  item  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  item.numerator();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  item.numerator();	  int    n    =    object.numerator();    	non-compiled	[CE]  cannot  find  symbol  item	49	None	replace
6	[BUG]  [BUGGY]  int  n  =  object  ==  null?  0  :  object.getN();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  object  ==  null?  0  :  object.getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  object  ==  null?  0  :  object.getN();	  int    n    =    object!=    null?    0    :    object.getN();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
7	[BUG]  [BUGGY]  double  nOd  =  getN()  *  MINUS_ONE.doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  MINUS_ONE.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  MINUS_ONE.doubleValue();	  double    nOd    =    getN()    *    object.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
8	[BUG]  [BUGGY]  double  nOd  =  getN()  *  type.doubleValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  type.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  type.doubleValue();	  double    nOd    =    getN()    *    object.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
9	[BUG]  [BUGGY]  double  nOd  =  getN()  *  this.object.doubleValue();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  this.object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  this.object.doubleValue();	  double    nOd    =    getN()    *    object.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
10	[BUG]  [BUGGY]  double  nOd  =  object.value().doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.value().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.value().doubleValue();	  double    nOd    =    value().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
11	[BUG]  [BUGGY]  double  nOd  =  this.value().doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  this.value().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  this.value().doubleValue();	  double    nOd    =    value().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
12	[BUG]  [BUGGY]  double  nOd  =  getNumber().doubleValue()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getNumber().doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getNumber().doubleValue()  +  1;	  double    nOd    =    getNumber().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
13	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(object.getNumber());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getNumber().compareTo(object.getNumber());  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getNumber().compareTo(object.getNumber());	  double    nOd    =    getNumber().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
14	[BUG]  [BUGGY]  Integer  nOd  =  object.doubleValue();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Integer  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Integer  nOd  =  object.doubleValue();	  double    nOd    =    object.doubleValue();    int    nOd    =    object.doubleValue();    	non-compiled	[CE]  incompatible  types	20	None	replace
15	[BUG]  [BUGGY]  int  nOd  =  object.intValue();  int  nOd  =  object.intValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.intValue();  int  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int    nOd    =    object.intValue();    int  nOd  =  object.intValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	34	None	add
16	[BUG]  [BUGGY]  int  nOd  =  object.intValue();  Int  nOd  =  object.intValue();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.intValue();  Int  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int    nOd    =    object.intValue();    Int  nOd  =  object.intValue();	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
17	[BUG]  [BUGGY]  int  nOd  =  object.intValue();  double  nOd  =  object.intValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]        AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.intValue();  double  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int    nOd    =    object.intValue();    double  nOd  =  object.intValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	34	None	add
18	[BUG]  [BUGGY]  int  nOd  =  object.intValue();  long  nOd  =  object.intValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]          AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.intValue();  long  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int    nOd    =    object.intValue();    long  nOd  =  object.intValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	34	None	add
19	[BUG]  [BUGGY]  int  nOd  =  this.numerator.getNumberOfIterations();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.numerator.getNumberOfIterations();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.numerator.getNumberOfIterations();	  int    nOd    =    this.object.getNumberOfIterations();    	non-compiled	[CE]  int  cannot  be  dereferenced	37	None	replace
20	[BUG]  [BUGGY]  int  nOd  =  this.getNumberOfIterations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.getNumberOfIterations();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.getNumberOfIterations();	  int    nOd    =    this.object.getNumberOfIterations();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
21	[BUG]  [BUGGY]  double  nOd  =  getDouble().doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getDouble().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getDouble().doubleValue();	  double    nOd    =    getDouble();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
22	[BUG]  [BUGGY]  double  nOd  =  getDoubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getDoubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getDoubleValue();	  double    nOd    =    getDouble();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
23	[BUG]  [BUGGY]  double  nOd  =  getDouble()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getDouble()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getDouble()  +  1;	  double    nOd    =    getDouble();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
24	[BUG]  [BUGGY]  int  nOd  =  getN().compareTo(object.getN());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN().compareTo(object.getN());  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN().compareTo(object.getN());	  int    nOd    =    getN().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
25	[BUG]  [BUGGY]  int  nOd  =  getN().compareTo(object);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN().compareTo(object);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN().compareTo(object);	  int    nOd    =    getN().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
26	[BUG]  [BUGGY]  double  nOd  =  object.DoubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.DoubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.DoubleValue();	  double    nOd    =    DoubleValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  double  nOd  =  DoubleValue().doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  DoubleValue().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  DoubleValue().doubleValue();	  double    nOd    =    DoubleValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
28	[BUG]  [BUGGY]  double  nOd  =  getN().compareTo(object.getN());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN().compareTo(object.getN());  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN().compareTo(object.getN());	  double    nOd    =    getN().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
29	[BUG]  [BUGGY]  double  nOd  =  getN().doubleValue()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN().doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN().doubleValue()  +  1;	  double    nOd    =    getN().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
30	[BUG]  [BUGGY]  int  n  =  this.numerator.compareTo(object);  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.numerator.compareTo(object);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.numerator.compareTo(object);	  int    n    =    object.compareTo(this);    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
31	[BUG]  [BUGGY]  int  n  =  this.object.compareTo(object);  [CE]  cannot  find  symbol  object  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.object.compareTo(object);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.object.compareTo(object);	  int    n    =    object.compareTo(this);    	non-compiled	[CE]  cannot  find  symbol  object	15	None	replace
32	[BUG]  [BUGGY]  int  n  =  getNumber().compareTo(this);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  getNumber().compareTo(this);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  getNumber().compareTo(this);	  int    n    =    object.compareTo(this);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
33	[BUG]  [BUGGY]  int  nOd  =  getN()  /  getN();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN()  /  getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN()  /  getN();	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
34	[BUG]  [BUGGY]  int  nOd  =  getN()  *  getN();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN()  *  getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN()  *  getN();	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
35	[BUG]  [BUGGY]  int  nOd  =  getN()  -  getN()  +  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN()  -  getN()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN()  -  getN()  +  1;	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
36	[BUG]  [BUGGY]  int  n  =  this.value.getN();  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.value.getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.value.getN();	  int    n    =    this.object.getN();    	non-compiled	[CE]  cannot  find  symbol  value	13	None	replace
37	[BUG]  [BUGGY]  int  n  =  this.numerator.getN();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.numerator.getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.numerator.getN();	  int    n    =    this.object.getN();    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
38	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  doubleValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    Double  nOd  =  doubleValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	11	None	add
39	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  double  nOd  =  doubleValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  double  nOd  =  doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    double  nOd  =  doubleValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	11	None	add
40	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  Integer  nOd  =  doubleValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]        AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  Integer  nOd  =  doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    Integer  nOd  =  doubleValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	11	None	add
41	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  singleValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]          AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  singleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    Double  nOd  =  singleValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	11	None	add
42	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  longValue();  [CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)  [FE]            AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  Double  nOd  =  longValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    Double  nOd  =  longValue();	  	non-compiled	[CE]  variable  nOd  is  already  defined  in  method  compareTo(Fraction)	11	None	add
43	[BUG]  [BUGGY]  Double  n  =  this.object.doubleValue();  [CE]  cannot  find  symbol  object  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  n  =  this.object.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  n  =  this.object.doubleValue();	  Double    n    =    object.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  object	50	None	replace
44	[BUG]  [BUGGY]  Double  n  =  type.doubleValue();  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  n  =  type.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  n  =  type.doubleValue();	  Double    n    =    object.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  type	50	None	replace
45	[BUG]  [BUGGY]  double  nOd  =  object.toString();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.toString();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.toString();	  double    nOd    =    object.value();    	non-compiled	[CE]  incompatible  types	25	None	replace
46	[BUG]  [BUGGY]  double  nOd  =  this.object.getValue();  [CE]  cannot  find  symbol  object  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  this.object.getValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  this.object.getValue();	  double    nOd    =    object.getValue();    	non-compiled	[CE]  cannot  find  symbol  object	27	None	replace
47	[BUG]  [BUGGY]  Double  nOd  =  object.getValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.getValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  object.getValue();	  double    nOd    =    object.getValue();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
48	[BUG]  [BUGGY]  double  nOd  =  object.getNegativeValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.getNegativeValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.getNegativeValue();	  double    nOd    =    object.getValue();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
49	[BUG]  [BUGGY]  int  nOd  =  DoubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  DoubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  DoubleValue();	  long    nOd    =    doubleValue();    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	10	None	replace
50	[BUG]  [BUGGY]  int  nOd  =  object.getN()  *  2  -  1;  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getN()  *  2  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getN()  *  2  -  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	7	None	replace
51	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  Double  nOd  =  object.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  Double  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    Double  nOd  =  object.doubleValue();	  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	3	None	add
52	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  double  nOd  =  object.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  double  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    double  nOd  =  object.doubleValue();	  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	3	None	add
53	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  Integer  nOd  =  object.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  Integer  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    Integer  nOd  =  object.doubleValue();	  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	3	None	add
54	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  Double  nod  =  object.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  Double  nod  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    Double  nod  =  object.doubleValue();	  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	3	None	add
55	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  int  nOd  =  object.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  int  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    int  nOd  =  object.doubleValue();	  	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	3	None	add
56	[BUG]  [BUGGY]  double  nOd  =  object.intValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.intValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.intValue();	  int    nOd    =    object.intValue();    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	35	None	replace
57	[BUG]  [BUGGY]  int  nOd  =  object.getN()  /  1;  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getN()  /  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getN()  /  1;	  int    nOd    =    object.getN()    +    1;    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	6	None	replace
58	[BUG]  [BUGGY]  double  nOd  =  getN()  -(object  ==  null?  0  :  object.doubleValue());  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  -(object  ==  null?  0  :  object.doubleValue());  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  -(object  ==  null?  0  :  object.doubleValue());	  double    nOd    =    getN()    -(object!=    null?    0    :    object.doubleValue());    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	45	None	replace
59	[BUG]  [BUGGY]  double  nOd  =  this.node.doubleValue();  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  this.node.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  this.node.doubleValue();	  double    nOd    =    value.doubleValue();    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	40	None	replace
60	[BUG]  [BUGGY]  int  nOd  =  getN().doubleValue()  +  1;  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN().doubleValue()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN().doubleValue()  +  1;	  int    nOd    =    getN()    +    1;    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	30	None	replace
61	[BUG]  [BUGGY]  int  n  =  object.getN()  /  1;  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  object.getN()  /  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  object.getN()  /  1;	  int    n    =    object.getN()    +    1;    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	14	None	replace
62	[BUG]  [BUGGY]  int  n  =  object.getN()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  object.getN()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  object.getN()  -  1;	  int    n    =    object.getN()    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  Double  nOd  =  getNumber();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getNumber();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getNumber();	  Double    nOd    =    doubleValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  Double  nOd  =  getNumberValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getNumberValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getNumberValue();	  Double    nOd    =    doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
65	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  object.doubleValue()  +  1;	  Double    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
66	[BUG]  [BUGGY]  Double  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  this.object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  this.object.doubleValue();	  Double    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
67	[BUG]  [BUGGY]  double  n  =  this.value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =  this.value.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =  this.value.doubleValue();	  double    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
68	[BUG]  [BUGGY]  double  n  =  getNumber().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =  getNumber().doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =  getNumber().doubleValue();	  double    n    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	44	None	replace
69	[BUG]  [BUGGY]  int  nOd  =  getN().intValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN().intValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN().intValue();	  int    nOd    =    getN()    -    2;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	48	None	replace
70	[BUG]  [BUGGY]  int  nOd  =  object.getNumberOfIterations()  /  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getNumberOfIterations()  /  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getNumberOfIterations()  /  1;	  int    nOd    =    object.getNumberOfIterations()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	38	None	replace
71	[BUG]  [BUGGY]  int  nOd  =  object.getNumberOfIterations()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getNumberOfIterations()  *  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getNumberOfIterations()  *  1;	  int    nOd    =    object.getNumberOfIterations()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	38	None	replace
72	[BUG]  [BUGGY]  int  nOd  =  getNumberOfIterations()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getNumberOfIterations()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getNumberOfIterations()  -  1;	  int    nOd    =    getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	39	None	replace
73	[BUG]  [BUGGY]  int  nOd  =  getNumberOfIterations().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getNumberOfIterations().doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getNumberOfIterations().doubleValue();	  int    nOd    =    getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	39	None	replace
74	[BUG]  [BUGGY]  int  nOd  =  getNumberOfIterations()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getNumberOfIterations()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getNumberOfIterations()  +  1;	  int    nOd    =    getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	39	None	replace
75	[BUG]  [BUGGY]  int  nOd  =  getN()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN()  *  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN()  *  1;	  int    nOd    =    getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
76	[BUG]  [BUGGY]  int  nOd  =  this.value.getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.value.getN();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.value.getN();	  int    nOd    =    this.object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
77	[BUG]  [BUGGY]  int  nOd  =  this.object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.object.getN()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.object.getN()  +  1;	  int    nOd    =    this.object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
78	[BUG]  [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  double  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  double  nOd  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double    nOd    =    object.doubleValue()    +    1;    double  nOd  =  object.doubleValue()  +  1;	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	add
79	[BUG]  [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  Double  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  Double  nOd  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double    nOd    =    object.doubleValue()    +    1;    Double  nOd  =  object.doubleValue()  +  1;	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	add
80	[BUG]  [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  int  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  int  nOd  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double    nOd    =    object.doubleValue()    +    1;    int  nOd  =  object.doubleValue()  +  1;	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	add
81	[BUG]  [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  long  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  long  nOd  =  object.doubleValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double    nOd    =    object.doubleValue()    +    1;    long  nOd  =  object.doubleValue()  +  1;	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	add
82	[BUG]  [BUGGY]  Integer  n  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Integer  n  =  object.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Integer  n  =  object.doubleValue();	  long    n    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
83	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  int  nOd  =  doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  int  nOd  =  doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    int  nOd  =  doubleValue();	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	add
84	[BUG]  [BUGGY]  double  nOd  =  object.getNumber();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.getNumber();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.getNumber();	  double    nOd    =    object.getValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
85	[BUG]  [BUGGY]  double  nOd  =  getN()  *  Math.PI  /  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  Math.PI  /  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  Math.PI  /  object.doubleValue();	  double    nOd    =    getN()    *    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	47	None	replace
86	[BUG]  [BUGGY]  int  nOd  =  object.intValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.intValue()  +  1;  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.intValue()  +  1;	  int    nOd    =    object.intValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
87	[BUG]  [BUGGY]  int  nOd  =  getN()  *  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getN()  *  object.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getN()  *  object.doubleValue();	  int    nOd    =    getN().doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	46	None	replace
88	[BUG]  [BUGGY]  Double  nOd  =  getDoubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getDoubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getDoubleValue();	  Double    nOd    =    doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
89	[BUG]  [BUGGY]  Double  nOd  =  getNullValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]      AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getNullValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getNullValue();	  Double    nOd    =    doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
90	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  Long  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  Long  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    Long  nOd  =  object.doubleValue();	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	add
91	[BUG]  [BUGGY]  Double  nOd  =  getNumber().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getNumber().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getNumber().doubleValue();	  double    nOd    =    getNumber().doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
92	[BUG]  [BUGGY]  int  n  =  objects.numerator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  objects.numerator();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  objects.numerator();	  int    n    =    object.numerator();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	49	None	replace
93	[BUG]  [BUGGY]  int  nOd  =  this.object.getNumberOfIterations()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.object.getNumberOfIterations()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.object.getNumberOfIterations()  +  1;	  int    nOd    =    this.object.getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	37	None	replace
94	[BUG]  [BUGGY]  Double  nOd  =  getN().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  getN().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  nOd  =  getN().doubleValue();	  double    nOd    =    getN().doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	31	None	replace
95	[BUG]  [BUGGY]  int  nOd  =  this.object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.object.getN()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.object.getN()  -  1;	  int    nOd    =    this.object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
96	[BUG]  [BUGGY]  double  n  =  getObject().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =  getObject().doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =  getObject().doubleValue();	  double    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
97	[BUG]  [BUGGY]  double  nOd  =  getValue().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getValue().doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getValue().doubleValue();	  double    nOd    =    value().doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
98	[BUG]  [BUGGY]  int  n  =  this.getNumberOfFractions().compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.getNumberOfFractions().compareTo(object);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.getNumberOfFractions().compareTo(object);	  int    n    =    object.compareTo(this);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
99	[BUG]  [BUGGY]  double  nOd  =  getN()  -  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  -  2;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  -  2;	  int    nOd    =    getN()    -    2;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	48	None	replace
100	[BUG]  [BUGGY]  int  n  =  this.object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.object.getN()  +  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.object.getN()  +  1;	  int    n    =    this.object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
101	[BUG]  [BUGGY]  Double  n  =  value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  n  =  value.doubleValue();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  n  =  value.doubleValue();	  Double    n    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	50	None	replace
102	[BUG]  [BUGGY]  int  nOd  =  getDenominator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  getDenominator();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  getDenominator();	  int    nOd    =    getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	39	None	replace
103	[BUG]  [BUGGY]  int  n  =  object!=  null?  0  :  object.compareTo(this);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  object!=  null?  0  :  object.compareTo(this);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  object!=  null?  0  :  object.compareTo(this);	  int    n    =    object!=    null?    0    :    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
104	[BUG]  [BUGGY]  int  n  =  this.object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  n  =  this.object.getN()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  n  =  this.object.getN()  -  1;	  int    n    =    this.object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
105	[BUG]  [BUGGY]  double  nOd  =  getN()  *  object.getValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  *  object.getValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  *  object.getValue();	  double    nOd    =    getN()    *    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	47	None	replace
106	[BUG]  [BUGGY]  int  nOd  =  this.object.getNumberOfIterations()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  this.object.getNumberOfIterations()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  this.object.getNumberOfIterations()  -  1;	  int    nOd    =    this.object.getNumberOfIterations();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	37	None	replace
107	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  Double  dOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  object.doubleValue();  Double  dOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    object.doubleValue();    Double  dOd  =  object.doubleValue();	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	add
108	[BUG]  [BUGGY]  double  nOd  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  item.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  item.doubleValue();	  double    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	43	None	replace
109	[BUG]  [BUGGY]  Neighbor  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Neighbor  nOd  =  object.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Neighbor  nOd  =  object.doubleValue();	  nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	36	None	replace
110	[BUG]  [BUGGY]  double  nOd  =  getDenominator();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getDenominator();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getDenominator();	  double    nOd    =    getDouble();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
111	[BUG]  [BUGGY]  Double  nOd  =  doubleValue();  Double  dOd  =  doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]    AssertionFailedError    [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  nOd  =  doubleValue();  Double  dOd  =  doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double    nOd    =    doubleValue();    Double  dOd  =  doubleValue();	  	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	add
112	[BUG]  [BUGGY]  double  n  =  super.compareTo(object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =  super.compareTo(object);  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =  super.compareTo(object);	  double    n    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	44	None	replace
113	[BUG]  [BUGGY]  double  nOd  =  object.getKey();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  object.getKey();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  object.getKey();	  double    nOd    =    object.getValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
114	[BUG]  [BUGGY]  double  nOd  =  this.value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  this.value.doubleValue();  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  this.value.doubleValue();	  double    nOd    =    value.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	40	None	replace
115	[BUG]  [BUGGY]  double  n  =(this.object!=  null)?  this.object.compareTo(object):  0;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =(this.object!=  null)?  this.object.compareTo(object):  0;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =(this.object!=  null)?  this.object.compareTo(object):  0;	  double    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
116	[BUG]  [BUGGY]  double  n  =(this.object  ==  null)?  this.object.compareTo(object):  0;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  n  =(this.object  ==  null)?  this.object.compareTo(object):  0;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  n  =(this.object  ==  null)?  this.object.compareTo(object):  0;	  double    n    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
117	[BUG]  [BUGGY]  double  nOd  =  getN()  -(object!=  null?  0  :  object.getValue());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  double  nOd  =  getN()  -(object!=  null?  0  :  object.getValue());  [BUGGY]      double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	double  nOd  =  getN()  -(object!=  null?  0  :  object.getValue());	  double    nOd    =    getN()    -(object!=    null?    0    :    object.doubleValue());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	45	None	replace
118	[BUG]  [BUGGY]  int  nOd  =  object.getNumberOfIterations()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getNumberOfIterations()  -  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getNumberOfIterations()  -  1;	  int    nOd    =    object.getNumberOfIterations()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	38	None	replace
119	[BUG]  [BUGGY]  int  nOd  =  object.getN()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  int  nOd  =  object.getN()  *  1;  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	int  nOd  =  object.getN()  *  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
120	[BUG]  [BUGGY]  Double  n  =  getNumber();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {      [BUGGY]  Double  n  =  getNumber();  [BUGGY]      double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	259	259	1	replace	Double  n  =  getNumber();	  Double    n    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	50	None	replace
