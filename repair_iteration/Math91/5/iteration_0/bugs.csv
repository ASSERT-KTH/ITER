bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
9	[BUG] [BUGGY] super(); [FE] AssertionFailedError [CONTEXT] public Fraction(int num, int den) { [BUGGY] super(); [BUGGY] if (den == 0) { throw MathRuntimeException.createArithmeticException("zero denominator in fraction {0}/{1}", num, den); } if (den < 0) { if (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) { throw MathRuntimeException.createArithmeticException("overflow in fraction {0}/{1}, cannot negate", num, den); } num = -num; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(int,int)  int num int den [VARIABLES] Fraction MINUS_ONE ONE TWO ZERO boolean long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int d den denominator maxDenominator maxIterations n num numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	209	209	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public Fraction(int num, int den) { [BUGGY] [BUGGY] super(); if (den == 0) { throw MathRuntimeException.createArithmeticException("zero denominator in fraction {0}/{1}", num, den); } if (den < 0) { if (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) { throw MathRuntimeException.createArithmeticException("overflow in fraction {0}/{1}, cannot negate", num, den); } num = -num; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(int,int)  int num int den [VARIABLES] Fraction MINUS_ONE ONE TWO ZERO boolean long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int d den denominator maxDenominator maxIterations n num numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	209	209	1	add	
