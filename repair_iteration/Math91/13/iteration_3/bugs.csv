bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.numerator  *=  -1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  *=  -1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  *=  -1;	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  this.numerator  =  num  +  den  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  +  den  +  1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  +  den  +  1;	  this.numerator    =    num    +    den;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  this.numerator  =  num  +  den  *  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  +  den  *  2;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  +  den  *  2;	  this.numerator    =    num    +    den;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  this.numerator  =  num  +  den  *  denominator;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  +  den  *  denominator;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  +  den  *  denominator;	  this.numerator    =    num    +    den;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  this.numerator  =  new  int[den];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  new  int[den];  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  new  int[den];	  this.numerator    =    numerator;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  this.numerator  =  n;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  n;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  n;	  this.numerator    =    numerator;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  num  *=  -1;  den  *=  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  num  *=  -1;  den  *=  1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	num  *=  -1;  den  *=  1;	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  -1;  den  *=  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  -1;  den  *=  1;  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  -1;  den  *=  1;  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  this.denominator  =  den  /  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  den  /  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  den  /  1;	  this.denominator    =    den    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  this.denominator  =  num  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  num  -  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  num  -  1;	  this.denominator    =    den    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
13	[BUG]  [BUGGY]  this.denominator  =  numerator  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  numerator  -  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  numerator  -  1;	  this.denominator    =    den    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
14	[BUG]  [BUGGY]  int  num  *=  2;  den  *=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  int  num  *=  2;  den  *=  2;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	int  num  *=  2;  den  *=  2;	  int    num    *=    -1;    den    *=    -1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  int  num  *=  1;  den  *=  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  int  num  *=  1;  den  *=  1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	int  num  *=  1;  den  *=  1;	  int    num    *=    -1;    den    *=    -1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  this.numerator  =  num  +  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  +  3;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  +  3;	  this.numerator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  this.denominator  =  des;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  des;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  des;	  this.denominator    =    d;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  this.denominator  =  den  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  den  +  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  den  +  1;	  this.denominator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  this.denominator  =  num  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  num  +  2;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  num  +  2;	  this.denominator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  this.denominator  =  n  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  n  +  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  n  +  1;	  this.denominator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  num  *=  1;  den  *=  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  num  *=  1;  den  *=  1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	num  *=  1;  den  *=  1;	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  1;  den  *=  1;  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  1;  den  *=  1;  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
25	[BUG]  [BUGGY]  num  *=  0;  den  *=  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  num  *=  0;  den  *=  0;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	num  *=  0;  den  *=  0;	  num    *=    -1;    den    *=    -1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  num  *=  2;  den  *=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  num  *=  2;  den  *=  2;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	num  *=  2;  den  *=  2;	  num    *=    -1;    den    *=    -1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  int  num  *=  1;  den  *=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  int  num  *=  1;  den  *=  2;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	int  num  *=  1;  den  *=  2;	  int    num    *=    -1;    den    *=    -1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  this.denominator  =  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  null;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  null;	  this.denominator    =    n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
30	[BUG]  [BUGGY]  this.numerator  =  num  +  4;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  +  4;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  +  4;	  this.numerator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  this.numerator  *=  -1;  den  *=  -1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  *=  -1;  den  *=  -1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  *=  -1;  den  *=  -1;	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  if(num  <  0)  {  num  *=  -1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(num  <  0)  {  num  *=  -1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(num  <  0)  {  num  *=  -1;  denied  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  this.numerator  =  denominator;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  denominator;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  denominator;	  this.numerator    =    numerator;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  int  den  =  num.intValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  int  den  =  num.intValue();  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	int  den  =  num.intValue();	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  1;  den  *=  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  this.denominator  =  -1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  -1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  -1;	  this.denominator    =    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  this.numerator  =  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  null;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  null;	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  num  *=  -1;  des  *=  -1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  num  *=  -1;  des  *=  -1;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	num  *=  -1;  des  *=  -1;	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  if(den  >  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  >  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  >  0)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  if(den  <  1)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  1)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  1)  {  num  *=  -1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    -1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  this.numerator  =  deserator;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  deserator;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  deserator;	  this.numerator    =    numerator;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  this.denominator  =  num  +  den;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.denominator  =  num  +  den;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.denominator  =  num  +  den;	  this.denominator    =    num    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  1)  {  num  *=  1;  den  *=  1;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
46	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  this.numerator  =  num  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  this.numerator  =  num  *  2;  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	this.numerator  =  num  *  2;	  this.numerator    =    num    +    2;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  1;  den  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  -1;  denied  *=  -1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(num    <    0)    {    num    *=    -1;    den    *=    -1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  1)  {  num  *=  1;  den  *=  1;  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  1)  {  num  *=  1;  den  *=  1;  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
51	[BUG]  [BUGGY]  if(den  <  0)  {  num  *=  -1;  den  *=  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      den  /=  d;  }  if  (den  <  0)  {  num  *=  -1;  den  *=  -1;  }  this.numerator  =  num;  this.denominator  =  den;      [BUGGY]  if(den  <  0)  {  num  *=  -1;  den  *=  1;  }  [BUGGY]        [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	236	236	1	replace	if(den  <  0)  {  num  *=  -1;  den  *=  1;  }	  if(den    <    0)    {    num    *=    1;    den    *=    1;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
