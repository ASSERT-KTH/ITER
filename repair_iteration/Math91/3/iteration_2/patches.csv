bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  object.getN()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  object.getN()  -  1;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	18	None	replace
2	[BUG]  [BUGGY]  double  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  object.getN()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  object.getN()  +  1;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	18	None	replace
3	[BUG]  [BUGGY]  double  nOd  =  object.getN()  -  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  object.getN()  -  2;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  object.getN()  -  2;	  double    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	18	None	replace
4	[BUG]  [BUGGY]  double  nOd  =  getN()  -  getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getN()  -  getN();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getN()  -  getN();	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	33	None	replace
5	[BUG]  [BUGGY]  int  nOd  =  getN()  -  getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN()  -  getN()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  -  getN()  +  1;	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	33	None	replace
6	[BUG]  [BUGGY]  int  nOd  =  getN()  *  getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN()  *  getN();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  *  getN();	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	33	None	replace
7	[BUG]  [BUGGY]  double  nOd  =  this.object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  this.object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  this.object.doubleValue()  +  1;	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	74	None	replace
8	[BUG]  [BUGGY]  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  nOd  =  this.object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  this.object.doubleValue();	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	74	None	replace
9	[BUG]  [BUGGY]  aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method.   ");    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	54	None	replace
10	[BUG]  [BUGGY]  aughtInvalidException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  aughtInvalidException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	aughtInvalidException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method.   ");    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	54	None	replace
11	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	80	None	replace
12	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	80	None	replace
13	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
14	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  dOn);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
15	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  dOn);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
16	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
17	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
18	[BUG]  [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  +  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
19	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
20	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
21	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);	  (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
22	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	44	None	replace
23	[BUG]  [BUGGY]  Double  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  Double  nOd  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	Double  nOd  =  object.doubleValue();	  double    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	50	None	replace
24	[BUG]  [BUGGY]  double  nOd  =  getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getN()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getN()  -  1;	  int    nOd    =    getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	31	None	replace
25	[BUG]  [BUGGY]  long  nOd  =  getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  long  nOd  =  getN()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  nOd  =  getN()  -  1;	  int    nOd    =    getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	31	None	replace
26	[BUG]  [BUGGY]  return  dOn  -  nOd.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  -  nOd.compareTo(dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  -  nOd.compareTo(dOn);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
27	[BUG]  [BUGGY]  return  nOd  -  dOn.compareTo(dOn,  n);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn.compareTo(dOn,  n);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn.compareTo(dOn,  n);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
28	[BUG]  [BUGGY]  return  nOd  -  dOff.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOff.compareTo(dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOff.compareTo(dOn);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
29	[BUG]  [BUGGY]  return  dOn.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn.compareTo(nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn.compareTo(nOd);	  return    nOd.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	40	None	replace
30	[BUG]  [BUGGY]  return  nOd.compareTo(dOn,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd.compareTo(dOn,  dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn,  dOn);	  return    nOd.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	40	None	replace
31	[BUG]  [BUGGY]  return  nOd.compareTo(dOn,  dOff);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd.compareTo(dOn,  dOff);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn,  dOff);	  return    nOd.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	40	None	replace
32	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
33	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
34	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
35	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	28	None	replace
36	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  -1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  -1  :  0);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
37	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber(),  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber(),  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(getNumber(),  dOn);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
38	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nOffset);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nOffset);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
39	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  nOd);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
40	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  nOff,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  nOff,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  nOff,  dOn);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
41	[BUG]  [BUGGY]  long  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  long  nOd  =  object.getN()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  nOd  =  object.getN()  -  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	19	None	replace
42	[BUG]  [BUGGY]  return  dOn  -  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  -  nOd;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  -  nOd;	  return    nOd    -    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	replace
43	[BUG]  [BUGGY]  return  nOd  -  dOn.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn.doubleValue();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn.doubleValue();	  return    nOd    -    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	replace
44	[BUG]  [BUGGY]  return  nOd  -  dOn  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn  +  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn  +  1;	  return    nOd    -    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	replace
45	[BUG]  [BUGGY]  return  nOd  /  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  /  dOn;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  /  dOn;	  return    nOd    -    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	replace
46	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	46	None	replace
47	[BUG]  [BUGGY]  long  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  long  nOd  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  nOd  =  object.doubleValue()  +  1;	  int    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	38	None	replace
48	[BUG]  [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  +1);	  return    (nOd    <    dOn)?    -1    :    ((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	52	None	replace
49	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  dOn  >  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  dOn  >  nOd)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  dOn  >  nOd)?  +1);	  return    (nOd    <    dOn)?    -1    :    ((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	52	None	replace
50	[BUG]  [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1);	  return    (nOd    <    dOn)?    -1    :    ((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	52	None	replace
51	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  1  :  0);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	22	None	replace
52	[BUG]  [BUGGY]  int  nOd  =  Math.min(numerator,  nOd,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(numerator,  nOd,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(numerator,  nOd,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
53	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  nDenominator,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  nDenominator,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  nDenominator,  dOn);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
54	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  denominator,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  denominator,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  denominator,  dOn);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
55	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  numIterations);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  numIterations);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  numIterations);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
56	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
57	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
58	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	27	None	replace
59	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  -1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	45	None	replace
60	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  ==  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  ==  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :((  nOd  ==  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	77	None	replace
61	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >=  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >=  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :((  nOd  >=  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	77	None	replace
62	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	77	None	replace
63	[BUG]  [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
64	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
65	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
66	[BUG]  [BUGGY]  int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	73	None	replace
67	[BUG]  [BUGGY]  int  denominator  =  object.compareTo(nOd);  if(denominator  ==  0)  {  return  0;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  denominator  =  object.compareTo(nOd);  if(denominator  ==  0)  {  return  0;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  denominator  =  object.compareTo(nOd);  if(denominator  ==  0)  {  return  0;  }	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	73	None	replace
68	[BUG]  [BUGGY]  int  denominator  =  object.compareTo(dOnOd);  if(denominator  ==  0)  {  return  0;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  denominator  =  object.compareTo(dOnOd);  if(denominator  ==  0)  {  return  0;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  denominator  =  object.compareTo(dOnOd);  if(denominator  ==  0)  {  return  0;  }	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	73	None	replace
69	[BUG]  [BUGGY]  int  denominator  =  object.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  denominator  =  object.compareTo(nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  denominator  =  object.compareTo(nOd);	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	73	None	replace
70	[BUG]  [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }	  if(dOn    <    n)    {    int    den    =    getNumber().compareTo(dOn);    if(den    >    0)    {    return    n;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	72	None	replace
71	[BUG]  [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  nOd;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  nOd;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  nOd;  }	  if(dOn    <    n)    {    int    den    =    getNumber().compareTo(dOn);    if(den    >    0)    {    return    n;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	72	None	replace
72	[BUG]  [BUGGY]  int  den  =  getNumber().compareTo(dOnOd);  if(den  >  0)  {  return  n;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  den  =  getNumber().compareTo(dOnOd);  if(den  >  0)  {  return  n;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  den  =  getNumber().compareTo(dOnOd);  if(den  >  0)  {  return  n;  }	  if(dOn    <    n)    {    int    den    =    getNumber().compareTo(dOn);    if(den    >    0)    {    return    n;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	72	None	replace
73	[BUG]  [BUGGY]  int  den  =  getNumber().compareTo(nOd);  if(den  >  0)  {  return  n;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  den  =  getNumber().compareTo(nOd);  if(den  >  0)  {  return  n;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  den  =  getNumber().compareTo(nOd);  if(den  >  0)  {  return  n;  }	  if(dOn    <    n)    {    int    den    =    getNumber().compareTo(dOn);    if(den    >    0)    {    return    n;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	72	None	replace
74	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
75	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
76	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);	  return    dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
77	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber()  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber()  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(getNumber()  -  1);	  double    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
78	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(getDouble());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getNumber().compareTo(getDouble());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(getDouble());	  double    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
79	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	71	None	replace
80	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	71	None	replace
81	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	71	None	replace
82	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	71	None	replace
83	[BUG]  [BUGGY]  return  dOn.compareTo(nOd)-  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn.compareTo(nOd)-  dOn;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn.compareTo(nOd)-  dOn;	  return    nOd.compareTo(dOn)-    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	43	None	replace
84	[BUG]  [BUGGY]  return  nOd.compareTo(dOn)/  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd.compareTo(dOn)/  dOn;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn)/  dOn;	  return    nOd.compareTo(dOn)-    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	43	None	replace
85	[BUG]  [BUGGY]  return  nOd.compareTo(dOn)-  dOff;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd.compareTo(dOn)-  dOff;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn)-  dOff;	  return    nOd.compareTo(dOn)-    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	43	None	replace
86	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(object.getNumber()  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(object.getNumber()  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(object.getNumber()  -  1);	  int    nOd    =    getNumber().compareTo(getNumber()    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
87	[BUG]  [BUGGY]  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  nOd  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  object.doubleValue()  +  1;	  nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	51	None	replace
88	[BUG]  [BUGGY]  nOd  =  n.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  nOd  =  n.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  n.doubleValue();	  nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	51	None	replace
89	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);	  return    dOn    <    nOd?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	61	None	replace
90	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >=  dOn)?  0  :  +1);	  return    dOn    <    nOd?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	61	None	replace
91	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  +1);	  return    dOn    <    nOd?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	61	None	replace
92	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  nOffset);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  1,  nOffset);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
93	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  numerator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  numerator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  1,  numerator);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
94	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  1,  denominator);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
95	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
96	[BUG]  [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  +  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
97	[BUG]  [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  +  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  +  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
98	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  nOffset,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  nOffset,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  nOffset,  dOn);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
99	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset  +  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset  +  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  nOffset  +  1);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
100	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  nOffset);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn,  nOffset);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
101	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset-1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset-1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  nOffset-1);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
102	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  nOd)?  +1  :  0);	  (dOn    <    nOd)?    -1    :((    dOn    >    nOd)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	25	None	replace
103	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
104	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
105	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
106	[BUG]  [BUGGY]  Double  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  Double  dOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	Double  dOn  =  object.doubleValue();	  double    dOn    =    object.doubleValue()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	48	None	replace
107	[BUG]  [BUGGY]  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  dOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	dOn  =  object.doubleValue();	  double    dOn    =    object.doubleValue()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	48	None	replace
108	[BUG]  [BUGGY]  aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	aughtException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	55	None	replace
109	[BUG]  [BUGGY]  Annotation  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  Annotation  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	Annotation  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	55	None	replace
110	[BUG]  [BUGGY]  vice.compareTo(dOn,  nOd)  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  vice.compareTo(dOn,  nOd)  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	vice.compareTo(dOn,  nOd)  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	55	None	replace
111	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  -  1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	67	None	replace
112	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  -  1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	67	None	replace
113	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	67	None	replace
114	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	64	None	replace
115	[BUG]  [BUGGY]  double  nOd  =  getN().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getN().doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getN().doubleValue();	  double    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	30	None	replace
116	[BUG]  [BUGGY]  double  nOd  =  getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getN()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getN()  +  1;	  double    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	30	None	replace
117	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
118	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
119	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
120	[BUG]  [BUGGY]  double  nOd  =  Math.min(dOn,  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(dOn,  nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(dOn,  nOd);	  int    nOd    =    Math.min(dOn,    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	59	None	replace
121	[BUG]  [BUGGY]  nOd  =  Math.min(nOd,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  nOd  =  Math.min(nOd,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  Math.min(nOd,  dOn);	  int    nOd    =    Math.min(dOn,    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	59	None	replace
122	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOff);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOff);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOff);	  int    nOd    =    Math.min(dOn,    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	59	None	replace
123	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn,  denominator);	  double    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
124	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn  +  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(nOd,  dOn  +  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn  +  1);	  double    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
125	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(nOd,  dOn,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn,  nDenominator);	  double    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
126	[BUG]  [BUGGY]  return  dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	66	None	replace
127	[BUG]  [BUGGY]  return  nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	66	None	replace
128	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  nOd)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  nOd)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  ==  nOd)?  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
129	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
130	[BUG]  [BUGGY]  int  nOd  =  getN().doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN().doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN().doubleValue();	  int    nOd    =    getN()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	32	None	replace
131	[BUG]  [BUGGY]  int  nOd  =  getN().intValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN().intValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN().intValue();	  int    nOd    =    getN()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	32	None	replace
132	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	53	None	replace
133	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	53	None	replace
134	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	53	None	replace
135	[BUG]  [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	63	None	replace
136	[BUG]  [BUGGY]  return(dOn  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	63	None	replace
137	[BUG]  [BUGGY]  return(dOn  <  0)?  -1  :  ((  nOd  >>  0)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  0)?  -1  :  ((  nOd  >>  0)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  0)?  -1  :  ((  nOd  >>  0)?  +1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	63	None	replace
138	[BUG]  [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	63	None	replace
139	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(object.getNumber());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getNumber().compareTo(object.getNumber());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(object.getNumber());	  int    nOd    =    getNumber().compareTo(object.getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
140	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(object.getDouble());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(object.getDouble());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(object.getDouble());	  int    nOd    =    getNumber().compareTo(object.getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
141	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	60	None	replace
142	[BUG]  [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  =  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	69	None	replace
143	[BUG]  [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  ==  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	69	None	replace
144	[BUG]  [BUGGY]  return(nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  >=  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	69	None	replace
145	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
146	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
147	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
148	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue()  -  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  dOn  =  object.doubleValue()  -  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  dOn  =  object.doubleValue()  -  nOd;	  int    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	56	None	replace
149	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  dOn  =  object.doubleValue()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  dOn  =  object.doubleValue()  +  1;	  int    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	56	None	replace
150	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  nOffset);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  +  1,  nOffset);	  int    nOd    =    Math.min(nOd,    dOn    +    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	58	None	replace
151	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  *  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  *  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  *  1);	  int    nOd    =    Math.min(nOd,    dOn    +    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	58	None	replace
152	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  numerator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  numerator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  +  1,  numerator);	  int    nOd    =    Math.min(nOd,    dOn    +    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	58	None	replace
153	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  +  1,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn    +    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	58	None	replace
154	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  :  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	79	None	replace
155	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  :  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	79	None	replace
156	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	79	None	replace
157	[BUG]  [BUGGY]  long  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  long  nOd  =  object.getN()  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  nOd  =  object.getN()  +  1;	  int    nOd    =    object.getN()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	20	None	replace
158	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
159	[BUG]  [BUGGY]  int  nOd  =  Math.min(numerator,  nOd,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(numerator,  nOd,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(numerator,  nOd,  denominator);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
160	[BUG]  [BUGGY]  int  nOd  =  Math.min(denominator,  nOd,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(denominator,  nOd,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(denominator,  nOd,  dOn);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
161	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  num);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  num);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  num);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
162	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDenominator());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDenominator());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDenominator());	  int    nOd    =    getNumber().compareTo(getDouble());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
163	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble()  -  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble()  -  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDouble()  -  dOn);	  int    nOd    =    getNumber().compareTo(getDouble());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
164	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getIntValue());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getIntValue());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getIntValue());	  int    nOd    =    getNumber().compareTo(getDouble());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
165	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
166	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
167	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  <  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  <  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  <  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
168	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);	  (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
169	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);	  (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
170	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	76	None	replace
171	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	76	None	replace
172	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  0  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	76	None	replace
173	[BUG]  [BUGGY]  (dOn  <  =  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  =  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  =  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);	  (nOd    <    =    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	68	None	replace
174	[BUG]  [BUGGY]  (nOd  >=  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  >=  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  >=  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);	  (nOd    <    =    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	68	None	replace
175	[BUG]  [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  1)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  1)?  1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  0)?  -1  :  ((  nOd  >  1)?  1  :  0);	  (nOd    <    0)?    -1    :    ((    nOd    >    0)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	65	None	replace
176	[BUG]  [BUGGY]  (nOd  <  =  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  =  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  =  0)?  -1  :  ((  nOd  >  0)?  1  :  0);	  (nOd    <    0)?    -1    :    ((    nOd    >    0)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	65	None	replace
177	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	75	None	replace
178	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	78	None	replace
179	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
180	[BUG]  [BUGGY]  return(nOd  >=  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  >=  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  >=  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
181	[BUG]  [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
182	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  denominator);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
183	[BUG]  [BUGGY]  double  nOd  =  Math.min(denominator,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(denominator,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(denominator,  dOn);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
184	[BUG]  [BUGGY]  int  nOd  =  Math.min(numerator,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(numerator,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(numerator,  dOn);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
185	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd  +  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  -  nOd  +  1;	  double    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	49	None	replace
186	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  /  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  dOn  =  object.doubleValue()  /  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  /  nOd;	  double    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	49	None	replace
187	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  *  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  dOn  =  object.doubleValue()  *  nOd;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  *  nOd;	  double    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	49	None	replace
188	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(nOd,  dOn  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn  -  1);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
189	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  1,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
190	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  nOd  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  nOd  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  nOd  -  1);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
191	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDoubleValue());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDoubleValue());  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDoubleValue());	  int    nOd    =    getNumber().compareTo(getDouble());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
192	[BUG]  [BUGGY]  int  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  this.object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  this.object.doubleValue();	  double    nOd    =    this.object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	74	None	replace
193	[BUG]  [BUGGY]  return  dOff.compareTo(nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOff.compareTo(nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOff.compareTo(nOd);	  return    nOd.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	40	None	replace
194	[BUG]  [BUGGY]  int  nOd  =  object.getN()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  object.getN()  *  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.getN()  *  1;	  int    nOd    =    object.getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	19	None	replace
195	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  1  -  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
196	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  1  -  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	29	None	replace
197	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  numIterations,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  numIterations,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  numIterations,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
198	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  0,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  0,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  0,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
199	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  dOff);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  dOff);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  dOff);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	53	None	replace
200	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  0)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  0)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  0)?  0  :  nOd);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	53	None	replace
201	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	71	None	replace
202	[BUG]  [BUGGY]  return(nOd  <  =  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	63	None	replace
203	[BUG]  [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	23	None	replace
204	[BUG]  [BUGGY]  long  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  long  dOn  =  object.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  dOn  =  object.doubleValue();	  int    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	56	None	replace
205	[BUG]  [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	24	None	replace
206	[BUG]  [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  ==  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	46	None	replace
207	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	46	None	replace
208	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
209	[BUG]  [BUGGY]  int  nOd  =  Math.min(denominator,  dOn,  maxIterations);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(denominator,  dOn,  maxIterations);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(denominator,  dOn,  maxIterations);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
210	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOff)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOff)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOff)?  +1  :  0);	  (dOn    <    nOd)?    -1    :((    dOn    >    nOd)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	25	None	replace
211	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	67	None	replace
212	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  -  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	67	None	replace
213	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	36	None	replace
214	[BUG]  [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	36	None	replace
215	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	36	None	replace
216	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  ==  nOd)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	76	None	replace
217	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  nOd)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	76	None	replace
218	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  nOd)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >=  nOd)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	75	None	replace
219	[BUG]  [BUGGY]  return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	78	None	replace
220	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
221	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  -  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
222	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  0)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  0)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  0)?  0  :  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
223	[BUG]  [BUGGY]  int  nOd  =  object.getN()  +  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  object.getN()  +  2;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.getN()  +  2;	  int    nOd    =    object.getN()    -    2;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	21	None	replace
224	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
225	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  -  nOd);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
226	[BUG]  [BUGGY]  double  nOd  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  item.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  item.doubleValue();	  double    nOd    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	50	None	replace
227	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	34	None	replace
228	[BUG]  [BUGGY]  AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method.   ");    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	54	None	replace
229	[BUG]  [BUGGY]  if(dOn  >=  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  if(dOn  >=  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  >=  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method.   ");  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method.   ");    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	54	None	replace
230	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  -1  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  -1  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  -1  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
231	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  -  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  -  dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  0  -  dOn);	  return    nOd    <    dOn?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	26	None	replace
232	[BUG]  [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  0  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  0)?  -1  :  ((  nOd  >  0)?  0  :  0);	  (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	81	None	replace
233	[BUG]  [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
234	[BUG]  [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  ==  dOn)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
235	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  =  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	77	None	replace
236	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >  0)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >  0)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :((  nOd  >  0)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	77	None	replace
237	[BUG]  [BUGGY]  int  nOd  =  Math.min(numerator,  dOn,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(numerator,  dOn,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(numerator,  dOn,  denominator);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
238	[BUG]  [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  <  0)  {  return  n;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  den  =  getNumber().compareTo(dOn);  if(den  <  0)  {  return  n;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  den  =  getNumber().compareTo(dOn);  if(den  <  0)  {  return  n;  }	  if(dOn    <    n)    {    int    den    =    getNumber().compareTo(dOn);    if(den    >    0)    {    return    n;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	72	None	replace
239	[BUG]  [BUGGY]  (nOd  ==  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  ==  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  ==  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);	  (nOd    <    =    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	68	None	replace
240	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  0);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
241	[BUG]  [BUGGY]  return  nOd  -  object.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  object.compareTo(dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  object.compareTo(dOn);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
242	[BUG]  [BUGGY]  return  nOd  /  dOn.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  /  dOn.compareTo(dOn);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  /  dOn.compareTo(dOn);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	41	None	replace
243	[BUG]  [BUGGY]  return  nOd  -  dOn  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn  -  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn  -  1;	  return    nOd    -    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	42	None	replace
244	[BUG]  [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  0)?  -1  :  ((  nOd  >  0)?  +1);	  (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
245	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  object);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  object);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  object);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
246	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  n);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  n);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  n);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
247	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  0);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
248	[BUG]  [BUGGY]  return  dOff.compareTo(nOd)-  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  dOff.compareTo(nOd)-  dOn;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOff.compareTo(nOd)-  dOn;	  return    nOd.compareTo(dOn)-    dOn;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	43	None	replace
249	[BUG]  [BUGGY]  (nOd  >  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  >  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  >  0)?  -1  :  ((  nOd  >  0)?  1  :  0);	  (nOd    <    0)?    -1    :    ((    nOd    >    0)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	65	None	replace
250	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
251	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  1);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	35	None	replace
252	[BUG]  [BUGGY]  int  desominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  desominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  desominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	73	None	replace
253	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	44	None	replace
254	[BUG]  [BUGGY]  int  nOd  =  getN()  *  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN()  *  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  *  1;	  int    nOd    =    getN()    -    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	31	None	replace
255	[BUG]  [BUGGY]  return  nOd  >  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  >  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  >  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	66	None	replace
256	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1  -  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1  -  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  dOn  >  nOd)?  1  -  nOd);	  return    (nOd    <    dOn)?    -1    :    ((    dOn    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	52	None	replace
257	[BUG]  [BUGGY]  AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	AnnotatedFunction  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	55	None	replace
258	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);	  return    (nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
259	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1);	  return    dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
260	[BUG]  [BUGGY]  nOd  =  value.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  nOd  =  value.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  value.doubleValue();	  nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	51	None	replace
261	[BUG]  [BUGGY]  return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  0?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	79	None	replace
262	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
263	[BUG]  [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  =  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);	  return(nOd    <    =    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	62	None	replace
264	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0  :  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  0  :  0);	  (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    -1    :    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
265	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn  -  1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    1    -    dOn);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
266	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  nOd  +  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  nOd  +  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  nOd  +  1);	  int    nOd    =    Math.min(nOd,    dOn    +    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	58	None	replace
267	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble()  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble()  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDouble()  -  1);	  int    nOd    =    getNumber().compareTo(getNumber()    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
268	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDenominator()  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDenominator()  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDenominator()  -  1);	  int    nOd    =    getNumber().compareTo(getNumber()    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
269	[BUG]  [BUGGY]  int  nOd  =  getN()  -  getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getN()  -  getN()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  -  getN()  -  1;	  int    nOd    =    getN()    -    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	33	None	replace
270	[BUG]  [BUGGY]  (nOd  <  1)?  -1  :  ((  nOd  >  1)?  1  :  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (nOd  <  1)?  -1  :  ((  nOd  >  1)?  1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  1)?  -1  :  ((  nOd  >  1)?  1  :  0);	  (nOd    <    0)?    -1    :    ((    nOd    >    0)?    1    :    0);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
271	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  :  nOd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1  :  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0    -    1);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
272	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  2);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  2);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  2);	  int    nOd    =    Math.min(nOd,    dOn    -    1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	57	None	replace
273	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >=  dOn)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
274	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  ==  dOn)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
275	[BUG]  [BUGGY]  return  nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
276	[BUG]  [BUGGY]  return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    1    :    0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
277	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  dOn);	  int    nOd    =    Math.min(dOn,    nOd);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	59	None	replace
278	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
279	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
280	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
281	[BUG]  [BUGGY]  return(nOd  >  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  >  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  >  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);	  return(nOd    <    0)?    -1    :    ((    nOd    >=    0)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
282	[BUG]  [BUGGY]  return  nOd  -  dOn  /  dOff;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn  /  dOff;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn  /  dOff;	  return    nOd    -    dOn;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
283	[BUG]  [BUGGY]  return  nOd  -  dOn  -  dOn;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn  -  dOn;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn  -  dOn;	  return    nOd    -    dOn;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
284	[BUG]  [BUGGY]  return  nOd  -  dOn.compareTo(dOn,  dOff);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  -  dOn.compareTo(dOn,  dOff);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn.compareTo(dOn,  dOff);	  return    nOd    -    dOn.compareTo(dOn);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
285	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  0  :  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    ==    dOn)?    +1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
286	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :((  nOd  >  dOn)?  0  :  0);	  (dOn    <    nOd)?    -1    :((    dOn    >    nOd)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
287	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1  :  nOd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >=    dOn)?    +1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
288	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  nOd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    0    :    nOd);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
289	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  -  nOd  -  1;	  double    dOn    =    object.doubleValue()    -    nOd;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	49	None	replace
290	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
291	[BUG]  [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  ==  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    -1    :    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
292	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  +1);	  return    nOd    <    =    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
293	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  nOd,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  nOd,  nOffset);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  nOd,  nOffset);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
294	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  dOn);	  int    nOd    =    Math.min(nOd,    dOn,    nOffset);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
295	[BUG]  [BUGGY]  int  denominator  =  object.compareTo(dOn);  if(denominator  <  0)  {  return  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  denominator  =  object.compareTo(dOn);  if(denominator  <  0)  {  return  0;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  denominator  =  object.compareTo(dOn);  if(denominator  <  0)  {  return  0;  }	  if(dOn    <    n)    {    int    denominator    =    object.compareTo(dOn);    if(denominator    ==    0)    {    return    0;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
296	[BUG]  [BUGGY]  return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  >  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
297	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  0  :  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  0  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    0    :    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
298	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  0  :  nOd);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
299	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble(),  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble(),  dOn);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDouble(),  dOn);	  int    nOd    =    getNumber().compareTo(getDouble());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
300	[BUG]  [BUGGY]  double  nOd  =  Math.min(don,  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  Math.min(don,  nOd);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(don,  nOd);	  double    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
301	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber(),  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber(),  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(getNumber(),  0);	  double    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
302	[BUG]  [BUGGY]  (dOn  <  =  nOd)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  =  nOd)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  =  nOd)?  -1  :((  dOn  >  dOn)?  +1  :  0);	  (nOd    <    =    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
303	[BUG]  [BUGGY]  (dOn  <  =  nOd)?  -1  :((  nOd  >  dOn)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  (dOn  <  =  nOd)?  -1  :((  nOd  >  dOn)?  +1  :  0);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  =  nOd)?  -1  :((  nOd  >  dOn)?  +1  :  0);	  (nOd    <    =    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
304	[BUG]  [BUGGY]  double  dOn  =  item.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  double  dOn  =  item.doubleValue();  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  item.doubleValue();	  double    dOn    =    object.doubleValue()    +    1;    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	47	None	replace
305	[BUG]  [BUGGY]  int  nOd  =  Math.min(don,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(don,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(don,  denominator);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
306	[BUG]  [BUGGY]  int  nOd  =  Math.min(denominator,  dOn  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(denominator,  dOn  -  1);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(denominator,  dOn  -  1);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
307	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  desominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  desominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  desominator);	  int    nOd    =    Math.min(denominator,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	70	None	replace
308	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  dOn  =  object.doubleValue()  -  1;  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  dOn  =  object.doubleValue()  -  1;	  int    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	56	None	replace
309	[BUG]  [BUGGY]  if(dOn  <  0  ||  dOn  >  nOd)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  if(dOn  <  0  ||  dOn  >  nOd)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  <  0  ||  dOn  >  nOd)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
310	[BUG]  [BUGGY]  aughtInvalidArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  aughtInvalidArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	aughtInvalidArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());	  if(dOn    <    0)    {    throw    new    IllegalArgumentException(   "Fraction    is    not    abstract    and    does    not    override    abstract    method:   "    +    getName());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
311	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn  -  dDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn  -  dDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  dOn  -  dDenominator);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
312	[BUG]  [BUGGY]  int  nOd  =  Math.min(denominator,  dOn,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(denominator,  dOn,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(denominator,  dOn,  nDenominator);	  int    nOd    =    Math.min(nOd,    dOn,    nDenominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	17	None	replace
313	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1  :  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1  :  0);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  dOn  >>  dOn)?  +1  :  0);	  return(dOn    <    nOd)?    -1    :    ((    nOd    >>    dOn)?    +1    :    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
314	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  nOd,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(dOn,  nOd,  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  nOd,  denominator);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
315	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn  -  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  dOn  -  denominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  dOn  -  denominator);	  int    nOd    =    Math.min(nOd,    dOn,    denominator);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
316	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nDenominator);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  nDenominator);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
317	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  n);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError      [CONTEXT]      public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();      [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  n);  [BUGGY]      return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  dOn,  n);	  int    nOd    =    getNumber().compareTo(getNumber(),    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	82	None	replace
