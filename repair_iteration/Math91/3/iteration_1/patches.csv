bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
2	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
3	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
4	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
5	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1  :  0);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	6	None	replace
6	[BUG]  [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  getNumber().compareTo(getNumber());  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getNumber().compareTo(getNumber());	      int    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
7	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber()  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber()  -  1);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber()  -  1);	      int    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
8	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(object.getNumber());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getNumber().compareTo(object.getNumber());  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(object.getNumber());	      int    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
9	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble());  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getNumber().compareTo(getDouble());  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getDouble());	      int    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
10	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
11	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
12	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
13	[BUG]  [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
14	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  denominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  denominator);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  denominator);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
15	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nOffset);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  nOffset);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
16	[BUG]  [BUGGY]  double  nOd  =  Math.min(nOd,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  Math.min(nOd,  dOn);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  Math.min(nOd,  dOn);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
17	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nDenominator);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(nOd,  dOn,  nDenominator);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn,  nDenominator);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
18	[BUG]  [BUGGY]  double  nOd  =  object.getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  object.getN();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  object.getN();	      int    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
19	[BUG]  [BUGGY]  int  nOd  =  object.getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  object.getN()  -  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.getN()  -  1;	      int    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
20	[BUG]  [BUGGY]  int  nOd  =  object.getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  object.getN()  +  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.getN()  +  1;	      int    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
21	[BUG]  [BUGGY]  int  nOd  =  object.getN()  -  2;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  object.getN()  -  2;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.getN()  -  2;	      int    nOd    =    object.getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	13	None	replace
22	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  1  :  0);	      (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
23	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  -1  :  0);	      (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
24	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  +1);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :((  dOn  >  dOn)?  +1);	      (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
25	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :((  dOn  >  nOd)?  +1  :  0);	      (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
26	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  ==  dOn)?  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
27	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >=  dOn)?  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
28	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
29	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  -  dOn);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
30	[BUG]  [BUGGY]  double  nOd  =  getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  getN();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  getN();	      int    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
31	[BUG]  [BUGGY]  int  nOd  =  getN()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getN()  -  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  -  1;	      int    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
32	[BUG]  [BUGGY]  int  nOd  =  getN()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getN()  +  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  +  1;	      int    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
33	[BUG]  [BUGGY]  int  nOd  =  getN()  -  getN();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getN()  -  getN();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getN()  -  getN();	      int    nOd    =    getN();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	14	None	replace
34	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
35	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  0  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
36	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >=  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
37	[BUG]  [BUGGY]  long  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  long  nOd  =  object.doubleValue();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	long  nOd  =  object.doubleValue();	      int    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
38	[BUG]  [BUGGY]  int  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  object.doubleValue()  +  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  object.doubleValue()  +  1;	      int    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	11	None	replace
39	[BUG]  [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
40	[BUG]  [BUGGY]  return  nOd.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd.compareTo(dOn);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn);	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
41	[BUG]  [BUGGY]  return  nOd  -  dOn.compareTo(dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  -  dOn.compareTo(dOn);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn.compareTo(dOn);	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
42	[BUG]  [BUGGY]  return  nOd  -  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                    AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  -  dOn;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  -  dOn;	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
43	[BUG]  [BUGGY]  return  nOd.compareTo(dOn)-  dOn;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                      AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd.compareTo(dOn)-  dOn;  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd.compareTo(dOn)-  dOn;	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
44	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
45	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
46	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  ==  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
47	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  dOn  =  object.doubleValue()  +  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  +  1;	      double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
48	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  dOn  =  object.doubleValue()  -  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  -  1;	      double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
49	[BUG]  [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  dOn  =  object.doubleValue()  -  nOd;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  dOn  =  object.doubleValue()  -  nOd;	      double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
50	[BUG]  [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  object.doubleValue()  +  1;  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  object.doubleValue()  +  1;	      double    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
51	[BUG]  [BUGGY]  nOd  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  nOd  =  object.doubleValue();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	nOd  =  object.doubleValue();	      double    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
52	[BUG]  [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  (nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  (nOd  <  dOn)?  -1  :  ((  dOn  >  dOn)?  +1);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
53	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  0);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
54	[BUG]  [BUGGY]  if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method. ");  }	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
55	[BUG]  [BUGGY]  if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  <  0)  {  throw  new  IllegalArgumentException( "Fraction  is  not  abstract  and  does  not  override  abstract  method: "  +  getName());  }	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
56	[BUG]  [BUGGY]  int  dOn  =  object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  dOn  =  object.doubleValue();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  dOn  =  object.doubleValue();	      double    dOn    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	7	None	replace
57	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  -  1);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  -  1);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
58	[BUG]  [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(nOd,  dOn  +  1);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(nOd,  dOn  +  1);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
59	[BUG]  [BUGGY]  int  nOd  =  Math.min(dOn,  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(dOn,  nOd);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(dOn,  nOd);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
60	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
61	[BUG]  [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  dOn  <  nOd?  -1  :  ((  nOd  >  dOn)?  0  :  +1);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
62	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
63	[BUG]  [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  0)?  -1  :  ((  nOd  >=  0)?  +1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
64	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
65	[BUG]  [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  0)?  -1  :  ((  nOd  >  0)?  1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  0)?  -1  :  ((  nOd  >  0)?  1  :  0);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
66	[BUG]  [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  +1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
67	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  -  1);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
68	[BUG]  [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  =  dOn)?  -1  :((  dOn  >  dOn)?  +1  :  0);	      (nOd    <    dOn)?    -1    :((    dOn    >    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	8	None	replace
69	[BUG]  [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  =  dOn)?  -1  :  ((  nOd  >  dOn)?  -1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
70	[BUG]  [BUGGY]  int  nOd  =  Math.min(denominator,  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  Math.min(denominator,  dOn);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  Math.min(denominator,  dOn);	      int    nOd    =    Math.min(nOd,    dOn);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	15	None	replace
71	[BUG]  [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]            AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  +1);	  return    (dOn    <    nOd)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	3	None	replace
72	[BUG]  [BUGGY]  if(dOn  <  n)  {  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  if(dOn  <  n)  {  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  <  n)  {  int  den  =  getNumber().compareTo(dOn);  if(den  >  0)  {  return  n;  }	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
73	[BUG]  [BUGGY]  if(dOn  <  n)  {  int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]                  AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  if(dOn  <  n)  {  int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	if(dOn  <  n)  {  int  denominator  =  object.compareTo(dOn);  if(denominator  ==  0)  {  return  0;  }	      	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	5	None	replace
74	[BUG]  [BUGGY]  double  nOd  =  this.object.doubleValue();  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  double  nOd  =  this.object.doubleValue();  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	double  nOd  =  this.object.doubleValue();	      double    nOd    =    object.doubleValue();    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	12	None	replace
75	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >=  dOn)?  +1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
76	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >>  dOn)?  +1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >=    dOn)?    +1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	1	None	replace
77	[BUG]  [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn)?  -1  :((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	2	None	replace
78	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]        AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  0  :  nOd);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
79	[BUG]  [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return  nOd  <  dOn?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return    nOd    <    dOn?    -1    :    ((    nOd    >    dOn)?    +1);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	10	None	replace
80	[BUG]  [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	return(dOn  <  nOd)?  -1  :  ((  nOd  >  dOn)?  1  :  0);	  return(nOd    <    dOn)?    -1    :    ((    nOd    >    dOn)?    -1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	4	None	replace
81	[BUG]  [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]              AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  (nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	(nOd  <  dOn)?  -1  :  ((  nOd  >  dOn)?  0  :  0);	      (nOd    <    dOn)?    -1    :    ((nOd    >    dOn)?    1    :    0);    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	9	None	replace
82	[BUG]  [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn);  [CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  int  compareTo(Fraction  object)  {  double  nOd  =  doubleValue();  double  dOn  =  object.doubleValue();    [BUGGY]  int  nOd  =  getNumber().compareTo(getNumber(),  dOn);  [BUGGY]    return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  [CLASS]  Fraction  [METHOD]  compareTo  [RETURN_TYPE]  int  Fraction  object  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  object  ret  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  double  dOn  nOd  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	1.0	261	261	1	replace	int  nOd  =  getNumber().compareTo(getNumber(),  dOn);	      int    nOd    =    getNumber().compareTo(getNumber());    	non-compiled	[CE]  Fraction  is  not  abstract  and  does  not  override  abstract  method  compareTo(Fraction)  in  Comparable	16	None	replace
