bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(den  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(den  ==  0)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  ==  0)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  MINUS_ONE)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(num  <  0  ||  den  >  ZERO)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  ZERO)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  if(den  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(den  >  0)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  0)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	  	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]    int  den  =  MathUtils.gcd(num);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  den  =  MathUtils.gcd(num);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  den  =  MathUtils.gcd(num);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
7	[BUG]  [BUGGY]    int  den  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  den  =  MathUtils.gcd(num,  den);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  den  =  MathUtils.gcd(num,  den);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
8	[BUG]  [BUGGY]    int  den  =  MathUtils.gcd(num,  numerator);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  den  =  MathUtils.gcd(num,  numerator);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  den  =  MathUtils.gcd(num,  numerator);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
9	[BUG]  [BUGGY]    int  n  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  n  =  MathUtils.gcd(num,  den);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  n  =  MathUtils.gcd(num,  den);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
10	[BUG]  [BUGGY]    int  den  =  MathUtils.gcd(num,  num);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  den  =  MathUtils.gcd(num,  num);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  den  =  MathUtils.gcd(num,  num);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
11	[BUG]  [BUGGY]    int  den  =  MathUtils.nextInt(num);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    int  den  =  MathUtils.nextInt(num);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    int  den  =  MathUtils.nextInt(num);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
12	[BUG]  [BUGGY]    Integer  den  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    Integer  den  =  MathUtils.gcd(num,  den);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    Integer  den  =  MathUtils.gcd(num,  den);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
13	[BUG]  [BUGGY]  if(den  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(den  <  =  0)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]    den  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]    den  =  MathUtils.gcd(num,  den);  [BUGGY]  if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	    den  =  MathUtils.gcd(num,  den);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
15	[BUG]  [BUGGY]  if(den  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException( "zero  denominator  in  fraction  {0}/{1} ",  num,  den);  }  [BUGGY]  if(den  <  1)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException( "overflow  in  fraction  {0}/{1},  cannot  negate ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  1)  {	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
