bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  denominator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  denominator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  denominator);	      int    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  des);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  des);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  des);	      int    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  n);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  n);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  n);	      int    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.nextInt(den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den);	      int    den    =    MathUtils.nextInt(num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.nextInt(den  -  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  -  1);	      int    den    =    MathUtils.nextInt(num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.nextInt(den  +  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  +  1);	      int    den    =    MathUtils.nextInt(num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.nextInt(den,  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den,  1);	      int    den    =    MathUtils.nextInt(num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  den  >  ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  ZERO)  {	  if(den    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  MINUS_ONE)  {	  if(den    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  TWO_ZERO)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  den  >  TWO_ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  TWO_ZERO)  {	  if(den    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  num);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  0);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  numerator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(num,  numerator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  numerator);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  n  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  num);	      int    n    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1);	      int    n    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1,  den);	      int    n    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  numerator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  n  =  MathUtils.gcd(num,  numerator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  numerator);	      int    n    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  if(num  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(num  <  1)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  1)  {	  if(den    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  if(den  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  =  1)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  1)  {	  if(den    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  if(den  >  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  >  1)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  1)  {	  if(den    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den);	      int    den    =    MathUtils.gcd(num);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  if(num  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(num  <  =  0)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  =  0)  {	  if(den    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  num);	      int    den    =    MathUtils.gcd(num,    num);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  den  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  num);	      den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  den  =  MathUtils.gcd(num,  den  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  den  =  MathUtils.gcd(num,  den  +  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(num,  den  +  1);	      den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Den  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(den,  num);	      den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  der  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  der  =  MathUtils.gcd(den,  num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	der  =  MathUtils.gcd(den,  num);	      den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  num  =  MathUtils.gcd(num,  den);  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num,  den);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  0);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  0);	      int    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  if(num  <  0  ||  den  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(num  <  0  ||  den  ==  0)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  ==  0)  {	  if(den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  100)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  den  >  100)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  100)  {	  if(den    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  -den);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  -den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  -den);	      int    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  numerator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(den,  numerator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  numerator);	      int    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -den);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  -den);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  0,  den);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  den  =  MathUtils.gcd(num,  den  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  den  =  MathUtils.gcd(num,  den  -  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(num,  den  -  1);	      den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  n  =  MathUtils.gcd(num,  den  -  1);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  -  1);	      int    n    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  if(num  <  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(num  <  0)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0)  {	  if(den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  num  =  MathUtils.gcd(num);  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  if(den  <  0  ||  num  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  num  >  ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  num  >  ZERO)  {	  if(num    <    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(den  <  0  ||  der  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  der  >  ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  der  >  ZERO)  {	  if(num    <    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  denominator);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  Integer  den  =  MathUtils.gcd(num,  denominator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  denominator);	      Integer    den    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  =  0  ||  den  >  Integer.MAX_VALUE)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  >  Integer.MAX_VALUE)  {	  if(den    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(den  >  0  ||  den  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  >  0  ||  den  <  0)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  0  ||  den  <  0)  {	  if(den    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  deserator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.gcd(num,  deserator);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  deserator);	      int    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(num);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  int  den  =  MathUtils.nextDouble(num);  [BUGGY]    if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(num);	      int    den    =    MathUtils.nextInt(num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  =  0  ||  den  >  ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  >  ZERO)  {	  if(num    <    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  if(den  <  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  2)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  2)  {	  if(den    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(   "zero  denominator  in  fraction  {0}/{1}   ",  num,  den);  }    [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {  [BUGGY]    if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(   "overflow  in  fraction  {0}/{1},  cannot  negate   ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {	  if(den    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
