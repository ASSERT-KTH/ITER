bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  numerator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  numerator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  numerator);	  Integer    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  des);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  des);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  des);	  Integer    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  1)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  1)  {	  if(den    <    0    ||    der    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  Integer.MIN_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  Integer.MIN_VALUE)  {	  if(den    <    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  Integer.MAX_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  Integer.MAX_VALUE)  {	  if(den    <    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  num);	  Integer    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  0);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  0);	  Integer    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  num  +  1);	  Integer    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  der  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  der  =  MathUtils.gcd(num,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	der  =  MathUtils.gcd(num,  den);	  der    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  der  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  der  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	der  =  MathUtils.gcd(den,  num  +  den);	  der    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  der  =  MathUtils.gcd(den,  num  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  der  =  MathUtils.gcd(den,  num  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	der  =  MathUtils.gcd(den,  num  +  1,  den);	  der    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
12	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(den,  0);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  0);	  int    den    =    MathUtils.gcd(den);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  ZERO);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  ZERO);	  Integer    den    =    MathUtils.gcd(num,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
14	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  num  +  den);	  den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  num  +  1,  den);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  num  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  num  +  1,  den);	  den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  0,  num);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  0,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  0,  num);	  Integer    den    =    MathUtils.gcd(num,    0,    den);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
17	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  0,  den  +  1);	  Integer    den    =    MathUtils.gcd(num,    0,    den);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
18	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  0,  den);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  0,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  0,  den);	  Integer    den    =    MathUtils.gcd(num,    0,    den);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
19	[BUG]  [BUGGY]  if(num  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  =  1)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  =  1)  {	  if(den    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
20	[BUG]  [BUGGY]  if(den  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  ==  1)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  ==  1)  {	  if(den    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  1,  den);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  *  1,  den);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  numerator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  numerator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1,  numerator);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den  +  1,  num);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den  +  1,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den  +  1,  num);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  des);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  des);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1,  des);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  *  1);	  int    n    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  num  +  1);	  int    n    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(num,  den);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Den  =  MathUtils.gcd(num,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(num,  den);	  Den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
28	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(den,  num  +  den);	  Den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(den,  num  +  1,  den);	  Den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  1);	  Integer    den    =    MathUtils.gcd(num,    0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  num  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  num  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  num  -  1);	  den    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
32	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den  -  1,  num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den  -  1,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den  -  1,  num);	  den    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
33	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(num  +  1,  den);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextDouble(num  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(num  +  1,  den);	  int    den    =    MathUtils.nextDouble(num);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
34	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(den);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextDouble(den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(den);	  int    den    =    MathUtils.nextDouble(num);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
35	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(num,  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextDouble(num,  denominator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(num,  denominator);	  int    den    =    MathUtils.nextDouble(num);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
36	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(num,  den);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(num,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(num,  den);	  int    den    =    MathUtils.nextInt(den);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  num  +  den);	  int    n    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  der);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  der);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  der);	  int    n    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  num  -  1);  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  num  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  num  -  1);	  int    n    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
40	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  den  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  den  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  *  den  -  1);	  int    n    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
41	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(num  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(num  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(num  +  1);	  int    den    =    MathUtils.nextInt(den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den  /  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  /  1);	  int    den    =    MathUtils.nextInt(den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  +  1,  num);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den  +  1,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  +  1,  num);	  int    den    =    MathUtils.nextInt(den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  100)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  100)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  100)  {	  if(den    <    0    ||    den    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
45	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  1000)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  1000)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  1000)  {	  if(den    <    0    ||    den    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
46	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  >  100)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  den  >  100)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  >  100)  {	  if(den    <    0    ||    den    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  num  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  num  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  num  +  1);	  den    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  den  =  MathUtils.gcd(num,  den  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(num,  den  +  2);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(num,  den  +  2);	  den    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  den  =  MathUtils.gcd(num,  den  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(num,  den  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(num,  den  +  1,  den);	  den    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
50	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  des  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  des  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  des  +  1);	  int    den    =    MathUtils.gcd(num,    des);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  des);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(den,  des);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  des);	  int    den    =    MathUtils.gcd(num,    des);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  des  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  des  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  des  -  1);	  int    den    =    MathUtils.gcd(num,    des);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  if(num  <  MINUS_ONE  ||  den  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  MINUS_ONE  ||  den  >  MINUS_ONE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  MINUS_ONE  ||  den  >  MINUS_ONE)  {	  if(num    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  ZERO)  {	  if(num    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  den  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  den  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  den  +  1);	  int    den    =    MathUtils.gcd(num,    n);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(den);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(den);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(den);	  int    num    =    MathUtils.gcd(num);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
57	[BUG]  [BUGGY]  int  num  =  MathUtils.nextInt(den);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.nextInt(den);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.nextInt(den);	  int    num    =    MathUtils.gcd(num);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
58	[BUG]  [BUGGY]  if(den  <  0  ||  num  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  num  ==  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  num  ==  0)  {	  if(num    <    0    ||    den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
59	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  0)  {	  if(num    <    0    ||    den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
60	[BUG]  [BUGGY]  if(den  <  0  ||  den  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  ==  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  ==  0)  {	  if(num    <    0    ||    den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
61	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  -num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(den,  -num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  -num);	  int    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
62	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  -1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  -1);	  int    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  -den  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  -den  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  -den  +  1);	  int    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
64	[BUG]  [BUGGY]  if(num  <  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  2)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  2)  {	  if(den    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
65	[BUG]  [BUGGY]  if(num  <  =  0  ||  den  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  =  0  ||  den  >  ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  =  0  ||  den  >  ZERO)  {	  if(den    <    =    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
66	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  den  >  MINUS_ONE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  >  MINUS_ONE)  {	  if(den    <    =    0    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
67	[BUG]  [BUGGY]  if(num  <  =  0  ||  den  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  =  0  ||  den  >  Integer.MAX_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  =  0  ||  den  >  Integer.MAX_VALUE)  {	  if(den    <    =    0    ||    den    >    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
68	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  >  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  den  >  Integer.MIN_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  >  Integer.MIN_VALUE)  {	  if(den    <    =    0    ||    den    >    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
69	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  -num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  -num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  -num);	  Integer    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  -1);	  Integer    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
71	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -den  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  -den  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  -den  +  1);	  Integer    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
72	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  1);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num,  den  +  1);	  int    num    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
73	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(den,  num);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(den,  num);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(den,  num);	  int    num    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  1,  den);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num,  den  +  1,  den);	  int    num    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num,  des);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(num,  des);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num,  des);	  int    num    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  if(num  >  0  ||  den  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  >  0  ||  den  <  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  >  0  ||  den  <  0)  {	  if(den    >    0    ||    den    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
77	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  0)  {	  if(den    >    0    ||    den    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
78	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  des);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  des);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  des);	  int    n    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  numerator);  [CE]  unclosed  string  literal  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  numerator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  numerator);	  int    n    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  unclosed  string  literal	17	None	replace
80	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  1);	  int    den    =    MathUtils.gcd(num,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
81	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  0,  numerator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  0,  numerator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  0,  numerator);	  int    den    =    MathUtils.gcd(num,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
82	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
83	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
84	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  TWO_ZERO)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  TWO_ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  TWO_ZERO)  {	  if(den    <    0    ||    den    >    TWO_ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(num  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(num  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(num  -  1);	  int    den    =    MathUtils.nextInt(den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  ZERO);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  ZERO);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  ZERO);	  int    den    =    MathUtils.gcd(num,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(num,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(num,  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(num,  1);	  int    den    =    MathUtils.nextInt(den,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den,  2);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den,  2);	  int    den    =    MathUtils.nextInt(den,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den,  0);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den,  0);	  int    den    =    MathUtils.nextInt(den,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  if(num  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  ==  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  ==  0)  {	  if(num    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
91	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  deserator  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  deserator  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  deserator  -  1);	  int    den    =    MathUtils.gcd(num,    deserator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
92	[BUG]  [BUGGY]  if(den  <  =  0  ||  num  >  ZERO)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  num  >  ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  num  >  ZERO)  {	  if(den    <    0    ||    num    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
93	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den  -  1);	  den    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
94	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den  +  1,  num);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den  +  1,  num);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den  +  1,  num);	  den    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
95	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Den  =  MathUtils.gcd(den,  num  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(den,  num  +  1);	  Den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  if(den  >  0  ||  den  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  >  0  ||  den  ==  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  0  ||  den  ==  0)  {	  if(den    >    0    ||    den    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
97	[BUG]  [BUGGY]  if(den  >  0  ||  den  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  >  0  ||  den  <  =  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  0  ||  den  <  =  0)  {	  if(den    >    0    ||    den    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
98	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den  -  1  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  -  1  +  1);	  int    den    =    MathUtils.nextInt(den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  der  =  MathUtils.gcd(den,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  der  =  MathUtils.gcd(den,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	der  =  MathUtils.gcd(den,  den);	  der    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  -  2);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  -  2);	  int    n    =    MathUtils.gcd(num,    den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
101	[BUG]  [BUGGY]  if(den  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  >=  1)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >=  1)  {	  if(den    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
102	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  ZERO  ||  den  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  ZERO  ||  den  >  MINUS_ONE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  ZERO  ||  den  >  MINUS_ONE)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
103	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  TWO)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  TWO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  TWO)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  2);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  2);	  int    n    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  0,  den  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  0,  den  -  1);	  Integer    den    =    MathUtils.gcd(num,    0,    den);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  if(num  <  0  ||  den  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(num  <  0  ||  den  >  Integer.MAX_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(num  <  0  ||  den  >  Integer.MAX_VALUE)  {	  if(den    <    =    0    ||    den    >    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
107	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  den  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  den  +  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1,  den  +  1);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  if(den  <  0  ||  num  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  num  >  MINUS_ONE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  num  >  MINUS_ONE)  {	  if(num    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  0);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  0);	  den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
110	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(numerator,  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(numerator,  denominator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(numerator,  denominator);	  int    den    =    MathUtils.gcd(den,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
111	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(den  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den  -  1);	  int    den    =    MathUtils.gcd(den);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
112	[BUG]  [BUGGY]  Integer  num  =  MathUtils.gcd(num);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  num  =  MathUtils.gcd(num);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  num  =  MathUtils.gcd(num);	  int    num    =    MathUtils.gcd(num);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  1,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  num  +  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  num  +  1,  den);	  int    n    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
114	[BUG]  [BUGGY]  if(den  <  =  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  2)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  2)  {	  if(den    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
115	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(num  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextDouble(num  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(num  -  1);	  int    den    =    MathUtils.nextDouble(num);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
116	[BUG]  [BUGGY]  if(den  >  0  ||  den  <  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  >  0  ||  den  <  1)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  >  0  ||  den  <  1)  {	  if(den    >    0    ||    den    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
117	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_DECEMBER)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
118	[BUG]  [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  den  >  MINUS_ONE  ||  den  >  MINUS_ZERO)  {	  if(den    <    0    ||    den    >    MINUS_ONE    ||    den    >    ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
119	[BUG]  [BUGGY]  Den  =  MathUtils.gcd(den,  den);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Den  =  MathUtils.gcd(den,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Den  =  MathUtils.gcd(den,  den);	  Den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
120	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  den  ==  Integer.MAX_VALUE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  ==  Integer.MAX_VALUE)  {	  if(den    <    =    0    ||    den    >    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
121	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(num,  deserator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(num,  deserator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(num,  deserator);	  Integer    den    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  if(den  <  =  0  ||  den  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  =  0  ||  den  ==  0)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  =  0  ||  den  ==  0)  {	  if(num    <    0    ||    den    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
123	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(den,  num  +  den);	  int    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
124	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  der);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  der);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  der);	  int    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
125	[BUG]  [BUGGY]  int  den  =  MathUtils.nextInt(den  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextInt(den  -  2);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextInt(den  -  2);	  int    den    =    MathUtils.nextInt(den    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
126	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  den  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  den  -  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  den  -  1);	  int    den    =    MathUtils.gcd(num,    n);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
127	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num  +  den);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  num  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  num  +  den);	  Integer    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  Integer  den  =  MathUtils.gcd(den,  -den);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  Integer  den  =  MathUtils.gcd(den,  -den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	Integer  den  =  MathUtils.gcd(den,  -den);	  Integer    den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  if(den  <  0  ||  der  >  MINUS_ONE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  0  ||  der  >  MINUS_ONE)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  0  ||  der  >  MINUS_ONE)  {	  if(num    <    0    ||    den    >    MINUS_ONE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
130	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(den,  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(den,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(den,  den);	  int    n    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
131	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  des  -  den);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  des  -  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  des  -  den);	  int    den    =    MathUtils.gcd(num,    des);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
132	[BUG]  [BUGGY]  den  =  MathUtils.gcd(den,  -den);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(den,  -den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(den,  -den);	  den    =    MathUtils.gcd(den,    num);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
133	[BUG]  [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  den);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  num  =  MathUtils.gcd(num,  den  +  den);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  num  =  MathUtils.gcd(num,  den  +  den);	  int    num    =    MathUtils.gcd(num,    den);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
134	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  denominator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  denominator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  denominator);	  int    n    =    MathUtils.gcd(num,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
135	[BUG]  [BUGGY]  den  =  MathUtils.gcd(num,  den  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  den  =  MathUtils.gcd(num,  den  /  1);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	den  =  MathUtils.gcd(num,  den  /  1);	  den    =    MathUtils.gcd(num,    den    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
136	[BUG]  [BUGGY]  float  num  =  MathUtils.gcd(num);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  float  num  =  MathUtils.gcd(num);  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	float  num  =  MathUtils.gcd(num);	  int    num    =    MathUtils.gcd(num);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
137	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  den);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  *  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  *  den);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  denominator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  n  =  MathUtils.gcd(num,  den  +  1,  denominator);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  n  =  MathUtils.gcd(num,  den  +  1,  denominator);	  int    n    =    MathUtils.gcd(num,    den    +    1,    den);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(numerator,  den);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(numerator,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(numerator,  den);	  int    den    =    MathUtils.gcd(den,    numerator);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
140	[BUG]  [BUGGY]  if(den  <  100  ||  den  >  100)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  if(den  <  100  ||  den  >  100)  {  [BUGGY]      if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	if(den  <  100  ||  den  >  100)  {	  if(den    <    0    ||    den    >    100)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
141	[BUG]  [BUGGY]  int  den  =  MathUtils.gcd(num,  -den  +  den);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.gcd(num,  -den  +  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.gcd(num,  -den  +  den);	  int    den    =    MathUtils.gcd(num,    -den);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
142	[BUG]  [BUGGY]  int  den  =  MathUtils.nextDouble(num  -  1,  den);  [CE]  unclosed  string  literal  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction(int  num,  int  den)  {  super();  if  (den  ==  0)  {  throw  MathRuntimeException.createArithmeticException(     "zero  denominator  in  fraction  {0}/{1}     ",  num,  den);  }      [BUGGY]  int  den  =  MathUtils.nextDouble(num  -  1,  den);  [BUGGY]      if  (den  <  0)  {  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  MathRuntimeException.createArithmeticException(     "overflow  in  fraction  {0}/{1},  cannot  negate     ",  num,  den);  }  num  =  -num;  den  =  -den;  }  int  d  =  MathUtils.gcd(num,  den);  if  (d  >  1)  {  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  MINUS_ONE  ONE  TWO  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math91/src/java/org/apache/commons/math/fraction/Fraction.java	0.2182178902359924	214	214	1	replace	int  den  =  MathUtils.nextDouble(num  -  1,  den);	  int    den    =    MathUtils.nextDouble(num);    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
