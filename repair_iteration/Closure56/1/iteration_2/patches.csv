bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
2	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
3	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	344	None	add
4	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	344	None	add
5	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	344	None	add
6	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	344	None	add
7	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	344	None	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
9	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
10	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	344	None	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
12	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	344	3	add
13	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	344	None	add
14	[BUG]  [BUGGY]  pos  =  Js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  Js  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  Js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  Js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    pos    =    Js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  Js	744	None	replace
15	[BUG]  [BUGGY]  Pos  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  Pos  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Pos  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Pos  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    pos    =    Js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  Pos	744	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(pos  >=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	500	3	replace
17	[BUG]  [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos  >=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	500	3	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(pos!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	500	3	replace
19	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	500	3	replace
20	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	670	None	replace
21	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	670	None	replace
22	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	670	None	replace
23	[BUG]  [BUGGY]  if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	670	None	replace
24	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	330	None	replace
25	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	330	None	replace
26	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	330	None	replace
27	[BUG]  [BUGGY]  js.indexOf('N',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
28	[BUG]  [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
29	[BUG]  [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
30	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('N',  pos  +  1))  ==  -1)  {  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('N',  pos  +  1))  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('N',  pos  +  1))  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
31	[BUG]  [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
32	[BUG]  [BUGGY]  js.indexOf('N',  pos  +  2)  ==  -1)  {  [CE]  not  a  statement  [FE]                                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos  +  2)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos  +  2)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
33	[BUG]  [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('r',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('r',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('N',  pos  +  1)  ==  -1  ||  js.indexOf('r',  pos  +  1)  ==  -1)  {	  js.indexOf('N',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	437	None	replace
34	[BUG]  [BUGGY]  js.throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	752	None	replace
35	[BUG]  [BUGGY]  JSErrorHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  JSErrorHandler  [FE]            IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  JSErrorHandler.throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	JSErrorHandler.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  JSErrorHandler	752	None	replace
36	[BUG]  [BUGGY]  GeneratedOnDisk.this.throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  GeneratedOnDisk.this.throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	GeneratedOnDisk.this.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	752	None	replace
37	[BUG]  [BUGGY]  sparkExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  sparkExceptionHandler  [FE]                IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  sparkExceptionHandler.throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	sparkExceptionHandler.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  sparkExceptionHandler	752	None	replace
38	[BUG]  [BUGGY]  generateExceptionHandler().throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  generateExceptionHandler().throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	generateExceptionHandler().throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	752	None	replace
39	[BUG]  [BUGGY]  dépannage.throwAsIOException( " ");  [CE]  cannot  find  symbol  d  [FE]                    IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  dépannage.throwAsIOException( " ");  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	dépannage.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  d	752	None	replace
40	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js  ==  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	749	4	replace
41	[BUG]  [BUGGY]  return(js  ==  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js  ==  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	749	4	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js  ==  null  ||  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	749	3	replace
43	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js  ==  null  ||  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	749	3	replace
44	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js!=  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	749	4	replace
45	[BUG]  [BUGGY]  return(js!=  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js!=  null  &&  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	749	4	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js  ==  null  ||  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	749	3	replace
47	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js  ==  null  ||  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	749	3	replace
48	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  3);  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  3);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  3);	  return(js.indexOf('n',    pos)    ==    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos)+    2);    	non-compiled	[CE]  incompatible  types	161	None	replace
49	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)/  2);  [CE]  incompatible  types  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)/  2);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)/  2);	  return(js.indexOf('n',    pos)    ==    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos)+    2);    	non-compiled	[CE]  incompatible  types	161	None	replace
50	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  4);  [CE]  incompatible  types  [FE]                                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  4);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  4);	  return(js.indexOf('n',    pos)    ==    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos)+    2);    	non-compiled	[CE]  incompatible  types	161	None	replace
51	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  incompatible  types  [FE]                                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    ==    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos)+    2);    	non-compiled	[CE]  incompatible  types	161	None	replace
52	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  ')'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    ==    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos)+    2);    	non-compiled	[CE]  ')'  expected	161	None	replace
53	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	28	None	replace
54	[BUG]  [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	4	replace
56	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	4	replace
57	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	28	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	75	3	add
59	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	75	3	add
60	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
61	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	75	None	add
62	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
63	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
64	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
65	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	75	None	add
66	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  0));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  0));  }	  	non-compiled	[CE]  unreachable  statement	75	None	add
67	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  0));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  0));  }	  	non-compiled	[CE]  unreachable  statement	75	None	add
68	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  1));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  1));  }	  	non-compiled	[CE]  unreachable  statement	75	None	add
69	[BUG]  [BUGGY]  if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('No',    pos)    <    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	337	None	replace
70	[BUG]  [BUGGY]  if(!Character.isDigit(pos))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!Character.isDigit(pos))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!Character.isDigit(pos))  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('No',    pos)    <    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	337	None	replace
71	[BUG]  [BUGGY]  String  pos  =  js.indexOf('n',  pos);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  pos  =  js.indexOf('n',  pos);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  pos  =  js.indexOf('n',  pos);	          pos    =    js.indexOf('n',    pos);    String    pos    =    js.indexOf('n',    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	611	None	replace
72	[BUG]  [BUGGY]  int  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos);	          pos    =    js.indexOf('n',    pos);    String    pos    =    js.indexOf('n',    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	611	None	replace
73	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos)+  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos);    String    pos    =    js.indexOf('n',    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	611	None	replace
74	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos  +  1);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos);  String  pos  =  js.indexOf('n',  pos  +  1);	          pos    =    js.indexOf('n',    pos);    String    pos    =    js.indexOf('n',    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	611	None	replace
75	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  ||    js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	484	None	replace
76	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  ||    js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	484	None	replace
77	[BUG]  [BUGGY]  ||  js.indexOf('N',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('N',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('N',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  ||    js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	484	None	replace
78	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  ||    js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	484	None	replace
79	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos  +  1)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos  +  1)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos  +  1)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  ||    js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	484	None	replace
80	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
81	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
82	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
83	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	742	3	replace
85	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  ComparisonFailure  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	742	3	replace
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
87	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	742	4	replace
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	742	3	replace
89	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  ComparisonFailure  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	742	3	replace
90	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	742	None	replace
91	[BUG]  [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
92	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
93	[BUG]  [BUGGY]  if(ii  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  cannot  find  symbol  ii  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(ii  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(ii  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  if(pos    <    0    ||    js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  ii	31	None	replace
94	[BUG]  [BUGGY]  if(pos  <  0  ||  js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  <  0  ||  js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  <  0  ||  js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(pos    <    0    ||    js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
95	[BUG]  [BUGGY]  if(position  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  cannot  find  symbol  position  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(position  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(position  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  if(pos    <    0    ||    js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  position	31	None	replace
96	[BUG]  [BUGGY]  if(p  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  cannot  find  symbol  p  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(p  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(p  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  if(pos    <    0    ||    js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  p	31	None	replace
97	[BUG]  [BUGGY]  if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  if(pos    <    0    ||    js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
98	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	493	None	replace
99	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	493	None	replace
100	[BUG]  [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	493	None	replace
101	[BUG]  [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  missing  return  statement	676	None	replace
102	[BUG]  [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	676	None	replace
103	[BUG]  [BUGGY]  if(!isExternFile)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	676	None	replace
104	[BUG]  [BUGGY]  if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  missing  return  statement	676	None	replace
105	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos  +  1)  <  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos  +  1)  <  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos  +  1)  <  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(js.indexOf('n',    pos    +    1)    <    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	768	None	replace
106	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	328	None	replace
107	[BUG]  [BUGGY]  if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  cannot  find  symbol  Js  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Js	639	None	replace
108	[BUG]  [BUGGY]  if(Js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  cannot  find  symbol  Js  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(Js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(Js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Js	639	None	replace
109	[BUG]  [BUGGY]  if(Js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  cannot  find  symbol  Js  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(Js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(Js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Js	639	None	replace
110	[BUG]  [BUGGY]  if(js.indexOf('n',  0)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  0)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  0)!=  -1)  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	390	None	replace
111	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	390	None	replace
112	[BUG]  [BUGGY]  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	390	None	replace
113	[BUG]  [BUGGY]  if(js.indexOf('n',  0)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  0)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  0)  ==  -1)  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	390	None	replace
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('t',    pos));    }    	compilable	  [FE]  ComparisonFailure  	113	3	replace
115	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('t',    pos));    }    	compilable	  [FE]  ComparisonFailure  	113	3	replace
116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.indexOf('t',  pos));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	100	4	replace
117	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('t',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('t',  pos));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	100	4	replace
118	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
119	[BUG]  [BUGGY]  reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  ';'  expected	100	None	replace
120	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  missing  return  statement	100	None	replace
121	[BUG]  [BUGGY]  while(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
122	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
123	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  missing  return  statement	100	None	replace
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
125	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
127	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
128	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }	  	non-compiled	[CE]  unreachable  statement	335	None	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
130	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
131	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	335	None	add
132	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	335	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
134	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	335	3	add
135	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }	  	non-compiled	[CE]  unreachable  statement	335	None	add
136	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('[',  pos));  }	  	non-compiled	[CE]  unreachable  statement	335	None	add
137	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('[',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('[',    pos)    <    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	335	None	add
138	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('#',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  missing  return  statement	425	None	replace
139	[BUG]  [BUGGY]  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('#',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  not  a  statement	425	None	replace
140	[BUG]  [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  [CE]  ')'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(pos,  js.indexOf('r',  pos));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ')'  expected	193	None	replace
141	[BUG]  [BUGGY]  rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
142	[BUG]  [BUGGY]  tries  |=  js.indexOf('n',  pos)  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  tries  |=  js.indexOf('n',  pos)  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	tries  |=  js.indexOf('n',  pos)  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
143	[BUG]  [BUGGY]  rim(js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
144	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(js.substring(pos,  js.indexOf('r',  pos)));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  aughtExceptionHandler.handleMissingName(js.substring(pos,  js.indexOf('r',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	aughtExceptionHandler.handleMissingName(js.substring(pos,  js.indexOf('r',  pos)));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	193	None	replace
145	[BUG]  [BUGGY]  rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf('n',  pos)+  1))  {  return  new  String(js.substring(pos,  js.indexOf('r',  pos));	  if(js.indexOf('n',    pos)    ==    -1)    {    return    new    String(js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
146	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
147	[BUG]  [BUGGY]  if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
148	[BUG]  [BUGGY]  if(js.indexOf(';',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
149	[BUG]  [BUGGY]  if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
150	[BUG]  [BUGGY]  if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
151	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	480	None	replace
152	[BUG]  [BUGGY]  int  pos  =  js.indexOf('n',  pos  +  1);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  pos  =  js.indexOf('n',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  pos  =  js.indexOf('n',  pos  +  1);	          if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    int    pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	637	None	replace
153	[BUG]  [BUGGY]  Integer  pos  =  js.indexOf('n',  pos  +  1);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Integer  pos  =  js.indexOf('n',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Integer  pos  =  js.indexOf('n',  pos  +  1);	          if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    int    pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	637	None	replace
154	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
155	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
156	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	300	None	add
157	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
158	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
159	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
160	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
161	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
162	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
163	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
164	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
165	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
166	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
167	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
168	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  IllegalArgumentException  [FE]                  IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('#',  pos)  ==  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('#',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	300	4	add
169	[BUG]  [BUGGY]  return(pos  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    this    :    new    String(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	604	None	replace
170	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    this    :    new    String(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	604	None	replace
171	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    this    :    new    String(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	604	None	replace
172	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('r',  pos));  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    this    :    new    String(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	604	None	replace
173	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)!=  -1)?  this  :  new  String(js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    this    :    new    String(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	604	None	replace
174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	555	3	add
175	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	555	3	add
176	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	555	None	add
177	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(pos  <  0  ||  js.indexOf('n',  pos)  >=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	555	None	add
178	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	555	None	add
179	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	555	None	add
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	555	3	add
181	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	555	3	add
182	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	555	None	add
183	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	555	None	add
184	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	555	None	add
185	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	555	None	add
186	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf(	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
187	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  ')'  expected	9	None	replace
188	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  ')'  expected	9	None	replace
189	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	9	None	replace
190	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null;  if(js.indexOf('n',  pos)  ==  -1)return  null;  js.substring(pos,  js.indexOf('  [CE]  illegal  line  end  in  character  literal  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null;  if(js.indexOf('n',  pos)  ==  -1)return  null;  js.substring(pos,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null;  if(js.indexOf('n',  pos)  ==  -1)return  null;  js.substring(pos,  js.indexOf('	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  illegal  line  end  in  character  literal	9	None	replace
191	[BUG]  [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  missing  return  statement	712	None	replace
192	[BUG]  [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	712	None	replace
193	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	712	4	replace
194	[BUG]  [BUGGY]  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos  +  1,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	712	4	replace
195	[BUG]  [BUGGY]  if(!isExternFile)  {  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return  js.substring(pos  +  1,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos    +    1,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  missing  return  statement	712	None	replace
196	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	112	4	replace
197	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	112	4	replace
198	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  unclosed  string  literal	421	None	replace
199	[BUG]  [BUGGY]  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  not  a  statement	421	None	replace
200	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  missing  return  statement	421	None	replace
201	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "! ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "! ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "! ");  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(       "       ");    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  missing  return  statement	421	None	replace
202	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	617	None	add
203	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	617	None	add
204	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	617	None	add
205	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)!=  -1)  {  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	617	None	add
206	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  	non-compiled	[CE]  unreachable  statement	617	None	add
207	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  >=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  >=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)  >=  -1)  {  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	617	None	add
208	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)!=  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	617	None	add
209	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	617	None	add
210	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
211	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	369	None	replace
212	[BUG]  [BUGGY]  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	}  else  if(js.indexOf('n',  pos)  ==  -1)  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    	non-compiled	[CE]  missing  return  statement	739	None	replace
213	[BUG]  [BUGGY]  }  else  if(js.indexOf('n',  pos)  <  -1)  {  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  }  else  if(js.indexOf('n',  pos)  <  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	}  else  if(js.indexOf('n',  pos)  <  -1)  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    	non-compiled	[CE]  missing  return  statement	739	None	replace
214	[BUG]  [BUGGY]  }  else  if(js.indexOf('n',  pos)  >=  -1)  {  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  }  else  if(js.indexOf('n',  pos)  >=  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	}  else  if(js.indexOf('n',  pos)  >=  -1)  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    <    -1)    {    	non-compiled	[CE]  missing  return  statement	739	None	replace
215	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
216	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
217	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
218	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
219	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	420	None	add
220	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
221	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	420	4	add
222	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	420	None	add
223	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	118	None	replace
224	[BUG]  [BUGGY]  (js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  (js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  not  a  statement	118	None	replace
225	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	118	4	replace
226	[BUG]  [BUGGY]  return  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	118	4	replace
227	[BUG]  [BUGGY]  js  =  js.substring(pos,  js.indexOf('n',  pos));  [CE]  missing  return  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js  =  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js  =  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	118	None	replace
228	[BUG]  [BUGGY]  if(js!=  null)return  null;  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js!=  null)return  null;  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js!=  null)return  null;  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	118	None	replace
229	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [CE]  incompatible  types  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	118	None	replace
230	[BUG]  [BUGGY]  if(Js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  cannot  find  symbol  Js  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(Js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(Js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Js	594	None	replace
231	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    StringBuffer    js    =    new    StringBuffer(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	169	None	replace
232	[BUG]  [BUGGY]  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    StringBuffer    js    =    new    StringBuffer(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	169	None	replace
233	[BUG]  [BUGGY]  js.substring(0,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(0,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(0,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    StringBuffer    js    =    new    StringBuffer(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	169	None	replace
234	[BUG]  [BUGGY]  js.append('n');  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append('n');  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append('n');  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    StringBuffer    js    =    new    StringBuffer(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	169	None	replace
235	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('  [CE]  illegal  line  end  in  character  literal  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  StringBuffer  js  =  new  StringBuffer(js.substring(pos,  js.indexOf('	          js.substring(pos,    js.indexOf('n',    pos));    StringBuffer    js    =    new    StringBuffer(js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  line  end  in  character  literal	169	None	replace
236	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  2);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  2);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	3	replace
237	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  2);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  2);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  2);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	3	replace
238	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  -  1)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos  -  1)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
239	[BUG]  [BUGGY]  return(js.charAt(pos  -  1)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  -  1)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos  -  1)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
240	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
241	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
242	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
243	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
244	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(0,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(0,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
245	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(0,  js.indexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(0,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'n')?  null  :  js.substring(0,  js.indexOf('n',  pos)+  1);	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	4	replace
246	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
247	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
248	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	824	3	replace
250	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	824	3	replace
251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	824	3	replace
252	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	824	3	replace
253	[BUG]  [BUGGY]  place(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  place(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	place(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  not  a  statement	824	None	replace
254	[BUG]  [BUGGY]  if(!js.indexOf('n',  pos)>  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  type  int  for  unary  operator  [FE]        IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.indexOf('n',  pos)>  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.indexOf('n',  pos)>  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  type  int  for  unary  operator  	213	None	replace
255	[BUG]  [BUGGY]  reason(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  reason(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	reason(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	213	None	replace
256	[BUG]  [BUGGY]  ||  js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||  js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||  js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
257	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]              IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	213	None	replace
258	[BUG]  [BUGGY]  while(js.indexOf('n',  pos)!=  -1)  {  [CE]  'else'  without  'if'  [FE]                IllegalArgumentException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.indexOf('n',  pos)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.indexOf('n',  pos)!=  -1)  {	  if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	213	None	replace
259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
260	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
262	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
264	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	288	3	add
265	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
266	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
267	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
268	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
269	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
270	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	288	None	add
271	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	288	None	add
272	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	182	4	replace
273	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	182	4	replace
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	182	3	replace
275	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	182	3	replace
276	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(0,  js.indexOf('r',  pos));  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	non-compiled	[CE]  ')'  expected	182	None	replace
277	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('[',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('[',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	182	3	replace
278	[BUG]  [BUGGY]  return(js.indexOf('[',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('[',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('[',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	182	3	replace
279	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('r',  pos));  }  [CE]  missing  return  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(0,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	182	None	replace
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('t',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	212	3	replace
281	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('t',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	212	3	replace
282	[BUG]  [BUGGY]  place(pos,  js.indexOf('n',  pos)+  1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  place(pos,  js.indexOf('n',  pos)+  1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	place(pos,  js.indexOf('n',  pos)+  1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('t',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
283	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('t',    pos)+    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	212	4	replace
284	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('t',    pos)+    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	212	4	replace
285	[BUG]  [BUGGY]  js.indexOf('T',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('T',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('T',  pos  +  1)  ==  -1)  {	  js.indexOf('t',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	764	None	replace
286	[BUG]  [BUGGY]  js.indexOf('t',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('t',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('t',  pos)  ==  -1)  {	  js.indexOf('t',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	764	None	replace
287	[BUG]  [BUGGY]  js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {	  js.indexOf('t',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	764	None	replace
288	[BUG]  [BUGGY]  js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('t',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {	  js.indexOf('t',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	764	None	replace
289	[BUG]  [BUGGY]  js.indexOf(':',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf(':',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf(':',  pos  +  1)  ==  -1)  {	  js.indexOf('t',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	764	None	replace
290	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	347	None	replace
291	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	347	None	replace
292	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	347	None	replace
293	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	347	None	replace
294	[BUG]  [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	347	None	replace
295	[BUG]  [BUGGY]  String  js  =  js.substring(pos,  js.indexOf('n',  pos));  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  js  =  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  js  =  js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    String    js    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	170	None	replace
296	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf(  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf(	          js.substring(pos,    js.indexOf('n',    pos));    String    js    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
297	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  String  js  =  js.substring(pos,  js.indexOf	          js.substring(pos,    js.indexOf('n',    pos));    String    js    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	170	None	replace
298	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('n',  pos))  ==  -1)  {  return  null;  }	  js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	591	None	replace
299	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	591	None	replace
300	[BUG]  [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	591	None	replace
301	[BUG]  [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('r',  pos)  ==  -1)  {  return  null;  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('r',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('r',  pos)  ==  -1)  {  return  null;  }	  js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	591	None	replace
302	[BUG]  [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }	  js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	591	None	replace
303	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	287	None	replace
304	[BUG]  [BUGGY]  if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	287	None	replace
305	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	287	None	replace
306	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
307	[BUG]  [BUGGY]  if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
308	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
309	[BUG]  [BUGGY]  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  [CE]  missing  return  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  code  =  js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
310	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
311	[BUG]  [BUGGY]  if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  code  =  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!fileName.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos));  code  =  js.substring(pos,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
312	[BUG]  [BUGGY]  js.substring(0,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  [CE]  missing  return  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(0,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(0,  js.indexOf('n',  pos));  String  code  =  js.substring(pos,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    String    code    =    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	771	None	replace
313	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	405	None	add
314	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	405	None	add
315	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	405	None	add
316	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	405	None	add
317	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(pos!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	405	None	add
318	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  not  a  statement	405	None	add
319	[BUG]  [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(pos  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	405	None	add
320	[BUG]  [BUGGY]  pos  =  js.indexOf('/',  pos);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('/',  pos);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('/',  pos);	  pos    =    js.indexOf('/',    lineNumber);    	non-compiled	[CE]  missing  return  statement	573	None	replace
321	[BUG]  [BUGGY]  pos  =  js.indexOf('/',  lineNumber  +  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('/',  lineNumber  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('/',  lineNumber  +  1);	  pos    =    js.indexOf('/',    lineNumber);    	non-compiled	[CE]  missing  return  statement	573	None	replace
322	[BUG]  [BUGGY]  pos  =  js.lastIndexOf('/',  lineNumber);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.lastIndexOf('/',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.lastIndexOf('/',  lineNumber);	  pos    =    js.indexOf('/',    lineNumber);    	non-compiled	[CE]  missing  return  statement	573	None	replace
323	[BUG]  [BUGGY]  pos  =  js.indexOf('/',  0);  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('/',  0);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('/',  0);	  pos    =    js.indexOf('/',    lineNumber);    	non-compiled	[CE]  missing  return  statement	573	None	replace
324	[BUG]  [BUGGY]  pos  =  js.indexOf('/',  lineNumber++);  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('/',  lineNumber++);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('/',  lineNumber++);	  pos    =    js.indexOf('/',    lineNumber);    	non-compiled	[CE]  missing  return  statement	573	None	replace
325	[BUG]  [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasNext())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
326	[BUG]  [BUGGY]  reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	reason(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
327	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  missing  return  statement	52	None	replace
328	[BUG]  [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
329	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  missing  return  statement	52	None	replace
330	[BUG]  [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.substring(pos,  js.indexOf('n',  pos)+  1)))  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);	  if(js.indexOf('n',    pos)    ==    -1)    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
331	[BUG]  [BUGGY]  String  js  =  js.string(pos,  js.indexOf('n',  pos));  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  js  =  js.string(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  js  =  js.string(pos,  js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	320	None	replace
332	[BUG]  [BUGGY]  String  fileName  =  js.string(pos,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  fileName  =  js.string(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  fileName  =  js.string(pos,  js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	320	None	replace
333	[BUG]  [BUGGY]  string(pos,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  string(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	string(pos,  js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	320	None	replace
334	[BUG]  [BUGGY]  String  str  =  js.string(pos,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  str  =  js.string(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  str  =  js.string(pos,  js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	320	None	replace
335	[BUG]  [BUGGY]  String.valueOf(js,  pos.indexOf('n',  pos));  [CE]  int  cannot  be  dereferenced  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String.valueOf(js,  pos.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String.valueOf(js,  pos.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  int  cannot  be  dereferenced	320	None	replace
336	[BUG]  [BUGGY]  String.valueOf(js.indexOf('n',  pos));  [CE]  missing  return  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String.valueOf(js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String.valueOf(js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	320	None	replace
337	[BUG]  [BUGGY]  strings.string(pos,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  strings  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  strings.string(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	strings.string(pos,  js.indexOf('n',  pos));	  js.string(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol  strings	320	None	replace
338	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	683	None	add
339	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unreachable  statement	683	None	add
340	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	683	None	add
341	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	683	None	add
342	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	683	None	add
343	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	683	None	add
344	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',	  	non-compiled	[CE]  illegal  start  of  expression	683	None	add
345	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  not  a  statement	683	None	add
346	[BUG]  [BUGGY]  nisipables.add(js.substring(pos,  js.indexOf('n',  pos)));  [CE]  cannot  find  symbol  nisipables  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  nisipables.add(js.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	nisipables.add(js.substring(pos,  js.indexOf('n',  pos)));	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    >>    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  cannot  find  symbol  nisipables	279	None	replace
347	[BUG]  [BUGGY]  while(js.indexOf('n',  pos)  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.indexOf('n',  pos)  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.indexOf('n',  pos)  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    >>    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	279	None	replace
348	[BUG]  [BUGGY]  rim(js.indexOf(';',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf(';',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf(';',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
349	[BUG]  [BUGGY]  rim(js.indexOf('n',  pos  +  1)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf('n',  pos  +  1)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf('n',  pos  +  1)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
350	[BUG]  [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.substring(pos,  js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.substring(pos,  js.indexOf('n',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
351	[BUG]  [BUGGY]  rim(js.indexOf('n',  pos)-  1))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf('n',  pos)-  1))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf('n',  pos)-  1))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
352	[BUG]  [BUGGY]  rim(js.indexOf(',',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf(',',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf(',',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
353	[BUG]  [BUGGY]  rim(js.indexOf(':',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  rim(js.indexOf(':',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	rim(js.indexOf(':',  pos)))  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  rim(js.indexOf('n',    pos)))    {    return    new    String(js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	190	None	replace
354	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  &&  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  &&  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1  &&  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1    ||    js.indexOf('t',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
355	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  0  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  0  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  0  ||  js.indexOf('t',  pos)  ==  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1    ||    js.indexOf('t',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
356	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)!=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1    ||    js.indexOf('t',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
357	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('T',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('T',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('T',  pos)  ==  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1    ||    js.indexOf('t',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
358	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  >=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1  ||  js.indexOf('t',  pos)  >=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1    ||    js.indexOf('t',    pos)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	163	None	replace
359	[BUG]  [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(!isExternFile)    {    if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	536	None	replace
360	[BUG]  [BUGGY]  Pos  =  js.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  Pos  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Pos  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Pos  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  Pos	412	None	replace
361	[BUG]  [BUGGY]  po  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  po  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  po  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	po  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  po	412	None	replace
362	[BUG]  [BUGGY]  Po  =  js.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  Po  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Po  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Po  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  Po	412	None	replace
363	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos  +  1;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos  +  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)+  1;  Pos  =  js.indexOf('n',  pos  +  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  ')'  expected	412	None	replace
364	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  p.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  Pos  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  p.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)+  1;  Pos  =  p.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  Pos	412	None	replace
365	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  pos.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  Pos  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  Pos  =  pos.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)+  1;  Pos  =  pos.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Pos    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  Pos	412	None	replace
366	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
367	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  not  a  statement	34	None	add
368	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unreachable  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unreachable  statement	34	None	add
369	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  js  =(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  js  =(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    String  js  =(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	34	None	add
370	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    js  ==  null?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  not  a  statement	34	None	add
371	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  (js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  (js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    (js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  not  a  statement	34	None	add
372	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  js  =  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  js  =  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    String  js  =  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	34	None	add
373	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unreachable  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    String  fileName  =  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unreachable  statement	34	None	add
374	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
375	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
376	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
377	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
378	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ')  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ')  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ')  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
379	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
380	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
381	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
382	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
383	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unclosed  character  literal  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unclosed  character  literal	497	None	add
384	[BUG]  [BUGGY]  if(!js.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.endsWith( ".java "))  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.endsWith( ".java "))  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(!js.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	714	None	replace
385	[BUG]  [BUGGY]  if(!js.substring(pos,  js.indexOf('n',  pos)))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.substring(pos,  js.indexOf('n',  pos)))  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.substring(pos,  js.indexOf('n',  pos)))  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(!js.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	714	None	replace
386	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)!=  -1)  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(!js.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	714	None	replace
387	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(!js.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	714	None	replace
388	[BUG]  [BUGGY]  if(!js.startsWith( "java "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.startsWith( "java "))  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.startsWith( "java "))  {	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(!js.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	714	None	replace
389	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	348	3	add
390	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	348	3	add
391	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
392	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	348	None	add
393	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
394	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	348	None	add
395	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
396	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
397	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	348	3	add
398	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	348	3	add
399	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('r',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
400	[BUG]  [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  -1));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('N',  0)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  -1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        0)        ==        -1)        {        return        null;        }        if(js.indexOf('N',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  -1));  }	  	non-compiled	[CE]  unreachable  statement	348	None	add
401	[BUG]  [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
402	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(0)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(0)  ==  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  ||  js.charAt(0)  ==  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
403	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos)!=  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos)!=  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
404	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos)  ==  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos)  ==  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
405	[BUG]  [BUGGY]  if(js.charAt(pos)!=  'n'  ||  js.charAt(pos)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)!=  'n'  ||  js.charAt(pos)  ==  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)!=  'n'  ||  js.charAt(pos)  ==  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
406	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'r'  ||  js.charAt(pos)  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'r'  ||  js.charAt(pos)  ==  'n')  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'r'  ||  js.charAt(pos)  ==  'n')  {	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos)    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	695	None	replace
407	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	530	None	replace
408	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	530	None	replace
409	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf('n	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	530	None	replace
410	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js!=  null)?  null  :  js.substring(0,  js.indexOf('  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js!=  null)?  null  :  js.substring(0,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js!=  null)?  null  :  js.substring(0,  js.indexOf('	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	530	None	replace
411	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(0,  js.indexOf(	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	530	None	replace
412	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
413	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
414	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  int  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  int  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    int  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	220	None	add
415	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  Integer  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  Integer  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    Integer  pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	220	None	add
416	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('N',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('N',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
417	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('N',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('N',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('N',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
418	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  Po  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [CE]  cannot  find  symbol  Po  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  Po  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    Po  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  cannot  find  symbol  Po	220	None	add
419	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('r',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
420	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('n',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        lineNumber);        pos    =    js.indexOf('n',    lineNumber);    pos  =  js.indexOf('r',  lineNumber);  pos  =  js.indexOf('r',  lineNumber);	  	compilable	  [FE]  ComparisonFailure  	220	3	add
421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
422	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
423	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	333	None	add
424	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
425	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
426	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
427	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	333	3	add
428	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	333	None	add
429	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	333	None	add
430	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	333	None	add
431	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	333	None	add
432	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	333	None	add
433	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('N',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('N',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	333	None	add
434	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	655	None	replace
435	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	655	None	replace
436	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  illegal  start  of  expression	655	None	replace
437	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
438	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
439	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
440	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
441	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	630	None	add
442	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
443	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
444	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	630	None	add
445	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	630	None	add
446	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	630	None	add
447	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	630	None	add
448	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
449	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	630	3	add
450	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	630	None	add
451	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
452	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
453	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
454	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
455	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	331	None	add
456	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
457	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
458	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
459	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
460	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
461	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
462	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
463	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
464	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
465	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	331	3	add
466	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('r',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('r',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	331	None	add
467	[BUG]  [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos)  ==  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
468	[BUG]  [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('[',  pos  +  1)  ==  -1  ||  js.indexOf('n',  pos  +  1)  ==  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
469	[BUG]  [BUGGY]  js.indexOf('[',  pos)  ==  -1)  {  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('[',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('[',  pos)  ==  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
470	[BUG]  [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('[',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('[',  pos  +  1)  ==  -1  ||  js.charAt(pos  +  1)  ==  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
471	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('[',  pos  +  1))  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('[',  pos  +  1))  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('[',  pos  +  1))  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  ';'  expected	435	None	replace
472	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('[',  pos  +  1))  ==  -1)  {  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('[',  pos  +  1))  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('[',  pos  +  1))  ==  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
473	[BUG]  [BUGGY]  js.indexOf('[',  pos  +  1)!=  -1)  {  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.indexOf('[',  pos  +  1)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.indexOf('[',  pos  +  1)!=  -1)  {	  js.indexOf('[',    pos    +    1)    ==    -1)    {    	non-compiled	[CE]  not  a  statement	435	None	replace
474	[BUG]  [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(!isExternFile)    {    if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	546	None	replace
475	[BUG]  [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(!isExternFile)    {    if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	546	None	replace
476	[BUG]  [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(isExternFile)  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(isExternFile)  {  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(!isExternFile)    {    if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	546	None	replace
477	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
478	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
479	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  fileName  =  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
480	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
481	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
482	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  js  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  js  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  js  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	509	None	add
483	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  name  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  variable  fileName  is  already  defined  in  method  getLine(int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  name  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  name  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  getLine(int)	509	None	add
484	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  String  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    String  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  ';'  expected	509	None	add
485	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  File  file  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  File  file  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    File  file  =  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  incompatible  types	509	None	add
486	[BUG]  [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  Js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  Js  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          js.substring(pos,    js.indexOf('n',    pos));    String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  Js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                js.substring(pos,        js.indexOf('n',        pos));        String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    Js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  cannot  find  symbol  Js	509	None	add
487	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('No',    0)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	353	None	replace
488	[BUG]  [BUGGY]  if(pos  ==  lineNumber)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  lineNumber)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  lineNumber)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('No',    0)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	353	None	replace
489	[BUG]  [BUGGY]  if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!Character.isDigit(js.charAt(pos)))  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('No',    0)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	353	None	replace
490	[BUG]  [BUGGY]  if(pos!=  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos!=  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos!=  -1)  {  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    0)    ==    -1)    {    return    null;    }    if(js.indexOf('No',    0)    ==    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	353	None	replace
491	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  missing  return  statement	777	None	replace
492	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  missing  return  statement	777	None	replace
493	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  missing  return  statement	777	None	replace
494	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  illegal  start  of  expression	777	None	replace
495	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  missing  return  statement	777	None	replace
496	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [CE]  illegal  line  end  in  character  literal  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('    	non-compiled	[CE]  illegal  line  end  in  character  literal	777	None	replace
497	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	24	4	replace
498	[BUG]  [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	24	4	replace
499	[BUG]  [BUGGY]  if(pos  ==  lineNumber)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  lineNumber)  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  lineNumber)  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  missing  return  statement	24	None	replace
500	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	596	None	replace
501	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	596	None	replace
502	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	596	None	replace
503	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	596	None	replace
504	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	596	None	replace
505	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(0,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	596	None	replace
506	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos)+  2;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos)+  2;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos)+  2;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
507	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos)+  3;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos)+  3;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos)+  3;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
508	[BUG]  [BUGGY]  pos  =  js.lastIndexOf('N',  pos)+  1;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.lastIndexOf('N',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.lastIndexOf('N',  pos)+  1;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
509	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos)/  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos)/  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos)/  1;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
510	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos)+  4;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos)+  4;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos)+  4;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
511	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos  +  1)+  1;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos  +  1)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos  +  1)+  1;	  pos    =    js.indexOf('N',    pos)+    1;    	non-compiled	[CE]  missing  return  statement	643	None	replace
512	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
513	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
514	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unreachable  statement	19	None	add
515	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)!=  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
516	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	19	None	add
517	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
518	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
519	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
520	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
521	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  not  a  statement	19	None	add
522	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.length()  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
523	[BUG]  [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.length()  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
524	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.length()  ==  0)?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
525	[BUG]  [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  0)?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.length()  ==  0)?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
526	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()!=  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.length()!=  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	816	3	replace
527	[BUG]  [BUGGY]  return(js.length()!=  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()!=  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.length()!=  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	816	3	replace
528	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.length()  ==  1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
529	[BUG]  [BUGGY]  return(js.length()  ==  1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.length()  ==  1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.length()  ==  1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.length()    ==    0)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	816	4	replace
530	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    >>    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	374	None	replace
531	[BUG]  [BUGGY]  if(pos!=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos!=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos!=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    >>    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	374	None	replace
532	[BUG]  [BUGGY]  if(pos  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  >=  -1)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',    pos)    >>    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	374	None	replace
533	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf(	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    js.substring(pos,    js.indexOf(    	non-compiled	[CE]  illegal  start  of  expression	254	None	replace
534	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    js.substring(pos,    js.indexOf(    	non-compiled	[CE]  ')'  expected	254	None	replace
535	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    js.substring(pos,    js.indexOf(    	non-compiled	[CE]  missing  return  statement	254	None	replace
536	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    js.substring(pos,    js.indexOf(    	non-compiled	[CE]  illegal  start  of  expression	254	None	replace
537	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.  [CE]  <identifier>  expected  [FE]                                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.	  return(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.charAt(pos)    ==    'n')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    js.substring(pos,    js.indexOf(    	non-compiled	[CE]  <identifier>  expected	254	None	replace
538	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	709	4	replace
539	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	709	4	replace
540	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	709	4	replace
541	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    <    -1)    {    return    null;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	709	4	replace
542	[BUG]  [BUGGY]  if(lineNumber  ==  lineNumber)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  lineNumber)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  lineNumber)  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	533	None	replace
543	[BUG]  [BUGGY]  }  else  if(js.indexOf('n',  pos)!=  -1)  {  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  }  else  if(js.indexOf('n',  pos)!=  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	}  else  if(js.indexOf('n',  pos)!=  -1)  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    	non-compiled	[CE]  missing  return  statement	533	None	replace
544	[BUG]  [BUGGY]  if(!lineOffsets.contains( "n "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!lineOffsets.contains( "n "))  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!lineOffsets.contains( "n "))  {	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	533	None	replace
545	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  po  =  js.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  po  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)+  1;  po  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)+  1;  po  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Po    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  po	413	None	replace
546	[BUG]  [BUGGY]  po  =  js.indexOf('n',  pos)+  1;  [CE]  cannot  find  symbol  po  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  po  =  js.indexOf('n',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	po  =  js.indexOf('n',  pos)+  1;	          pos    =    js.indexOf('n',    pos)+    1;    Po    =    js.indexOf('n',    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  po	413	None	replace
547	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.lastIndexOf('n',  pos));	  return    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	4	replace
548	[BUG]  [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.lastIndexOf('n',  pos));	  return    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	4	replace
549	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.indexOf('n',  pos  +  1));	  return    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	4	replace
550	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos  +  1));	  return    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	4	replace
551	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	651	None	replace
552	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	651	None	replace
553	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	651	None	replace
554	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	651	None	replace
555	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	651	None	replace
556	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  >=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  >=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  >=  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if((    js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	651	None	replace
557	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
558	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
559	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
560	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
561	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	416	None	add
562	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
563	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
564	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
565	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
566	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
567	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	416	4	add
568	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
569	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos)	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
570	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf(	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
571	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
572	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ')'  expected	141	None	replace
573	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos  +  2);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos  +  2);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos  +  2);	  pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  missing  return  statement	269	None	replace
574	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos  +  3);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos  +  3);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos  +  3);	  pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  missing  return  statement	269	None	replace
575	[BUG]  [BUGGY]  pos  =  js.lastIndexOf('n',  pos  +  1);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.lastIndexOf('n',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.lastIndexOf('n',  pos  +  1);	  pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  missing  return  statement	269	None	replace
576	[BUG]  [BUGGY]  pos  =  js.indexOf('N',  pos  +  1);  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('N',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('N',  pos  +  1);	  pos    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  missing  return  statement	269	None	replace
577	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)!=    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	506	None	replace
578	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)!=    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	506	None	replace
579	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  cannot  find  symbol  Js  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(Js.indexOf('n',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)!=    -1)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Js	506	None	replace
580	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('t',  pos)!=  -1)  {  return  null;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('t',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  if(js.indexOf('t',  pos)!=  -1)  {  return  null;  }	          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(Js.indexOf('n',    pos)!=    -1)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	506	None	replace
581	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(pos  >=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	539	3	replace
582	[BUG]  [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  >=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos  >=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	compilable	  [FE]  ComparisonFailure  	539	3	replace
583	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(pos  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	539	4	replace
584	[BUG]  [BUGGY]  return(pos  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	539	4	replace
585	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	809	None	add
586	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unreachable  statement	809	None	add
587	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	809	None	add
588	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	809	None	add
589	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	809	None	add
590	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null  :  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	809	None	add
591	[BUG]  [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',    pos    +    1)    ==    -1)?    null    :    js.substring(0,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return(js.indexOf('n',  pos  +  1)  ==  -1)?  null  :  js.substring(0,  js.indexOf('n',	  	non-compiled	[CE]  illegal  start  of  expression	809	None	add
592	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
593	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
594	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
595	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
596	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
597	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
598	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
599	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
600	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
601	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('r',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
602	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ",   ");  }  [CE]  unclosed  string  literal  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ",   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ",   ");  }	  	non-compiled	[CE]  unclosed  string  literal	422	None	add
603	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
604	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(js.indexOf('n',  pos  +  2)  ==  -1)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	422	4	add
605	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile())    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	735	None	replace
606	[BUG]  [BUGGY]  if(!isExternFile())  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile())    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  cannot  find  symbol	735	None	replace
607	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile())    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  incompatible  types	735	None	replace
608	[BUG]  [BUGGY]  return(pos.indexOf('n',  js)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos.indexOf('n',  js)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos.indexOf('n',  js)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile())    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  int  cannot  be  dereferenced	735	None	replace
609	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	147	None	replace
610	[BUG]  [BUGGY]  if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';')  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	147	None	replace
611	[BUG]  [BUGGY]  if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';')  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	147	None	replace
612	[BUG]  [BUGGY]  if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('[',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	147	None	replace
613	[BUG]  [BUGGY]  if(js.indexOf('t',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('t',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('t',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	147	None	replace
614	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	4	replace
615	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	4	replace
616	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  ComparisonFailure  	622	3	replace
617	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('t',  pos));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  ComparisonFailure  	622	3	replace
618	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('  ',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	4	replace
619	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	4	replace
620	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ')'  expected	622	None	replace
621	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('',  pos));  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  empty  character  literal	622	None	replace
622	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('T',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('T',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	3	replace
623	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('T',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('T',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('T',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	622	3	replace
624	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  ComparisonFailure  	622	3	replace
625	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	compilable	  [FE]  ComparisonFailure  	622	3	replace
626	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
627	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
628	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
629	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
630	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
631	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	non-compiled	[CE]  unreachable  statement	202	None	add
632	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',    pos)    ==    -1)?)    return    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  ';'  expected	648	None	replace
633	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',    pos)    ==    -1)?)    return    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  ';'  expected	648	None	replace
634	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',    pos)    ==    -1)?)    return    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  ';'  expected	648	None	replace
635	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  js.substring(pos,  js.indexOf	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',    pos)    ==    -1)?)    return    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  ';'  expected	648	None	replace
636	[BUG]  [BUGGY]  (js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  (js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    (js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
637	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    (js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	4	replace
638	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(pos  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    (js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	4	replace
639	[BUG]  [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(!isExternFile)    {    if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	501	None	replace
640	[BUG]  [BUGGY]  if(lineNumber  ==  lineNumber)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  lineNumber)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  lineNumber)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(!isExternFile)    {    if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	501	None	replace
641	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(!isExternFile)    {    if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	501	None	replace
642	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  2));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  2));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
643	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  2));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  2));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  2));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
644	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
645	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
646	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
647	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    	compilable	  [FE]  ComparisonFailure  	740	3	replace
648	[BUG]  [BUGGY]  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  missing  return  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  fileName  =  js.substring(0,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	510	None	replace
649	[BUG]  [BUGGY]  if(lineNumber  ==  lineNumber)  {  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  lineNumber)  {  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  lineNumber)  {  js.substring(pos,  js.indexOf('n',  pos));  String  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	510	None	replace
650	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  fileName  =  js.substring(0,  js.indexOf('n',  pos));  }	          js.substring(pos,    js.indexOf('n',    pos));    String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	510	None	replace
651	[BUG]  [BUGGY]  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  fileName  =  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	fileName  =  js.substring(0,  js.indexOf('n',  pos));	          js.substring(pos,    js.indexOf('n',    pos));    String    fileName    =    js.substring(0,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	510	None	replace
652	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
653	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
654	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }	  	non-compiled	[CE]  unreachable  statement	342	None	add
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
656	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
657	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
658	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
659	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
660	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
661	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }	  	non-compiled	[CE]  unreachable  statement	342	None	add
662	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	342	None	add
663	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('0',  pos));  }	  	non-compiled	[CE]  unreachable  statement	342	None	add
664	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	342	None	add
665	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
666	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('0',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  if(js.indexOf('0',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	342	3	add
667	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
668	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
669	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
670	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
671	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
672	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('  ',  pos)  >=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
673	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  ==  -1)?)  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  unclosed  character  literal  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  if(js.indexOf('  ',  pos)  ==  -1)?)  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    if(js.indexOf('  ',  pos)  ==  -1)?)  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  	non-compiled	[CE]  unclosed  character  literal	53	None	add
674	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
675	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unreachable  statement	183	None	add
676	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
677	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
678	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	183	None	add
679	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  not  a  statement	183	None	add
680	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	183	None	add
681	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
682	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	183	None	add
683	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
684	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
685	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
686	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ',  pos)  ==  -1)  {  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
687	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    (js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
688	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ')  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
689	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
690	[BUG]  [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [CE]  unclosed  character  literal  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('    ',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('  ',  pos)  ==  -1)?  null  :  js.substring(0,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unclosed  character  literal	542	None	add
691	[BUG]  [BUGGY]  js.append(fileName,  js.indexOf('n',  pos  +  1));  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  js.indexOf('n',  pos  +  1));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  js.indexOf('n',  pos  +  1));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	576	None	replace
692	[BUG]  [BUGGY]  js.append(fileName,  js.indexOf('n',  pos)+  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  js.indexOf('n',  pos)+  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  js.indexOf('n',  pos)+  1);	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	576	None	replace
693	[BUG]  [BUGGY]  js.append(fileName,  pos.indexOf('n',  js));  [CE]  int  cannot  be  dereferenced  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  pos.indexOf('n',  js));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  pos.indexOf('n',  js));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  int  cannot  be  dereferenced	576	None	replace
694	[BUG]  [BUGGY]  js.append(fileName,  js.substring(pos,  js.indexOf('n',  pos)));  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  js.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  js.substring(pos,  js.indexOf('n',  pos)));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	576	None	replace
695	[BUG]  [BUGGY]  js.append(fileName,  js.lastIndexOf('n',  pos));  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  js.lastIndexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  js.lastIndexOf('n',  pos));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	576	None	replace
696	[BUG]  [BUGGY]  js.append(file,  js.indexOf('n',  pos));  [CE]  cannot  find  symbol  file  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(file,  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(file,  js.indexOf('n',  pos));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol  file	576	None	replace
697	[BUG]  [BUGGY]  js.append(fileName,  js.indexOf('n',  pos-1));  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.append(fileName,  js.indexOf('n',  pos-1));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.append(fileName,  js.indexOf('n',  pos-1));	  js.append(fileName,    js.indexOf('n',    pos));    	non-compiled	[CE]  cannot  find  symbol	576	None	replace
698	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
699	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
700	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
701	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
702	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
703	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	383	3	add
704	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	383	None	add
705	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	383	None	add
706	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	383	None	add
707	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	383	None	add
708	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	383	None	add
709	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	383	None	add
710	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	383	None	add
711	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	550	None	replace
712	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	550	None	replace
713	[BUG]  [BUGGY]  if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('N',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	550	None	replace
714	[BUG]  [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('r',  pos)  ==  -1)return  null?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    ==    -1)return    null?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	550	None	replace
715	[BUG]  [BUGGY]  Integer  pos  =  js.indexOf('n',  lineNumber);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Integer  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Integer  pos  =  js.indexOf('n',  lineNumber);	          pos    =    js.indexOf('n',    lineNumber);    Integer    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	223	None	replace
716	[BUG]  [BUGGY]  int  pos  =  js.indexOf('n',  lineNumber);  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  pos  =  js.indexOf('n',  lineNumber);	          pos    =    js.indexOf('n',    lineNumber);    Integer    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	223	None	replace
717	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  lineNumber)+  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  lineNumber)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  lineNumber)+  1;	          pos    =    js.indexOf('n',    lineNumber);    Integer    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  missing  return  statement	223	None	replace
718	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ')'  expected	660	None	replace
719	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  missing  return  statement	660	None	replace
720	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  missing  return  statement	660	None	replace
721	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  missing  return  statement	660	None	replace
722	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)?  null  :	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  illegal  start  of  expression	660	None	replace
723	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  if((  js.indexOf('n',  pos)  ==  -1)	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ')'  expected	660	None	replace
724	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('t',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  missing  return  statement	660	None	replace
725	[BUG]  [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	while(js.hasMoreElements())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    else    {    return    js.substring(0,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  'else'  without  'if'	277	None	replace
726	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js!=  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js!=    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	39	3	replace
727	[BUG]  [BUGGY]  return(js!=  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js!=  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js!=    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	39	3	replace
728	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js!=  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js!=    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	39	3	replace
729	[BUG]  [BUGGY]  return(js!=  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js!=  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js!=  null)?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js!=    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	39	3	replace
730	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	540	None	add
731	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	540	None	add
732	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  unreachable  statement	540	None	add
733	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	540	None	add
734	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  (js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    (js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  not  a  statement	540	None	add
735	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	540	None	add
736	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	540	None	add
737	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	540	None	add
738	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  ';'  expected	540	None	add
739	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',  pos)  ==  -1)  {  return(js.indexOf('r',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	540	None	add
740	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)+  1;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)+  1;	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('N',    pos);    	non-compiled	[CE]  missing  return  statement	433	None	replace
741	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos  +  1);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos  +  1);	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('N',    pos);    	non-compiled	[CE]  missing  return  statement	433	None	replace
742	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)-  1;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos);  pos  =  js.indexOf('N',  pos)-  1;	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('N',    pos);    	non-compiled	[CE]  missing  return  statement	433	None	replace
743	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	230	3	add
744	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	230	3	add
745	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	230	3	add
746	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	230	3	add
747	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	230	None	add
748	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	230	None	add
749	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	230	None	add
750	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	230	None	add
751	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	230	None	add
752	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	230	None	add
753	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	230	None	add
754	[BUG]  [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos    +    1)!=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos        +        1)!=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	230	None	add
755	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	682	4	replace
756	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	682	4	replace
757	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('R',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('R',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	682	3	replace
758	[BUG]  [BUGGY]  return(js.indexOf('R',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('R',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('R',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  ComparisonFailure  	682	3	replace
759	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('r',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	682	4	replace
760	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',  pos)  ==  0)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	682	4	replace
761	[BUG]  [BUGGY]  return(js.indexOf('r',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('r',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('r',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('r',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  ')'  expected	682	None	replace
762	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos));	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	430	None	replace
763	[BUG]  [BUGGY]  pos  =  js.indexOf(';',  pos));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf(';',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf(';',  pos));	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	430	None	replace
764	[BUG]  [BUGGY]  pos  =  js.indexOf('[',  pos));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('[',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('[',  pos));	          pos    =    js.indexOf('n',    pos);    pos    =    js.indexOf('n',    pos));    	non-compiled	[CE]  ';'  expected	430	None	replace
765	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
766	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
767	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
768	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
769	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
770	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  >=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
771	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	298	None	add
772	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
773	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
774	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
775	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('r',  pos)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
776	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
777	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    throw    new    IllegalArgumentException(     "     ");    }    if(js.indexOf('n',  pos)!=  -1)  {  throw  new  IllegalArgumentException(   "     ");  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        throw        new        IllegalArgumentException(       "       ");        }        if(js.indexOf('n',    pos)!=    -1)    {    throw    new    IllegalArgumentException(   "       ");    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	298	4	add
778	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  not  a  statement	748	None	add
779	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	748	None	add
780	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  String  js  =(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  variable  js  is  already  defined  in  method  getLine(int)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  String  js  =(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    String  js  =(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  variable  js  is  already  defined  in  method  getLine(int)	748	None	add
781	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  String  js  =  js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  String  js  =  js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    String  js  =  js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  ';'  expected	748	None	add
782	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.	  	non-compiled	[CE]  <identifier>  expected	748	None	add
783	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf(	  	non-compiled	[CE]  illegal  start  of  expression	748	None	add
784	[BUG]  [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js    ==    null    ||    js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)  {  return(js  ==  null  ||  js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos,  js	  	non-compiled	[CE]  ')'  expected	748	None	add
785	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	689	None	replace
786	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	689	None	replace
787	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	689	None	replace
788	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	689	None	replace
789	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	689	None	replace
790	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	689	None	replace
791	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	689	None	replace
792	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	689	None	replace
793	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)>  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)>    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	689	None	replace
794	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('r',  pos  +  1));  [CE]  missing  return  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('r',  pos  +  1));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('r',  pos  +  1));	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
795	[BUG]  [BUGGY]  js.substring(0,  js.indexOf('r',  pos));  [CE]  missing  return  statement  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(0,  js.indexOf('r',  pos));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(0,  js.indexOf('r',  pos));	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
796	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('r',  pos)+  1);  [CE]  missing  return  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('r',  pos)+  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('r',  pos)+  1);	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
797	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  missing  return  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
798	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  null;  }  [CE]  missing  return  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  return  null;  }	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
799	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('r',  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	733	None	replace
800	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  no  suitable  method  found  for  substring(int,boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,boolean)	732	None	replace
801	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  ';'  expected	732	None	replace
802	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
803	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
804	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	329	None	add
805	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
806	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
807	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
808	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	329	3	add
809	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	329	None	add
810	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	329	None	add
811	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	329	None	add
812	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	329	None	add
813	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	329	None	add
814	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  <  -1)  {  return  null;  }  if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        <        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    <    -1)    {    return    null;    }    if(pos  <  0  ||  js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	329	None	add
815	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  ')'  expected	645	None	replace
816	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	645	None	replace
817	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('r',  pos)  ==  -1))  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	645	None	replace
818	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)||(js.indexOf('r',  pos)  ==  -1))  {  return  null;  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if((    js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    	non-compiled	[CE]  missing  return  statement	645	None	replace
819	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  SOURCE_EXCERPT_REGION_LENGTH  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  assign  a  value  to  final  variable  SOURCE_EXCERPT_REGION_LENGTH  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  SOURCE_EXCERPT_REGION_LENGTH  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)-  1;  SOURCE_EXCERPT_REGION_LENGTH  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    PO    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  SOURCE_EXCERPT_REGION_LENGTH	140	None	replace
820	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  po  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  po  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  po  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)-  1;  po  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    PO    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  po	140	None	replace
821	[BUG]  [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  P  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  P  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  pos  =  js.indexOf('n',  pos)-  1;  P  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	pos  =  js.indexOf('n',  pos)-  1;  P  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    PO    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  P	140	None	replace
822	[BUG]  [BUGGY]  PO  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  PO  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  PO  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	PO  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    PO    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  PO	140	None	replace
823	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(fileName.substring(pos,  js.indexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
824	[BUG]  [BUGGY]  return  new  String(fileName.substring(pos,  js.indexOf('n',  pos)));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(fileName.substring(pos,  js.indexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
825	[BUG]  [BUGGY]  return  new  String(fileName,  js.substring(pos,  js.indexOf('n',  pos)));  [CE]  no  suitable  constructor  found  for  String(String,String)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName,  js.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(fileName,  js.substring(pos,  js.indexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String)	570	None	replace
826	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
827	[BUG]  [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(pos,  js.indexOf('n',  pos)+  1));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
828	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.lastIndexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(pos,  js.lastIndexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
829	[BUG]  [BUGGY]  return  new  String(js.substring(pos,  js.lastIndexOf('n',  pos)));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.lastIndexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(pos,  js.lastIndexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
830	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos  +  1)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(pos,  js.indexOf('n',  pos  +  1)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
831	[BUG]  [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos  +  1)));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(pos,  js.indexOf('n',  pos  +  1)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(pos,  js.indexOf('n',  pos  +  1)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	570	4	replace
832	[BUG]  [BUGGY]  return  new  String(str.substring(pos,  js.indexOf('n',  pos)));  [CE]  cannot  find  symbol  str  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(str.substring(pos,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(str.substring(pos,  js.indexOf('n',  pos)));	  return    new    String(js.substring(pos,    js.indexOf('n',    pos)));    	non-compiled	[CE]  cannot  find  symbol  str	570	None	replace
833	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.lastIndexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(0,  js.lastIndexOf('n',  pos)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  ComparisonFailure  	572	4	replace
834	[BUG]  [BUGGY]  return  new  String(js.substring(0,  js.lastIndexOf('n',  pos)));  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.lastIndexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(0,  js.lastIndexOf('n',  pos)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  ComparisonFailure  	572	4	replace
835	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos  +  1)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(0,  js.indexOf('n',  pos  +  1)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
836	[BUG]  [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos  +  1)));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos  +  1)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(0,  js.indexOf('n',  pos  +  1)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
837	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos)+  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(0,  js.indexOf('n',  pos)+  1));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  ComparisonFailure  	572	4	replace
838	[BUG]  [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos)+  1));  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos)+  1));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(0,  js.indexOf('n',  pos)+  1));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  ComparisonFailure  	572	4	replace
839	[BUG]  [BUGGY]  return  new  String(fileName,  js.substring(0,  js.indexOf('n',  pos)));  [CE]  no  suitable  constructor  found  for  String(String,String)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName,  js.substring(0,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(fileName,  js.substring(0,  js.indexOf('n',  pos)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String)	572	None	replace
840	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName.substring(0,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(fileName.substring(0,  js.indexOf('n',  pos)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
841	[BUG]  [BUGGY]  return  new  String(fileName.substring(0,  js.indexOf('n',  pos)));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(fileName.substring(0,  js.indexOf('n',  pos)));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(fileName.substring(0,  js.indexOf('n',  pos)));	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
842	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos))  +  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  new  String(js.substring(0,  js.indexOf('n',  pos))  +  1);	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
843	[BUG]  [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos))  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  new  String(js.substring(0,  js.indexOf('n',  pos))  +  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  new  String(js.substring(0,  js.indexOf('n',  pos))  +  1);	  return    new    String(js.substring(0,    js.indexOf('n',    pos)));    	compilable	  [FE]  StringIndexOutOfBoundsException  	572	4	replace
844	[BUG]  [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  missing  return  statement	760	None	replace
845	[BUG]  [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    }    	non-compiled	[CE]  ';'  expected	760	None	replace
846	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	760	4	replace
847	[BUG]  [BUGGY]  if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	760	4	replace
848	[BUG]  [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	631	None	replace
849	[BUG]  [BUGGY]  if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.startsWith( "n "))  {  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	          if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	631	None	replace
850	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	compilable	  [FE]  ComparisonFailure  	625	3	add
851	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	compilable	  [FE]  ComparisonFailure  	625	3	add
852	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  int  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  int  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    int  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	625	None	add
853	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Integer  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Integer  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    Integer  pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	625	None	add
854	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [CE]  cannot  find  symbol  Pos  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    Pos  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	non-compiled	[CE]  cannot  find  symbol  Pos	625	None	add
855	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	compilable	  [FE]  ComparisonFailure  	625	3	add
856	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	compilable	  [FE]  ComparisonFailure  	625	3	add
857	[BUG]  [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Po  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [CE]  cannot  find  symbol  Po  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          pos    =    js.indexOf('n',    pos)-    1;    pos  =  js.indexOf('r',  pos)-  1;  Po  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                pos        =        js.indexOf('n',        pos)-        1;        pos    =    js.indexOf('r',    pos)-    1;    Po  =  js.indexOf('n',  pos)-  1;  pos  =  js.indexOf('r',  pos)-  1;	  	non-compiled	[CE]  cannot  find  symbol  Po	625	None	add
858	[BUG]  [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  missing  return  statement	734	None	replace
859	[BUG]  [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	734	None	replace
860	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	734	4	replace
861	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('r',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('r',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('r',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(!isExternFile)    {    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	734	4	replace
862	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  missing  return  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
863	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  missing  return  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
864	[BUG]  [BUGGY]  js.substring(0,  js.indexOf('n',  pos  +  1));  [CE]  missing  return  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(0,  js.indexOf('n',  pos  +  1));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(0,  js.indexOf('n',  pos  +  1));	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
865	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }  [CE]  missing  return  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
866	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }  [CE]  missing  return  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
867	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  js.substring(pos,    js.indexOf('n',    pos    +    1));    	non-compiled	[CE]  missing  return  statement	321	None	replace
868	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1)    {    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    null;    }    	non-compiled	[CE]  ')'  expected	318	None	replace
869	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  new  String(js.substring(pos,  js.indexOf('n',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    null;    }    	non-compiled	[CE]  ')'  expected	318	None	replace
870	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return  null;  }	  if(js.indexOf('n',    pos)    ==    -1)    {    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	318	None	replace
871	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	389	3	add
872	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	389	3	add
873	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
874	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	389	None	add
875	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	389	3	add
876	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	389	3	add
877	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
878	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  	non-compiled	[CE]  unreachable  statement	389	None	add
879	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  0)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
880	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
881	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(js.indexOf('n',  0)  ==  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
882	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)!=    -1)    {    return    null;    }    if(js.indexOf('n',  0)!=  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)!=        -1)        {        return        null;        }        if(js.indexOf('n',    0)!=    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	389	None	add
883	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  place(pos,    js.indexOf('n',    pos))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	781	None	replace
884	[BUG]  [BUGGY]  place(js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  place(js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	place(js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  place(pos,    js.indexOf('n',    pos))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	781	None	replace
885	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  }	  place(pos,    js.indexOf('n',    pos))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	781	None	replace
886	[BUG]  [BUGGY]  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos)+  1);  }	  place(pos,    js.indexOf('n',    pos))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  ';'  expected	781	None	replace
887	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    >=    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	634	None	replace
888	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)    >=    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	634	None	replace
889	[BUG]  [BUGGY]  return(pos!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos!=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	634	None	replace
890	[BUG]  [BUGGY]  return(pos  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(pos  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(pos  >=  -1)?  -1  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.indexOf('n',    pos)    >=    -1)?    -1    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  incompatible  types	634	None	replace
891	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1)+  1;  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1)+  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  lineNumber  =  js.indexOf('n',  pos  +  1)+  1;	  int    lineNumber    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	263	None	replace
892	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  3);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  3);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  lineNumber  =  js.indexOf('n',  pos  +  3);	  int    lineNumber    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	263	None	replace
893	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1,  pos);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1,  pos);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  lineNumber  =  js.indexOf('n',  pos  +  1,  pos);	  int    lineNumber    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	263	None	replace
894	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1,  0);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1,  0);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  lineNumber  =  js.indexOf('n',  pos  +  1,  0);	  int    lineNumber    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	263	None	replace
895	[BUG]  [BUGGY]  char  lineNumber  =  js.indexOf('n',  pos  +  1);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  char  lineNumber  =  js.indexOf('n',  pos  +  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	char  lineNumber  =  js.indexOf('n',  pos  +  1);	  int    lineNumber    =    js.indexOf('n',    pos    +    1);    	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	263	None	replace
896	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)!=  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)!=  -1)  {	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	821	None	replace
897	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  >=  -1)  {	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	821	None	replace
898	[BUG]  [BUGGY]  }  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  }  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	}  else  if(js.indexOf('n',  pos  +  1)  ==  -1)  {	  if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos));    }    if(js.indexOf('n',    pos    +    1)    >=    -1)    {    	non-compiled	[CE]  missing  return  statement	821	None	replace
899	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  this;  }  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  this;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  this;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    this;    }    	non-compiled	[CE]  incompatible  types	765	None	replace
900	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  this;  }  [CE]  incompatible  types  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  this;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  this;  }	  if(js.indexOf('n',    pos)    >=    -1)    {    return    this;    }    	non-compiled	[CE]  incompatible  types	765	None	replace
901	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	687	None	replace
902	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	687	None	replace
903	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	687	None	replace
904	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)&&(js.indexOf('n',  pos)  ==  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	687	None	replace
905	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  >=  -1)||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  ')'  expected	687	None	replace
906	[BUG]  [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if((  js.indexOf('n',  pos)  ==  -1)&&(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    -1)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf    	non-compiled	[CE]  missing  return  statement	687	None	replace
907	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	3	replace
908	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos  +  1);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	3	replace
909	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  pos);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  pos);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	3	replace
910	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  pos);  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  pos);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(0,  pos);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	3	replace
911	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	2	replace
912	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos);  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)!=  -1)?  null  :  js.substring(pos);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	compilable	  [FE]  ComparisonFailure  	606	2	replace
913	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos);	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos);    	non-compiled	[CE]  ')'  expected	606	None	replace
914	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
915	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	123	None	add
916	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  unreachable  statement	123	None	add
917	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)!=  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
918	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	123	None	add
919	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    (js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  not  a  statement	123	None	add
920	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)?)  return  null  :  js.substring(pos,  js.indexOf('n',  pos));	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
921	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('N',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  ';'  expected	123	None	add
922	[BUG]  [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('N',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js.indexOf('n',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('N',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',  pos)  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
923	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('n',  pos)+  1);	  return(js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  ')'  expected	49	None	replace
924	[BUG]  [BUGGY]  Lineno  pos  =  js.indexOf('n',  lineNumber);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Lineno  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Lineno  pos  =  js.indexOf('n',  lineNumber);	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  cannot  find  symbol	522	None	replace
925	[BUG]  [BUGGY]  IllegalArgumentException  e  =  js.indexOf('n',  lineNumber);  Lineno  pos  =  js.indexOf('n',  lineNumber);  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  IllegalArgumentException  e  =  js.indexOf('n',  lineNumber);  Lineno  pos  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	IllegalArgumentException  e  =  js.indexOf('n',  lineNumber);  Lineno  pos  =  js.indexOf('n',  lineNumber);	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  incompatible  types	522	None	replace
926	[BUG]  [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n'));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n'));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n'));	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  cannot  find  symbol	522	None	replace
927	[BUG]  [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Lineno  pos  =  lineNumber.indexOf('n',  js);	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  cannot  find  symbol	522	None	replace
928	[BUG]  [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n',  js.indexOf('n')));  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n',  js.indexOf('n')));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Lineno  pos  =  lineNumber.indexOf('n',  js.indexOf('n',  js.indexOf('n')));	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  cannot  find  symbol	522	None	replace
929	[BUG]  [BUGGY]  lineNumber  =  js.indexOf('n',  lineNumber);  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  lineNumber  =  js.indexOf('n',  lineNumber);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	lineNumber  =  js.indexOf('n',  lineNumber);	          pos    =    js.indexOf('n',    lineNumber);    Lineno    pos    =    js.indexOf('n',    lineNumber);    	non-compiled	[CE]  missing  return  statement	522	None	replace
930	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
931	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
932	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
933	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
934	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
935	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	375	3	add
936	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	375	None	add
937	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	375	None	add
938	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	375	None	add
939	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	375	None	add
940	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos  +  1));  }	  	non-compiled	[CE]  unreachable  statement	375	None	add
941	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	375	None	add
942	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)  >=  -1)  {  return  null;  }  if(js.indexOf('n',  pos  +  1)!=  -1)  {  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        >=        -1)        {        return        null;        }        if(js.indexOf('n',    pos    +    1)    >=    -1)    {    return    null;    }    if(js.indexOf('n',  pos  +  1)!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	375	None	add
943	[BUG]  [BUGGY]  ||(js.indexOf('n',  pos)!=  -1))  {  return  null;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||(js.indexOf('n',  pos)!=  -1))  {  return  null;  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||(js.indexOf('n',  pos)!=  -1))  {  return  null;	  if((    js.indexOf('n',    pos)    <    0)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	795	None	replace
944	[BUG]  [BUGGY]  ||(js.indexOf('n',  pos)  >=  -1))  {  return  null;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||(js.indexOf('n',  pos)  >=  -1))  {  return  null;  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||(js.indexOf('n',  pos)  >=  -1))  {  return  null;	  if((    js.indexOf('n',    pos)    <    0)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	795	None	replace
945	[BUG]  [BUGGY]  ||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||(js.indexOf('n',  pos)!=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    0)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	795	None	replace
946	[BUG]  [BUGGY]  ||(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||(js.indexOf('n',  pos)  >=  -1))  {  return  null;  }	  if((    js.indexOf('n',    pos)    <    0)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	795	None	replace
947	[BUG]  [BUGGY]  ||(js.indexOf('n',  pos)  ==  -1))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  ||(js.indexOf('n',  pos)  ==  -1))  {  return  null;  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	||(js.indexOf('n',  pos)  ==  -1))  {  return  null;	  if((    js.indexOf('n',    pos)    <    0)||(js.indexOf('n',    pos)    >=    -1))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	795	None	replace
948	[BUG]  [BUGGY]  js.substring(0,  js.indexOf('n',  pos)+  1);  [CE]  missing  return  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(0,  js.indexOf('n',  pos)+  1);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(0,  js.indexOf('n',  pos)+  1);	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	317	None	replace
949	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [CE]  missing  return  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	317	None	replace
950	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  null;  }  [CE]  missing  return  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	317	None	replace
951	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('n',  pos)+  2);  [CE]  missing  return  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('n',  pos)+  2);  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('n',  pos)+  2);	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	317	None	replace
952	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  missing  return  statement	317	None	replace
953	[BUG]  [BUGGY]  js.substring(pos,  js.indexOf('n',  pos)+  1));  [CE]  ';'  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  js.substring(pos,  js.indexOf('n',  pos)+  1));  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	js.substring(pos,  js.indexOf('n',  pos)+  1));	  js.substring(pos,    js.indexOf('n',    pos)+    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
954	[BUG]  [BUGGY]  int  position  =  js.indexOf('n',  pos)-  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  position  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  position  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    position    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  missing  return  statement	746	None	replace
955	[BUG]  [BUGGY]  Position  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  Position  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Position  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Position  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    position    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  Position	746	None	replace
956	[BUG]  [BUGGY]  n  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  n  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	n  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    position    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  n	746	None	replace
957	[BUG]  [BUGGY]  position  =  js.indexOf('n',  pos)-  1;  [CE]  cannot  find  symbol  position  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  position  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	position  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    position    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  cannot  find  symbol  position	746	None	replace
958	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	4	replace
959	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	4	replace
960	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  ComparisonFailure  	8	3	replace
961	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  ComparisonFailure  	8	3	replace
962	[BUG]  [BUGGY]  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	place(pos,  js.indexOf('n',  pos))  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	non-compiled	[CE]  ';'  expected	8	None	replace
963	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  ComparisonFailure  	8	3	replace
964	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('r',  pos));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('r',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('r',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  ComparisonFailure  	8	3	replace
965	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('R',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('R',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	3	replace
966	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('R',  pos));  }  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('R',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('R',  pos));  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('r',    pos));    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	3	replace
967	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  missing  return  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	non-compiled	[CE]  missing  return  statement	62	None	replace
968	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  -  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos  -  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
969	[BUG]  [BUGGY]  return(js.charAt(pos  -  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  -  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos  -  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
970	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  +  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos  +  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
971	[BUG]  [BUGGY]  return(js.charAt(pos  +  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos  +  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos  +  1)  ==  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
972	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
973	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(0,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(0,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(0,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
974	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
975	[BUG]  [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)  ==  'N')?  null  :  js.substring(pos,  js.lastIndexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
976	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)!=  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js.charAt(pos)!=  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
977	[BUG]  [BUGGY]  return(js.charAt(pos)!=  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.charAt(pos)!=  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.charAt(pos)!=  'N')?  null  :  js.substring(pos,  js.indexOf('n',  pos));	  return(js.charAt(pos)    ==    'N')?    null    :    js.substring(pos,    js.indexOf('n',    pos));    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	4	replace
978	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	compilable	  [FE]  StringIndexOutOfBoundsException  	532	4	replace
979	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	compilable	  [FE]  StringIndexOutOfBoundsException  	532	4	replace
980	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	non-compiled	[CE]  illegal  start  of  expression	532	None	replace
981	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [CE]  missing  return  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	non-compiled	[CE]  missing  return  statement	532	None	replace
982	[BUG]  [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	non-compiled	[CE]  illegal  start  of  expression	532	None	replace
983	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }  else  {  return  js.substring(pos,  js.indexOf(  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }  else  {  return  js.substring(pos,  js.indexOf(  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  js.substring(pos,  js.indexOf('n',  0));  }  else  {  return  js.substring(pos,  js.indexOf(	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	non-compiled	[CE]  illegal  start  of  expression	532	None	replace
984	[BUG]  [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  0));  if(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    0));    	non-compiled	[CE]  illegal  start  of  expression	532	None	replace
985	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	143	None	replace
986	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  return  js.indexOf('n',  pos)  ==  -1?  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  missing  return  statement	143	None	replace
987	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)  {  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)  {  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos)  {  -1)?  null  :  js.substring(pos,  js.indexOf('t',  pos));	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ')'  expected	143	None	replace
988	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null  :  js.substring(pos,  js.indexOf('t',  pos));  }	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('t',    pos));    	non-compiled	[CE]  ';'  expected	143	None	replace
989	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(0,  js.indexOf('n',  pos)+  1);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  ComparisonFailure  	201	4	replace
990	[BUG]  [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos)+  1);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(0,  js.indexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(0,  js.indexOf('n',  pos)+  1);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  ComparisonFailure  	201	4	replace
991	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  2);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.indexOf('n',  pos)+  2);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	3	replace
992	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  2);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  2);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos)+  2);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	3	replace
993	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	4	replace
994	[BUG]  [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.lastIndexOf('n',  pos)+  1);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	4	replace
995	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  3);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	return  js.substring(pos,  js.indexOf('n',  pos)+  3);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	4	replace
996	[BUG]  [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  3);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return  js.substring(pos,  js.indexOf('n',  pos)+  3);  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return  js.substring(pos,  js.indexOf('n',  pos)+  3);	  return    js.substring(pos,    js.indexOf('n',    pos)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	201	4	replace
997	[BUG]  [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
998	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  1)!=  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  1)!=  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  1)!=  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
999	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  &&  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
1000	[BUG]  [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos  +  1)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
1001	[BUG]  [BUGGY]  if(js.charAt(pos  +  1)!=  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos  +  1)!=  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos  +  1)!=  'n'  ||  js.charAt(pos  +  1)  ==  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
1002	[BUG]  [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.charAt(pos)  ==  'n'  ||  js.charAt(pos  +  2)  ==  'r')  {  return  null;  }	  if(js.charAt(pos)    ==    'n'    ||    js.charAt(pos    +    1)    ==    'r')    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	715	None	replace
1003	[BUG]  [BUGGY]  String  pos  =  js.indexOf('n',  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  String  pos  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	String  pos  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    String    pos    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	624	None	replace
1004	[BUG]  [BUGGY]  int  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  int  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	int  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    String    pos    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	624	None	replace
1005	[BUG]  [BUGGY]  Integer  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  getLine(int)  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  Integer  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	Integer  pos  =  js.indexOf('n',  pos)-  1;  String  pos  =  js.indexOf('n',  pos)-  1;	          pos    =    js.indexOf('n',    pos)-    1;    String    pos    =    js.indexOf('n',    pos)-    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  getLine(int)	624	None	replace
1006	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  return  null  :  js.substring(pos,  js.indexOf('n',  pos));  }	  return(js.indexOf('n',    pos)    >=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js.indexOf('n',    pos)    >=    -1)    {    return(js.indexOf('n',    pos)!=    -1)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1007	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  null  :  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  null  :  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  null  :	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1008	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  nu  [CE]  ')'  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  nu  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  nu	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  ')'  expected	122	None	replace
1009	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  [CE]  illegal  start  of  expression  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1010	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  nu  [CE]  :  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  nu  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return(js  ==  null)?  null  :  js.substring(pos,  js.indexOf('n',  pos));  }  else  {  return(js  ==  null)?  nu	  return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    if(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    else    {    return(js    ==    null)?    null    :    js.substring(pos,    js.indexOf('n',    pos));    }    	non-compiled	[CE]  :  expected	122	None	replace
1011	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	65	3	add
1012	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	65	3	add
1013	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1014	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
1015	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(0,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1016	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(!isExternFile)  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
1017	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	65	3	add
1018	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	65	3	add
1019	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)!=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1020	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  >=  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1021	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [CE]  unreachable  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('r',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1022	[BUG]  [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [CE]  unreachable  statement  [FE]                      ComparisonFailure    [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]          if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	                if(js.indexOf('n',        pos)        ==        -1)        {        return        null;        }        if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('t',  pos));  }	  	non-compiled	[CE]  unreachable  statement	65	None	add
1023	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1024	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)!=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1025	[BUG]  [BUGGY]  if(!js.isEmpty())  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.isEmpty())  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.isEmpty())  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1026	[BUG]  [BUGGY]  if(js.indexOf(';')  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf(';')  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf(';')  ==  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1027	[BUG]  [BUGGY]  if(!js.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!js.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!js.endsWith( ".java "))  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  	395	None	replace
1028	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  >=  -1)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1029	[BUG]  [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }  [BUGGY]      return  null;  }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  0)  {  js.substring(pos,  js.indexOf('n',  pos))  {  return  null;  }	  js.substring(pos,    js.indexOf('n',    pos))    {    return    null;    	non-compiled	[CE]  ';'  expected	395	None	replace
1030	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1031	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1032	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1033	[BUG]  [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos  +  1)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1034	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1035	[BUG]  [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	compilable	  [FE]  ComparisonFailure  	723	3	replace
1036	[BUG]  [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(!isExternFile())  {  if(js.indexOf('n',  pos)  ==  -1)  {  return  null;  }  else  {  return  js.substring(pos,  js.indexOf('n',  pos  +  1)+  1);  }	  if(js.indexOf('n',    pos)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    if(js.indexOf('n',    pos    +    1)    ==    -1)    {    return    null;    }    else    {    return    js.substring(pos,    js.indexOf('n',    pos)+    1);    }    	non-compiled	[CE]  illegal  start  of  expression	723	None	replace
1037	[BUG]  [BUGGY]  if(lineNumber  ==  lineNumber)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  if(lineNumber  ==  lineNumber)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	if(lineNumber  ==  lineNumber)  {  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',    pos)    ==    -1)    {    	non-compiled	[CE]  ')'  expected	646	None	replace
1038	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('t',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('t',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('t',  pos)  ==  -1)  {	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	646	None	replace
1039	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('a',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('a',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('a',  pos)  ==  -1)  {	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	646	None	replace
1040	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('R',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('R',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('R',  pos)  ==  -1)  {	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	646	None	replace
1041	[BUG]  [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('A',  pos)  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      if  (js.indexOf('\n',  pos)  ==  -1)  {          [BUGGY]  return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('A',  pos)  ==  -1)  {  [BUGGY]      }  else  {  return  js.substring(pos,  js.indexOf('\n',  pos));  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	return(js.indexOf('n',  pos)  ==  -1)?  null  :  js.substring(pos,  js.indexOf('r',  pos));  if(js.indexOf('A',  pos)  ==  -1)  {	  return(js.indexOf('n',    pos)    ==    -1)?    null    :    js.substring(pos,    js.indexOf('r',    pos));    if(js.indexOf('r',    pos)    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	646	None	replace
