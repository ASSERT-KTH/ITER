bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return null; [FE] ComparisonFailure [CONTEXT] if (js.indexOf('\n', pos) == -1) {    [BUGGY] return null; [BUGGY] } else { return js.substring(pos, js.indexOf('\n', pos)); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (js.indexOf('\n', pos) == -1) {    [BUGGY] [BUGGY] return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.8660254037844387	242	242	3	add	
3	[BUG] [BUGGY] String js = ""; [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { [BUGGY] String js = ""; [BUGGY] try {    js = getCode(); } catch (IOException e) { return null; } int pos = 0; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	206	206	3	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { [BUGGY] [BUGGY] String js = ""; try {    js = getCode(); } catch (IOException e) { return null; } int pos = 0; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	206	206	3	add	
5	[BUG] [BUGGY] js = getCode(); [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { String js = ""; try {    [BUGGY] js = getCode(); [BUGGY] } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	211	211	3	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { String js = ""; try {    [BUGGY] [BUGGY] js = getCode(); } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	211	211	3	add	
7	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { String js = ""; try {    js = getCode(); } catch (IOException e) { return null; [BUGGY] } [BUGGY]  int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	214	214	3	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String getLine(int lineNumber) { String js = ""; try {    js = getCode(); } catch (IOException e) { return null; [BUGGY] [BUGGY] } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	214	214	3	add	
9	[BUG] [BUGGY] int pos = 0; [FE] ComparisonFailure [CONTEXT] String js = ""; try {    js = getCode(); } catch (IOException e) { return null; } [BUGGY] int pos = 0; [BUGGY] int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	216	216	3	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] String js = ""; try {    js = getCode(); } catch (IOException e) { return null; } [BUGGY] [BUGGY] int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	216	216	3	add	
11	[BUG] [BUGGY] int startLine = 1; [FE] ComparisonFailure [CONTEXT] try {    js = getCode(); } catch (IOException e) { return null; } int pos = 0; [BUGGY] int startLine = 1; [BUGGY]    if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	217	217	3	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] try {    js = getCode(); } catch (IOException e) { return null; } int pos = 0; [BUGGY] [BUGGY] int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	217	217	3	add	
13	[BUG] [BUGGY] if (lineNumber >= lastLine) { [FE] ComparisonFailure [CONTEXT] js = getCode(); } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   [BUGGY] if (lineNumber >= lastLine) { [BUGGY] pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	221	221	3	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] js = getCode(); } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   [BUGGY] [BUGGY] if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	221	221	3	add	
15	[BUG] [BUGGY] pos = lastOffset; [FE] ComparisonFailure [CONTEXT] } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { [BUGGY] pos = lastOffset; [BUGGY] startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	222	222	3	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } catch (IOException e) { return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { [BUGGY] [BUGGY] pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	222	222	3	add	
17	[BUG] [BUGGY] startLine = lastLine; [FE] ComparisonFailure [CONTEXT] return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; [BUGGY] startLine = lastLine; [BUGGY] } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] return null; } int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; [BUGGY] [BUGGY] startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	
19	[BUG] [BUGGY] for (int n = startLine; n < lineNumber; n++) { [FE] ComparisonFailure [CONTEXT] int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } [BUGGY] for (int n = startLine; n < lineNumber; n++) { [BUGGY] int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	226	226	3	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] int pos = 0; int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } [BUGGY] [BUGGY] for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	226	226	3	add	
21	[BUG] [BUGGY] lastOffset = pos; [FE] ComparisonFailure [CONTEXT] for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  [BUGGY] lastOffset = pos; [BUGGY] lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) {    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	235	235	3	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  [BUGGY] [BUGGY] lastOffset = pos; lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) {    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	235	235	3	add	
23	[BUG] [BUGGY] lastLine = lineNumber; [FE] ComparisonFailure [CONTEXT] for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; [BUGGY] lastLine = lineNumber; [BUGGY]  if (js.indexOf('\n', pos) == -1) {    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	236	236	3	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; [BUGGY] [BUGGY] lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) {    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	236	236	3	add	
25	[BUG] [BUGGY] if (js.indexOf('\n', pos) == -1) { [FE] ComparisonFailure [CONTEXT] if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; [BUGGY] if (js.indexOf('\n', pos) == -1) { [BUGGY]    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	238	238	3	replace	
26	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; [BUGGY] [BUGGY] if (js.indexOf('\n', pos) == -1) {    return null; } else { return js.substring(pos, js.indexOf('\n', pos)); } } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	238	238	3	add	
27	[BUG] [BUGGY] int nextpos = js.indexOf('\n', pos); [FE] ComparisonFailure [CONTEXT] int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { [BUGGY] int nextpos = js.indexOf('\n', pos); [BUGGY] if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber;  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	227	227	3	replace	
28	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] int startLine = 1;   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { [BUGGY] [BUGGY] int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber;  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	227	227	3	add	
29	[BUG] [BUGGY] if (nextpos == -1) { [FE] ComparisonFailure [CONTEXT]   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); [BUGGY] if (nextpos == -1) { [BUGGY] return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	228	228	3	replace	
30	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]   if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); [BUGGY] [BUGGY] if (nextpos == -1) { return null; } pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) { [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	228	228	3	add	
31	[BUG] [BUGGY] pos = nextpos + 1; [FE] ComparisonFailure [CONTEXT] if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } [BUGGY] pos = nextpos + 1; [BUGGY] }  lastOffset = pos; lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) {    [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	231	231	3	replace	
32	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (lineNumber >= lastLine) { pos = lastOffset; startLine = lastLine; } for (int n = startLine; n < lineNumber; n++) { int nextpos = js.indexOf('\n', pos); if (nextpos == -1) { return null; } [BUGGY] [BUGGY] pos = nextpos + 1; }  lastOffset = pos; lastLine = lineNumber; if (js.indexOf('\n', pos) == -1) {    [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.5163977794943222	231	231	3	add	
33	[BUG] [BUGGY] return code; [FE] ComparisonFailure [CONTEXT] public String getCode() throws IOException { [BUGGY] return code; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getCode [RETURN_TYPE] String  [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.4472135954999579	140	140	3	replace	
34	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String getCode() throws IOException { [BUGGY] [BUGGY] return code; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getCode [RETURN_TYPE] String  [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.4472135954999579	140	140	3	add	
35	[BUG] [BUGGY] public SourceFile(String fileName) { [FE] ComparisonFailure [CONTEXT] [BUGGY] public SourceFile(String fileName) { [BUGGY] if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	86	86	3	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	86	86	3	add	
37	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private final String fileName; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	59	59	3	replace	
38	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private final String fileName; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	59	59	3	add	
39	[BUG] [BUGGY] private String originalPath = null; [FE] ComparisonFailure [CONTEXT] [BUGGY] private String originalPath = null; [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	66	66	3	replace	
40	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private String originalPath = null; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	66	66	3	add	
41	[BUG] [BUGGY] private int[] lineOffsets = null; [FE] ComparisonFailure [CONTEXT] [BUGGY] private int[] lineOffsets = null; [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	69	69	3	replace	
42	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] [BUGGY] [BUGGY] private int[] lineOffsets = null; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	69	69	3	add	
43	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private int lastLine; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	77	77	3	replace	
44	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private int lastLine; [CLASS] SourceFile Preloaded Generated OnDisk  [VARIABLES] 	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	77	77	3	add	
45	[BUG] [BUGGY] if (fileName == null || fileName.isEmpty()) { [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { [BUGGY] if (fileName == null || fileName.isEmpty()) { [BUGGY] throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	87	87	3	replace	
46	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { [BUGGY] [BUGGY] if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	87	87	3	add	
47	[BUG] [BUGGY] this.fileName = fileName; [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } [BUGGY] this.fileName = fileName; [BUGGY]  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	90	90	3	replace	
48	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } [BUGGY] [BUGGY] this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	90	90	3	add	
49	[BUG] [BUGGY] this.lastOffset = 0; [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  [BUGGY] this.lastOffset = 0; [BUGGY] this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	92	92	3	replace	
50	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  [BUGGY] [BUGGY] this.lastOffset = 0; this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	92	92	3	add	
51	[BUG] [BUGGY] this.lastLine = 1; [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; [BUGGY] this.lastLine = 1; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	93	93	3	replace	
52	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; [BUGGY] [BUGGY] this.lastLine = 1; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	93	93	3	add	
53	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; [BUGGY] } [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	94	94	3	replace	
54	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public SourceFile(String fileName) { if (fileName == null || fileName.isEmpty()) { throw new IllegalArgumentException("a source must have a name"); } this.fileName = fileName;  this.lastOffset = 0; this.lastLine = 1; [BUGGY] [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] <init> [RETURN_TYPE] String)  String fileName [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH lastLine lastOffset Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	94	94	3	add	
55	[BUG] [BUGGY] code = sourceCode; [FE] ComparisonFailure [CONTEXT] private void setCode(String sourceCode) { [BUGGY] code = sourceCode; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setCode [RETURN_TYPE] void  String sourceCode [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	156	156	3	replace	
56	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private void setCode(String sourceCode) { [BUGGY] [BUGGY] code = sourceCode; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setCode [RETURN_TYPE] void  String sourceCode [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	156	156	3	add	
57	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] private void setCode(String sourceCode) { code = sourceCode; [BUGGY] } [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setCode [RETURN_TYPE] void  String sourceCode [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	157	157	3	replace	
58	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private void setCode(String sourceCode) { code = sourceCode; [BUGGY] [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setCode [RETURN_TYPE] void  String sourceCode [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	157	157	3	add	
59	[BUG] [BUGGY] this.originalPath = originalPath; [FE] ComparisonFailure [CONTEXT] public void setOriginalPath(String originalPath) { [BUGGY] this.originalPath = originalPath; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setOriginalPath [RETURN_TYPE] void  String originalPath [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	164	164	3	replace	
60	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public void setOriginalPath(String originalPath) { [BUGGY] [BUGGY] this.originalPath = originalPath; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setOriginalPath [RETURN_TYPE] void  String originalPath [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	164	164	3	add	
61	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public void setOriginalPath(String originalPath) { this.originalPath = originalPath; [BUGGY] } [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setOriginalPath [RETURN_TYPE] void  String originalPath [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	165	165	3	replace	
62	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public void setOriginalPath(String originalPath) { this.originalPath = originalPath; [BUGGY] [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setOriginalPath [RETURN_TYPE] void  String originalPath [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	165	165	3	add	
63	[BUG] [BUGGY] return fileName; [FE] ComparisonFailure [CONTEXT] public String getName() { [BUGGY] return fileName; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getName [RETURN_TYPE] String  [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	183	183	3	replace	
64	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String getName() { [BUGGY] [BUGGY] return fileName; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getName [RETURN_TYPE] String  [VARIABLES] boolean isExternFile int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	183	183	3	add	
65	[BUG] [BUGGY] isExternFile = newVal; [FE] ComparisonFailure [CONTEXT] void setIsExtern(boolean newVal) { [BUGGY] isExternFile = newVal; [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setIsExtern [RETURN_TYPE] void  boolean newVal [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	194	194	3	replace	
66	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] void setIsExtern(boolean newVal) { [BUGGY] [BUGGY] isExternFile = newVal; } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setIsExtern [RETURN_TYPE] void  boolean newVal [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	194	194	3	add	
67	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] void setIsExtern(boolean newVal) { isExternFile = newVal; [BUGGY] } [BUGGY]  [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setIsExtern [RETURN_TYPE] void  boolean newVal [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	195	195	3	replace	
68	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] void setIsExtern(boolean newVal) { isExternFile = newVal; [BUGGY] [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] setIsExtern [RETURN_TYPE] void  boolean newVal [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineno Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	195	195	3	add	
69	[BUG] [BUGGY] return new Preloaded(fileName, code); [FE] ComparisonFailure [CONTEXT] public static SourceFile fromCode(String fileName, String code) { [BUGGY] return new Preloaded(fileName, code); [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] fromCode [RETURN_TYPE] SourceFile  String fileName String code [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH end endLine ii last lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	321	321	3	replace	
70	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static SourceFile fromCode(String fileName, String code) { [BUGGY] [BUGGY] return new Preloaded(fileName, code); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] fromCode [RETURN_TYPE] SourceFile  String fileName String code [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH end endLine ii last lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.42008402520840293	321	321	3	add	
71	[BUG] [BUGGY] return js.substring(pos, js.indexOf('\n', pos)); [FE] ComparisonFailure [CONTEXT] if (js.indexOf('\n', pos) == -1) {    return null; } else { [BUGGY] return js.substring(pos, js.indexOf('\n', pos)); [BUGGY] } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.3333333333333333	244	244	3	replace	
72	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (js.indexOf('\n', pos) == -1) {    return null; } else { [BUGGY] [BUGGY] return js.substring(pos, js.indexOf('\n', pos)); } [CLASS] SourceFile Preloaded Generated OnDisk [METHOD] getLine [RETURN_TYPE] String  int lineNumber [VARIABLES] boolean isExternFile newVal int[] lineOffsets String code fileName inputCharset js originalPath sourceCode IOException e File file long serialVersionUID int SOURCE_EXCERPT_REGION_LENGTH ii lastLine lastOffset lineNumber lineno n nextpos pos startLine Generator generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.3333333333333333	244	244	3	add	
