bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  startLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    -    1;    startLine  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	3	add
2	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  startLine  =  lineNumber  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  startLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    startLine  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	3	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  lineNumber  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    -    1;    lineNumber  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	4	add
4	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  lineNumber  =  lineNumber  -  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  lineNumber  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    lineNumber  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	4	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  pos  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    -    1;    pos  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	4	add
6	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  pos  =  lineNumber  -  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  pos  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    pos  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	4	add
7	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  int  lineNumber  =  lineNumber  -  1;  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  int  lineNumber  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    int  lineNumber  =  lineNumber  -  1;	  	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	20	None	add
8	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  Lineo  lineNumber  =  lineNumber  -  1;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  Lineo  lineNumber  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    Lineo  lineNumber  =  lineNumber  -  1;	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
9	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  int  startLine  =  lineNumber  -  1;  [CE]  variable  startLine  is  already  defined  in  method  getLine(int)  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  int  startLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    int  startLine  =  lineNumber  -  1;	  	non-compiled	[CE]  variable  startLine  is  already  defined  in  method  getLine(int)	20	None	add
10	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  endLine  =  lineNumber  -  1;  [CE]  cannot  find  symbol  endLine  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  endLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    endLine  =  lineNumber  -  1;	  	non-compiled	[CE]  cannot  find  symbol  endLine	20	None	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  lastLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    -    1;    lastLine  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	6	add
12	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  lastLine  =  lineNumber  -  1;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  lastLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    lastLine  =  lineNumber  -  1;	  	compilable	  [FE]  ComparisonFailure  	20	6	add
13	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  fileName  =  lineNumber  -  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  fileName  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    fileName  =  lineNumber  -  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	20	None	add
14	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  StartLine  =  lineNumber  -  1;  [CE]  cannot  find  symbol  StartLine  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  -  1;  StartLine  =  lineNumber  -  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    -    1;    StartLine  =  lineNumber  -  1;	  	non-compiled	[CE]  cannot  find  symbol  StartLine	20	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    startLine  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	3	add
16	[BUG]  [BUGGY]  startLine  -=  lineNumber;  startLine  -=  lineNumber;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    startLine  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	3	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  lineNumber  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    lineNumber  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	6	add
18	[BUG]  [BUGGY]  startLine  -=  lineNumber;  lineNumber  -=  lineNumber;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  lineNumber  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    lineNumber  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	6	add
19	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  pos  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    pos  -=  lineNumber;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	5	add
20	[BUG]  [BUGGY]  startLine  -=  lineNumber;  pos  -=  lineNumber;  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  pos  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    pos  -=  lineNumber;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	5	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  lineNumber  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    js.indexOf('n',  pos);  lineNumber  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	6	add
22	[BUG]  [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  lineNumber  -=  lineNumber;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  lineNumber  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    js.indexOf('n',  pos);  lineNumber  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	6	add
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    js.indexOf('n',  pos);  startLine  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	3	add
24	[BUG]  [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  startLine  -=  lineNumber;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  js.indexOf('n',  pos);  startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    js.indexOf('n',  pos);  startLine  -=  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	5	3	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
26	[BUG]  [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  ==  lastLine)  {  startLine  -=  lineNumber;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    if(lineNumber  ==  lastLine)  {  startLine  -=  lineNumber;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
28	[BUG]  [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  ==  lastLine)  {  startLine  -=  lineNumber;  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  ==  lastLine)  {  startLine  -=  lineNumber;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    if(lineNumber  ==  lastLine)  {  startLine  -=  lineNumber;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
29	[BUG]  [BUGGY]  startLine  -=  lineNumber;  int  startLine  -=  lineNumber;  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  int  startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    int  startLine  -=  lineNumber;	  	non-compiled	[CE]  ';'  expected	5	None	add
30	[BUG]  [BUGGY]  startLine  -=  lineNumber;  int  lineNumber  -=  lineNumber;  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  int  lineNumber  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    int  lineNumber  -=  lineNumber;	  	non-compiled	[CE]  ';'  expected	5	None	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  else  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    -=    lineNumber;    if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  else  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
32	[BUG]  [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  else  {  return  null;  }  [FE]  ComparisonFailure  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber;  if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  else  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    -=    lineNumber;    if(lineNumber  >=  lastLine)  {  startLine  -=  lineNumber;  }  else  {  return  null;  }	  	compilable	  [FE]  ComparisonFailure  	5	3	add
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lastLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	lastLine  =  lineNumber;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
34	[BUG]  [BUGGY]  lastLine  =  lineNumber;  [FE]  ComparisonFailure  [FE]                        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lastLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	lastLine  =  lineNumber;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lastOffset;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
36	[BUG]  [BUGGY]  pos  =  lastOffset;  [FE]  ComparisonFailure  [FE]                          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lastOffset;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  int  endLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	int  endLine  =  lineNumber;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
38	[BUG]  [BUGGY]  int  endLine  =  lineNumber;  [FE]  ComparisonFailure  [FE]                            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  int  endLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	int  endLine  =  lineNumber;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	5	replace
39	[BUG]  [BUGGY]  endLine  =  lineNumber  +  1;  [CE]  cannot  find  symbol  endLine  [FE]                              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  endLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	endLine  =  lineNumber  +  1;	  endLine    =    lineNumber;    	non-compiled	[CE]  cannot  find  symbol  endLine	17	None	replace
40	[BUG]  [BUGGY]  endLine  =  pos;  [CE]  cannot  find  symbol  endLine  [FE]                                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  endLine  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	endLine  =  pos;	  endLine    =    lineNumber;    	non-compiled	[CE]  cannot  find  symbol  endLine	17	None	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastLine;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lastLine;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	4	replace
42	[BUG]  [BUGGY]  pos  =  lastLine;  [FE]  ComparisonFailure  [FE]                                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastLine;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lastLine;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	4	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	lineNumber  =  pos;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	6	replace
44	[BUG]  [BUGGY]  lineNumber  =  pos;  [FE]  ComparisonFailure  [FE]                                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	lineNumber  =  pos;	  endLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	17	6	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH;	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	6	replace
46	[BUG]  [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH;	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	6	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	lineNumber  =  js.indexOf('n',  pos);	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
48	[BUG]  [BUGGY]  lineNumber  =  js.indexOf('n',  pos);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	lineNumber  =  js.indexOf('n',  pos);	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH  +  1;	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	6	replace
50	[BUG]  [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH  +  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  *  SOURCE_EXCERPT_REGION_LENGTH  +  1;	  startLine    =    lineNumber;    	compilable	  [FE]  ComparisonFailure  	2	6	replace
51	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	int  lineNumber  =  js.indexOf('n',  pos);	      	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	19	None	replace
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('n',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
53	[BUG]  [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('n',  pos);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('n',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
55	[BUG]  [BUGGY]  js.indexOf('n',  pos);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  +=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);  lineNumber  +=  lineNumber;	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
57	[BUG]  [BUGGY]  js.indexOf('n',  pos);  lineNumber  +=  lineNumber;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  +=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);  lineNumber  +=  lineNumber;	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('t',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('t',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
59	[BUG]  [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('t',  pos);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('t',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('t',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('r',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('r',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	6	replace
61	[BUG]  [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('r',  pos);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  lineNumber  =  js.indexOf('r',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);  lineNumber  =  js.indexOf('r',  pos);	      	compilable	  [FE]  ComparisonFailure  	19	6	replace
62	[BUG]  [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1);  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  int  lineNumber  =  js.indexOf('n',  pos  +  1);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	int  lineNumber  =  js.indexOf('n',  pos  +  1);	      	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	19	None	replace
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  return  null;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	js.indexOf('n',  pos);  return  null;	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
64	[BUG]  [BUGGY]  js.indexOf('n',  pos);  return  null;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  js.indexOf('n',  pos);  return  null;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	js.indexOf('n',  pos);  return  null;	      	compilable	  [FE]  ComparisonFailure  	19	5	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  startLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber;    startLine  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	3	add
66	[BUG]  [BUGGY]  startLine  =  lineNumber;  startLine  =  lineNumber;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  startLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    startLine  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	3	add
67	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
68	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
69	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber;    lineNumber  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	3	add
71	[BUG]  [BUGGY]  startLine  =  lineNumber;  lineNumber  =  lineNumber;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    lineNumber  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	3	add
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber;    pos  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	4	add
73	[BUG]  [BUGGY]  startLine  =  lineNumber;  pos  =  lineNumber;  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    pos  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	1	4	add
74	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
75	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
76	[BUG]  [BUGGY]  startLine  =  lineNumber;  int  lineNumber  =  lineNumber;  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  int  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    int  lineNumber  =  lineNumber;	  	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	1	None	add
77	[BUG]  [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber;    fileName  =  js.indexOf('n',  pos);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	1	None	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  startLine  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    pos;    startLine  =  pos;	  	compilable	  [FE]  ComparisonFailure  	3	3	add
79	[BUG]  [BUGGY]  startLine  =  pos;  startLine  =  pos;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  startLine  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    startLine  =  pos;	  	compilable	  [FE]  ComparisonFailure  	3	3	add
80	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  >=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  >=  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  >=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
81	[BUG]  [BUGGY]  startLine  =  pos;  fileName  =  js.indexOf('n',  pos);  startLine  =  pos;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  fileName  =  js.indexOf('n',  pos);  startLine  =  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    fileName  =  js.indexOf('n',  pos);  startLine  =  pos;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	3	None	add
82	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
83	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
84	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  lineNumber);  if(lineNumber  >=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  lineNumber);  if(lineNumber  >=  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  lineNumber);  if(lineNumber  >=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
85	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  >=  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber!=  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
86	[BUG]  [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos;  if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    pos;    if(lineNumber  ==  lastLine)  {  startLine  =  pos;  }  else  {  lineNumber  =  js.indexOf('n',  pos);  if(lineNumber  ==  -1)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lastOffset;    startLine  =  lastOffset;	  	compilable	  [FE]  ComparisonFailure  	11	3	add
88	[BUG]  [BUGGY]  startLine  =  lastOffset;  startLine  =  lastOffset;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    startLine  =  lastOffset;	  	compilable	  [FE]  ComparisonFailure  	11	3	add
89	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastOffset;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastOffset;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
90	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber);  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
91	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  startLine  =  lastOffset;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  pos);  startLine  =  lastOffset;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
92	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastOffset;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastOffset;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
93	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
94	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  pos  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lastOffset;    pos  =  lastOffset;	  	compilable	  [FE]  ComparisonFailure  	11	3	add
96	[BUG]  [BUGGY]  startLine  =  lastOffset;  pos  =  lastOffset;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  pos  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    pos  =  lastOffset;	  	compilable	  [FE]  ComparisonFailure  	11	3	add
97	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber)+  1;  startLine  =  lastOffset;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  lineNumber)+  1;  startLine  =  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  lineNumber)+  1;  startLine  =  lastOffset;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
98	[BUG]  [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastOffset;    fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	add
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  pos  +  1;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	4	replace
100	[BUG]  [BUGGY]  startLine  =  pos  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  pos  +  1;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	4	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  js.indexOf('n',  pos);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
102	[BUG]  [BUGGY]  startLine  =  js.indexOf('n',  pos);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('n',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  js.indexOf('n',  pos);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos  +  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  pos  +  lineNumber;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
104	[BUG]  [BUGGY]  startLine  =  pos  +  lineNumber;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  pos  +  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  pos  +  lineNumber;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  pos;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	5	replace
106	[BUG]  [BUGGY]  startLine  -=  pos;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  pos;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  pos;	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	5	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('n',  lineNumber);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  js.indexOf('n',  lineNumber);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
108	[BUG]  [BUGGY]  startLine  =  js.indexOf('n',  lineNumber);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('n',  lineNumber);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  js.indexOf('n',  lineNumber);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	6	replace
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('r',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  js.indexOf('r',  pos);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	5	replace
110	[BUG]  [BUGGY]  startLine  =  js.indexOf('r',  pos);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  js.indexOf('r',  pos);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  js.indexOf('r',  pos);	  startLine    =    pos;    	compilable	  [FE]  ComparisonFailure  	4	5	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lastOffset  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	4	replace
112	[BUG]  [BUGGY]  startLine  =  lastOffset  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastOffset  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lastOffset  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	4	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  lastLine  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	5	replace
114	[BUG]  [BUGGY]  startLine  -=  lastLine  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  lastLine  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	5	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastOffset  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lastOffset  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	5	replace
116	[BUG]  [BUGGY]  pos  =  lastOffset  +  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastOffset  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lastOffset  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	5	replace
117	[BUG]  [BUGGY]  startLine  =  endLine  +  1;  [CE]  cannot  find  symbol  endLine  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  endLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  endLine  +  1;	  startLine    =    lastLine    +    1;    	non-compiled	[CE]  cannot  find  symbol  endLine	23	None	replace
118	[BUG]  [BUGGY]  startLine  =  nextLine  +  1;  [CE]  cannot  find  symbol  nextLine  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  nextLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  nextLine  +  1;	  startLine    =    lastLine    +    1;    	non-compiled	[CE]  cannot  find  symbol  nextLine	23	None	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lastLine  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	4	replace
120	[BUG]  [BUGGY]  pos  =  lastLine  +  1;  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lastLine  +  1;	  startLine    =    lastLine    +    1;    	compilable	  [FE]  ComparisonFailure  	23	4	replace
121	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  -=  lineNumber;	  startLine    -=    lineNumber;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	5	replace
122	[BUG]  [BUGGY]  pos  -=  lineNumber;  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  -=  lineNumber;	  startLine    -=    lineNumber;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	5	replace
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  lineNumber  +  1;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
124	[BUG]  [BUGGY]  startLine  -=  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  lineNumber  +  1;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  -=  startLine;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	lineNumber  -=  startLine;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
126	[BUG]  [BUGGY]  lineNumber  -=  startLine;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lineNumber  -=  startLine;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	lineNumber  -=  startLine;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lastLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	lastLine  -=  lineNumber;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
128	[BUG]  [BUGGY]  lastLine  -=  lineNumber;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  lastLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	lastLine  -=  lineNumber;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
129	[BUG]  [BUGGY]  this.startLine  -=  lineNumber;  [CE]  cannot  find  symbol  startLine  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  this.startLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	this.startLine  -=  lineNumber;	  startLine    -=    lineNumber;    	non-compiled	[CE]  cannot  find  symbol  startLine	6	None	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  lastOffset;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
131	[BUG]  [BUGGY]  startLine  -=  lastOffset;  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  -=  lastOffset;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  lastOffset;	  startLine    -=    lineNumber;    	compilable	  [FE]  ComparisonFailure  	6	5	replace
132	[BUG]  [BUGGY]  endLine  -=  lineNumber;  [CE]  cannot  find  symbol  endLine  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  endLine  -=  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	endLine  -=  lineNumber;	  startLine    -=    lineNumber;    	non-compiled	[CE]  cannot  find  symbol  endLine	6	None	replace
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  startLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    +    1;    startLine  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	3	add
134	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  startLine  =  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  startLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    startLine  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	3	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  pos  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    +    1;    pos  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	4	add
136	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  pos  =  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  pos  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    pos  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	4	add
137	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  int  lineNumber  =  lineNumber  +  1;  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  int  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    int  lineNumber  =  lineNumber  +  1;	  	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	13	None	add
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lineNumber    +    1;    lineNumber  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	5	add
139	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  lineNumber  =  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    lineNumber  =  lineNumber  +  1;	  	compilable	  [FE]  ComparisonFailure  	13	5	add
140	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  pos);  startLine  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
141	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
142	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
143	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
144	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  startLine);  lineNumber  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
145	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lineNumber    +    1;    fileName  =  js.indexOf('n',  lineNumber  +  1);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	13	None	add
146	[BUG]  [BUGGY]      int  lineNumber  =  js.indexOf('n',  pos);  return  null;  [CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]      int  lineNumber  =  js.indexOf('n',  pos);  return  null;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	        int  lineNumber  =  js.indexOf('n',  pos);  return  null;	  	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  getLine(int)	18	None	add
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  2;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  +  2;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
148	[BUG]  [BUGGY]  startLine  =  lineNumber  +  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  2;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  +  2;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lineNumber  +  1;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	4	replace
150	[BUG]  [BUGGY]  pos  =  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lineNumber  +  1;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	4	replace
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  /  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  /  1;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
152	[BUG]  [BUGGY]  startLine  =  lineNumber  /  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  /  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  /  1;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  3;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  +  3;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
154	[BUG]  [BUGGY]  startLine  =  lineNumber  +  3;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lineNumber  +  3;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  +  3;	  startLine    =    lineNumber    +    1;    	compilable	  [FE]  ComparisonFailure  	14	6	replace
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos    =    lineNumber;    pos  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	15	4	add
156	[BUG]  [BUGGY]  pos  =  lineNumber;  pos  =  lineNumber;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    pos  =  lineNumber;	  	compilable	  [FE]  ComparisonFailure  	15	4	add
157	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
158	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  pos  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  pos);  pos  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
159	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
160	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber  +  1);  pos  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]            ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber  +  1);  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber  +  1);  pos  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
161	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  int  pos  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]              ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  int  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);  int  pos  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
162	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
163	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                  ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  pos);  lineNumber  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
164	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos  +  1);  pos  =  lineNumber;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  pos  +  1);  pos  =  lineNumber;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  pos  +  1);  pos  =  lineNumber;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
165	[BUG]  [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  pos  =  lineNumber;  fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos    =    lineNumber;    fileName  =  js.indexOf('n',  lineNumber);  pos  =  lineNumber  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	15	None	add
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastLine  +  1;  startLine  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine    =    lastLine    +    1;    startLine  =  lastLine  +  1;	  	compilable	  [FE]  ComparisonFailure  	22	3	add
167	[BUG]  [BUGGY]  startLine  =  lastLine  +  1;  startLine  =  lastLine  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastLine  +  1;  startLine  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastLine    +    1;    startLine  =  lastLine  +  1;	  	compilable	  [FE]  ComparisonFailure  	22	3	add
168	[BUG]  [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastLine  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]      ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastLine    +    1;    fileName  =  js.indexOf('n',  lineNumber);  startLine  =  lastLine  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	22	None	add
169	[BUG]  [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  pos);  startLine  =  lastLine  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]        ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  pos);  startLine  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastLine    +    1;    fileName  =  js.indexOf('n',  pos);  startLine  =  lastLine  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	22	None	add
170	[BUG]  [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastLine  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          ComparisonFailure    [CONTEXT]    return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;    [BUGGY]  startLine  =  lastLine  +  1;  fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastLine  +  1;  [BUGGY]    }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine    =    lastLine    +    1;    fileName  =  js.indexOf('n',  lineNumber  +  1);  startLine  =  lastLine  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	22	None	add
