bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
2	[BUG]  [BUGGY]  startLine  =  lineNumber;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  pos;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  pos;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
4	[BUG]  [BUGGY]  startLine  =  pos;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  pos;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  pos;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  -=  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
6	[BUG]  [BUGGY]  startLine  -=  lineNumber;  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  -=  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  -=  lastLine;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  -=  lastLine;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
8	[BUG]  [BUGGY]  startLine  -=  lastLine;  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  -=  lastLine;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  -=  lastLine;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  0;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  0;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
10	[BUG]  [BUGGY]  startLine  =  0;  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  0;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  0;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lastOffset;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lastOffset;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
12	[BUG]  [BUGGY]  startLine  =  lastOffset;  [FE]  ComparisonFailure  [FE]              ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lastOffset;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lastOffset;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  +  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  +  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
14	[BUG]  [BUGGY]  startLine  =  lineNumber  +  1;  [FE]  ComparisonFailure  [FE]                ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  +  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  +  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  pos  =  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	pos  =  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
16	[BUG]  [BUGGY]  pos  =  lineNumber;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  pos  =  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	pos  =  lineNumber;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	4	replace
17	[BUG]  [BUGGY]  endLine  =  lineNumber;  [CE]  cannot  find  symbol  endLine  [FE]                    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  endLine  =  lineNumber;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	endLine  =  lineNumber;	startLine  =  lastLine;  	non-compiled	[CE]  cannot  find  symbol  endLine	17	None	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]    [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	  	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
19	[BUG]  [BUGGY]    [FE]  ComparisonFailure  [FE]                      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]    [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	  	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	5	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  -  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  -  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
21	[BUG]  [BUGGY]  startLine  =  lineNumber  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  -  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  -  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lastLine  +  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lastLine  +  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
23	[BUG]  [BUGGY]  startLine  =  lastLine  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lastLine  +  1;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lastLine  +  1;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  -  lastLine;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	add	startLine  =  lineNumber  -  lastLine;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
25	[BUG]  [BUGGY]  startLine  =  lineNumber  -  lastLine;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  return  null;  }  int  pos  =  0;  int  startLine  =  1;    if  (lineNumber  >=  lastLine)  {  pos  =  lastOffset;  [BUGGY]  startLine  =  lineNumber  -  lastLine;  [BUGGY]  }  for  (int  n  =  startLine;  n  <  lineNumber;  n++)  {  int  nextpos  =  js.indexOf('\n',  pos);  if  (nextpos  ==  -1)  {  return  null;  }  pos  =  nextpos  +  1;  }  [CLASS]  SourceFile  Preloaded  Generated  OnDisk  [METHOD]  getLine  [RETURN_TYPE]  String  int  lineNumber  [VARIABLES]  boolean  isExternFile  newVal  int[]  lineOffsets  String  code  fileName  inputCharset  js  originalPath  sourceCode  IOException  e  File  file  long  serialVersionUID  int  SOURCE_EXCERPT_REGION_LENGTH  ii  lastLine  lastOffset  lineNumber  lineno  n  nextpos  pos  startLine  Generator  generator  	projects/Closure56/src/com/google/javascript/jscomp/SourceFile.java	0.7071067811865476	223	223	3	replace	startLine  =  lineNumber  -  lastLine;	startLine  =  lastLine;  	compilable	  [FE]  ComparisonFailure  	17	6	replace
