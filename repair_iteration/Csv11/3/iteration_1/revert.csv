projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(headerRecord==null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord==null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(headerRecord!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369Map.Entry<K,V>entry=this.format.getEntry();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369this.headerRecord=nextRecord.values();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369Map.Entry<K,V>nextRecord=this.format.getNext();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369Map.Entry<K,V>entry=this.format.getEntry(this.headerRecord);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(headerRecord==null||nextRecord!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){this.headerRecord=nextRecord.values();}else{headerRecord=nextRecord.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){this.headerRecord=nextRecord.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){nextRecord=newHashMap<String,Object>();}else{headerRecord=nextRecord.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){this.header=nextRecord.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java369if(nextRecord!=null){this.header=nextRecord.values();}else{this.header=nextRecord.values();}
