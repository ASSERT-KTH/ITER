bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (headerRecord!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if  (headerRecord!=  null)  {  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if  (headerRecord!=  null)  {	  if    (headerRecord    ==    null)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry();  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry();  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	Map.Entry  <  K,  V>  entry  =  this.format.getEntry();	      	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  this.headerRecord  =  nextRecord.values();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.headerRecord  =  nextRecord.values();  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	this.headerRecord  =  nextRecord.values();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Map.Entry  <  K,  V>  nextRecord  =  this.format.getNext();  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Map.Entry  <  K,  V>  nextRecord  =  this.format.getNext();  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	Map.Entry  <  K,  V>  nextRecord  =  this.format.getNext();	      	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry(this.headerRecord);  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry(this.headerRecord);  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	Map.Entry  <  K,  V>  entry  =  this.format.getEntry(this.headerRecord);	      	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  if  (headerRecord  ==  null  ||  nextRecord!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if  (headerRecord  ==  null  ||  nextRecord!=  null)  {  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if  (headerRecord  ==  null  ||  nextRecord!=  null)  {	  if    (headerRecord    ==    null)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
7	[BUG]  [BUGGY]  if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }  else  {  headerRecord  =  nextRecord.values();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }  else  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }  else  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
8	[BUG]  [BUGGY]  if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if(nextRecord!=  null)  {  this.headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
9	[BUG]  [BUGGY]  if(nextRecord!=  null)  {  nextRecord  =  new  HashMap  <  String,Object>();  }  else  {  headerRecord  =  nextRecord.values();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(nextRecord!=  null)  {  nextRecord  =  new  HashMap  <  String,Object>();  }  else  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if(nextRecord!=  null)  {  nextRecord  =  new  HashMap  <  String,Object>();  }  else  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
10	[BUG]  [BUGGY]  if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
11	[BUG]  [BUGGY]  if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }  else  {  this.header  =  nextRecord.values();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }  else  {  this.header  =  nextRecord.values();  }  [BUGGY]    headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	if(nextRecord!=  null)  {  this.header  =  nextRecord.values();  }  else  {  this.header  =  nextRecord.values();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
