bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.toString(i));  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(i,  Integer.toString(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(i,  Integer.toString(i));	  hdrMap.put(i,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	4	None	replace
2	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.getIgnoreEmptyHeaders();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.getIgnoreEmptyHeaders();	  final    boolean    emptyHeader    =    this.header.isEmpty();    	non-compiled	[CE]  :  expected	11	None	replace
3	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()!=  0;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()!=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.trim().length()!=  0;	  final    boolean    emptyHeader    =    this.headerRecord.trim().length()    ==    0;    	non-compiled	[CE]  :  expected	6	None	replace
4	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  ==  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  ==  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.trim().length()  ==  1;	  final    boolean    emptyHeader    =    this.headerRecord.trim().length()    ==    0;    	non-compiled	[CE]  :  expected	6	None	replace
5	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
6	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  true  :  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
7	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
8	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  >  1;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  >  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length()  >  1;	  final    boolean    emptyHeader    =    this.headerRecord.length()    >    0;    	non-compiled	[CE]  :  expected	27	None	replace
9	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  ==  0;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length()  ==  0;	  final    boolean    emptyHeader    =    this.headerRecord.length()    >    0;    	non-compiled	[CE]  :  expected	27	None	replace
10	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()!=  0;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()!=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length()!=  0;	  final    boolean    emptyHeader    =    this.headerRecord.length()    >    0;    	non-compiled	[CE]  :  expected	27	None	replace
11	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()!=  0;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()!=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.trim().length()!=  0;	  final    boolean    emptyHeader    =    this.header.trim().length()    ==    0;    	non-compiled	[CE]  :  expected	9	None	replace
12	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()  ==  1;  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()  ==  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.trim().length()  ==  1;	  final    boolean    emptyHeader    =    this.header.trim().length()    ==    0;    	non-compiled	[CE]  :  expected	9	None	replace
13	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  ==  0;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  ==  0;	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
14	[BUG]  [BUGGY]  static  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  static  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	static  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
15	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  >  0;  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  >  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()  >  0;	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
16	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.headerRecord.isEmpty();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.headerRecord.isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.headerRecord.isEmpty();	  final    boolean    emptyHeader    =    this.headerRecord.isEmpty();    	non-compiled	[CE]  :  expected	5	None	replace
17	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null;	  final    boolean    emptyHeader    =    this.headerRecord.isEmpty();    	non-compiled	[CE]  :  expected	5	None	replace
18	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  ==  null;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  ==  null;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  ==  null;	  final    boolean    emptyHeader    =    this.headerRecord.isEmpty();    	non-compiled	[CE]  :  expected	5	None	replace
19	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  >  1;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  >  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.length()  >  1;	  final    boolean    emptyHeader    =    this.header.length()    >    0;    	non-compiled	[CE]  :  expected	26	None	replace
20	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  ==  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.length()  ==  0;	  final    boolean    emptyHeader    =    this.header.length()    >    0;    	non-compiled	[CE]  :  expected	26	None	replace
21	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.length()!=  0;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.length()!=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.length()!=  0;	  final    boolean    emptyHeader    =    this.header.length()    >    0;    	non-compiled	[CE]  :  expected	26	None	replace
22	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >  1;	  final    boolean    emptyHeader    =    this.headerRecord.trim().length()    >    0;    	non-compiled	[CE]  :  expected	7	None	replace
23	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.valueOf(header));  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(i,  Integer.valueOf(header));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(i,  Integer.valueOf(header));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	3	None	replace
24	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.toString(i));  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.toString(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(header,  Integer.toString(i));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	3	None	replace
25	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.length()  ==  1;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.length()  ==  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.length()  ==  1;	  final    boolean    emptyHeader    =    header.length()    >=    0;    	non-compiled	[CE]  :  expected	19	None	replace
26	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.length()  <  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.length()  <  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.length()  <  1;	  final    boolean    emptyHeader    =    header.length()    >    1;    	non-compiled	[CE]  :  expected	16	None	replace
27	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.length()!=  1;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.length()!=  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.length()!=  1;	  final    boolean    emptyHeader    =    header.length()!=    0;    	non-compiled	[CE]  :  expected	15	None	replace
28	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.header.trim().isEmpty();  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
29	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().length()  ==  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().length()  ==  0;	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
30	[BUG]  [BUGGY]  static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().isEmpty();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
31	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()  ==  2;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()  ==  2;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.trim().length()  ==  2;	  final    boolean    emptyHeader    =    header.trim().length()    ==    1;    	non-compiled	[CE]  :  expected	8	None	replace
32	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()  >  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()  >  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.trim().length()  >  1;	  final    boolean    emptyHeader    =    header.trim().length()    ==    1;    	non-compiled	[CE]  :  expected	8	None	replace
33	[BUG]  [BUGGY]  if(i!=  Integer.MIN_VALUE)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(i!=  Integer.MIN_VALUE)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(i!=  Integer.MIN_VALUE)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(i));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	25	None	replace
34	[BUG]  [BUGGY]  if(i!=  Integer.MIN_VALUE)  {  if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(i!=  Integer.MIN_VALUE)  {  if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(i!=  Integer.MIN_VALUE)  {  if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(i));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	25	None	replace
35	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
36	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(1));  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(1));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(hdrMap!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(1));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
37	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()!=  2;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.trim().length()!=  2;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.trim().length()!=  2;	  final    boolean    emptyHeader    =    header.trim().length()!=    1;    	non-compiled	[CE]  :  expected	12	None	replace
38	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length().equals(this.headerRecord.length());  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length().equals(this.headerRecord.length());  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length().equals(this.headerRecord.length());	  final    boolean    emptyHeader    =    this.headerRecord.length().isEmpty();    	non-compiled	[CE]  :  expected	22	None	replace
39	[BUG]  [BUGGY]  hdrRecord.put(i,  Integer.valueOf(header));  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(i,  Integer.valueOf(header));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(i,  Integer.valueOf(header));	  hdrRecord.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	18	None	replace
40	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()  >=  0;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.trim().length()  >=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.trim().length()  >=  0;	  final    boolean    emptyHeader    =    this.header.trim().length()    >    0;    	non-compiled	[CE]  :  expected	10	None	replace
41	[BUG]  [BUGGY]  hdrRecord.put(i,  Integer.valueOf(0));  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(i,  Integer.valueOf(0));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(i,  Integer.valueOf(0));	  hdrRecord.put(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	17	None	replace
42	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()!=  1;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()!=  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length()!=  1;	  final    boolean    emptyHeader    =    this.headerRecord.length().isEmpty();    	non-compiled	[CE]  :  expected	22	None	replace
43	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.length()  >=  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.length()  >=  1;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.length()  >=  1;	  final    boolean    emptyHeader    =    header.length()    >    1;    	non-compiled	[CE]  :  expected	16	None	replace
44	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.MIN_VALUE);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.MIN_VALUE);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(header,  Integer.MIN_VALUE);	  hdrMap.put(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	1	None	replace
45	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.MAX_VALUE);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.MAX_VALUE);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(header,  Integer.MAX_VALUE);	  hdrMap.put(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	1	None	replace
46	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length().isEmpty();  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
47	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  ==  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  ==  0;	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
48	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >=  0;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.trim().length()  >=  0;	  final    boolean    emptyHeader    =    this.headerRecord.trim().length()    >    0;    	non-compiled	[CE]  :  expected	7	None	replace
49	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(headerRecord  ==  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
50	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
51	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.toHexString(i));  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.toHexString(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(header,  Integer.toHexString(i));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	3	None	replace
52	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);	  final    boolean    emptyHeader    =    this.header.isEmpty();    	non-compiled	[CE]  :  expected	11	None	replace
53	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord!=  null  &&  this.headerRecord.isEmpty();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord!=  null  &&  this.headerRecord.isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord!=  null  &&  this.headerRecord.isEmpty();	  final    boolean    emptyHeader    =    this.headerRecord.isEmpty();    	non-compiled	[CE]  :  expected	5	None	replace
54	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()!=  null);	  final    boolean    emptyHeader    =    this.headerRecord.isEmpty();    	non-compiled	[CE]  :  expected	5	None	replace
55	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(header,  Integer.valueOf(1));	  hdrMap.put(i,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	4	None	replace
56	[BUG]  [BUGGY]  static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	static  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().isEmpty();	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
57	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  ==  0;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  ==  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  ==  0;	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
58	[BUG]  [BUGGY]  hdrRecord.put(header,  Integer.MAX_VALUE);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(header,  Integer.MAX_VALUE);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(header,  Integer.MAX_VALUE);	  hdrRecord.put(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	17	None	replace
59	[BUG]  [BUGGY]  hdrRecord.put(header,  Integer.MIN_VALUE);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(header,  Integer.MIN_VALUE);  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(header,  Integer.MIN_VALUE);	  hdrRecord.put(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	17	None	replace
60	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length().isEmpty();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length().isEmpty();  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length().isEmpty();	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
61	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()!=  0;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()!=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().length()!=  0;	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
62	[BUG]  [BUGGY]  hdrRecord.put(header,  Integer.toString(i));  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(header,  Integer.toString(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(header,  Integer.toString(i));	  hdrRecord.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	18	None	replace
63	[BUG]  [BUGGY]  hdrRecord.put(header,  Integer.toHexString(i));  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrRecord.put(header,  Integer.toHexString(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrRecord.put(header,  Integer.toHexString(i));	  hdrRecord.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	18	None	replace
64	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  >  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  >  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)?  false  :  this.header.trim().length()  >  0;	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)?    false    :    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	21	None	replace
65	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(hdrMap!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(hdrMap!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
66	[BUG]  [BUGGY]  if(this.format!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.format!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(this.format!=  null)  {  if(headerRecord!=  null)  {  hdrMap.put(header,  Integer.valueOf(0));  }	  if(headerRecord!=    null)    {    hdrMap.put(header,    Integer.valueOf(0));    }    else    {    hdrMap.put(header,    Integer.valueOf(0));    }    	non-compiled	[CE]  :  expected	24	None	replace
67	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  >=  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.length()  >=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.length()  >=  0;	  final    boolean    emptyHeader    =    this.headerRecord.length()    >    0;    	non-compiled	[CE]  :  expected	27	None	replace
68	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  >  0;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  >  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.equals(this.headerRecord)&&  this.header.length()  >  0;	  final    boolean    emptyHeader    =    this.header.equals(this.headerRecord)&&    this.header.trim().isEmpty();    	non-compiled	[CE]  :  expected	20	None	replace
69	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  >=  0;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.length()  >=  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.length()  >=  0;	  final    boolean    emptyHeader    =    this.header.length()    >    0;    	non-compiled	[CE]  :  expected	26	None	replace
70	[BUG]  [BUGGY]  hdrMap.put(headerRecord,  Integer.valueOf(i));  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(headerRecord,  Integer.valueOf(i));  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	hdrMap.put(headerRecord,  Integer.valueOf(i));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	3	None	replace
71	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  header.length()  >  2;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  header.length()  >  2;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  header.length()  >  2;	  final    boolean    emptyHeader    =    header.length()    >    1;    	non-compiled	[CE]  :  expected	16	None	replace
72	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();  }  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();  }  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	if(this.headerRecord!=  null)  {  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.trim().isEmpty();  }	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
73	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length()  >  0;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length()  >  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.headerRecord.equals(this.headerRecord)&&  this.headerRecord.length()  >  0;	  final    boolean    emptyHeader    =    this.headerRecord.equals(this.headerRecord)&&    this.headerRecord.trim().isEmpty();    	non-compiled	[CE]  :  expected	23	None	replace
74	[BUG]  [BUGGY]  final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  >  0;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  >  0;  [BUGGY]      if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	final  boolean  emptyHeader  =  this.header.isEmpty()  ||  this.format.getIgnoreEmptyHeaders()  >  0;	  final    boolean    emptyHeader    =    this.header.isEmpty();    	non-compiled	[CE]  :  expected	11	None	replace
