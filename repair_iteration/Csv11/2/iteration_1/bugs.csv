bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.nextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.format.nextRecord();  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.nextRecord();	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
2	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.getHeaderRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.getHeaderRecord();  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.getHeaderRecord();	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
3	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextRecord();  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getNextRecord();	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
4	[BUG]  [BUGGY]    [CE]  >  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	  	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  >  expected	3	None	replace
5	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.getNextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.getNextRecord();  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.getNextRecord();	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
6	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
7	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord;  [BUGGY]  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord;	final  CSVRecord  nextRecord  =  this.nextRecord();  	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
