bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  getNextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  getNextRecord();	  final    CSVRecord    nextRecord    =    this.getNextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
2	[BUG]  [BUGGY]  static  final  CSVRecord  nextRecord  =  this.getNextRecord();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  static  final  CSVRecord  nextRecord  =  this.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	static  final  CSVRecord  nextRecord  =  this.getNextRecord();	  final    CSVRecord    nextRecord    =    this.getNextRecord();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  this.headerRecord  =  nextRecord.values();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.headerRecord  =  nextRecord.values();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	this.headerRecord  =  nextRecord.values();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
4	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  if(this.format.getSkipHeaderRecord()  ==  null)  {  headerRecord  =  nextRecord.values();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  if(this.format.getSkipHeaderRecord()  ==  null)  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord!=  null)  {  if(this.format.getSkipHeaderRecord()  ==  null)  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  this.headerRecord  =  headerRecord.values();  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.headerRecord  =  headerRecord.values();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	this.headerRecord  =  headerRecord.values();	      	non-compiled	[CE]  ')'  expected	4	None	replace
6	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  if(this.format!=  null)  {  headerRecord  =  this.format.getSkipHeaderRecord();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  if(this.format!=  null)  {  headerRecord  =  this.format.getSkipHeaderRecord();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord  ==  null)  {  if(this.format!=  null)  {  headerRecord  =  this.format.getSkipHeaderRecord();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextHeaderRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
8	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
9	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextSkipHeaderRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNextSkipHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getNextSkipHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
10	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getHeaderRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
11	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.format.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
12	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.values();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.values();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord.values();	  final    CSVRecord    nextRecord    =    this.headerRecord;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	7	None	replace
13	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord.clone();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord.clone();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord.clone();	  final    CSVRecord    nextRecord    =    this.headerRecord;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	7	None	replace
14	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord;  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =(CSVRecord)this.headerRecord;	  final    CSVRecord    nextRecord    =    this.headerRecord;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	7	None	replace
15	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord.getRecord();	  final    CSVRecord    nextRecord    =    this.headerRecord.nextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
16	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getNextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord.getNextRecord();	  final    CSVRecord    nextRecord    =    this.headerRecord.nextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
17	[BUG]  [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.nextRecord();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  headerRecord  =  this.headerRecord.nextRecord();	  final    CSVRecord    nextRecord    =    this.headerRecord.nextRecord();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
18	[BUG]  [BUGGY]  static  final  CSVRecord  nextRecord  =  this.getHeaderRecord();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  static  final  CSVRecord  nextRecord  =  this.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	static  final  CSVRecord  nextRecord  =  this.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.getHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.getSkipHeaderRecord();  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.getSkipHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.getSkipHeaderRecord();	  final    CSVRecord    nextRecord    =    this.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  headerRecord  =  nextRecord.values();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord  ==  null)  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
21	[BUG]  [BUGGY]  this.headerHeader  =  nextRecord.values();  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.headerHeader  =  nextRecord.values();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	this.headerHeader  =  nextRecord.values();	      	non-compiled	[CE]  ';'  expected	4	None	replace
22	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  getHeaderRecord();  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	2	None	replace
23	[BUG]  [BUGGY]  static  final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  static  final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	static  final  CSVRecord  nextRecord  =  this.headerRecord.nextRecord();	  final    CSVRecord    nextRecord    =    this.headerRecord.nextRecord();    	non-compiled	[CE]  ';'  expected	6	None	replace
24	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  if(nextRecord!=  null)  {  headerRecord  =  nextRecord.values();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  if(nextRecord!=  null)  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord  ==  null)  {  if(nextRecord!=  null)  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
25	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  if(this.format.getSkipHeaderRecord()!=  null)  {  headerRecord  =  nextRecord.values();  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  if(this.format.getSkipHeaderRecord()!=  null)  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord  ==  null)  {  if(this.format.getSkipHeaderRecord()!=  null)  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
26	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  if(!headerRecord.isEmpty())  {  headerRecord  =  nextRecord.values();  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  if(!headerRecord.isEmpty())  {  headerRecord  =  nextRecord.values();  }  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	if(headerRecord  ==  null)  {  if(!headerRecord.isEmpty())  {  headerRecord  =  nextRecord.values();  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
27	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =(this.headerRecord!=  null)?  this.headerRecord  :  headerRecord;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =(this.headerRecord!=  null)?  this.headerRecord  :  headerRecord;  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =(this.headerRecord!=  null)?  this.headerRecord  :  headerRecord;	  final    CSVRecord    nextRecord    =    this.headerRecord;    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.getNextHeaderRecord();  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  CSVRecord  nextRecord  =  this.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	final  CSVRecord  nextRecord  =  this.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.getNextRecord();    	non-compiled	[CE]  ';'  expected	5	None	replace
