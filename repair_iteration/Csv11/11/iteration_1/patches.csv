bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(i);  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.get(i);  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(i);	  final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	2	None	replace
2	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  i);  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.get(header,  i);  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  i);	  final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	2	None	replace
3	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(0));  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(0));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.valueOf(0));	      	non-compiled	[CE]  :  expected	5	None	replace
4	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(i));  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(i));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.valueOf(i));	      	non-compiled	[CE]  :  expected	5	None	replace
5	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.valueOf(i));  [CE]  :  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(i,  Integer.valueOf(i));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(i,  Integer.valueOf(i));	      	non-compiled	[CE]  :  expected	5	None	replace
6	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.valueOf(0));  [CE]  :  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(i,  Integer.valueOf(0));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(i,  Integer.valueOf(0));	      	non-compiled	[CE]  :  expected	5	None	replace
7	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    String    header    =    hdrMap.get(headerRecord);    	non-compiled	[CE]  :  expected	4	None	replace
8	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	if(headerRecord!=  null)  {  final  String  header  =  hdrMap.get(header);  }	  final    String    header    =    hdrMap.get(headerRecord);    	non-compiled	[CE]  :  expected	4	None	replace
9	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap[i];  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.hdrMap[i];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap[i];	  final    String    header    =    hdrMap[i];    	non-compiled	[CE]  :  expected	3	None	replace
10	[BUG]  [BUGGY]  final  String  header  =  hdrMap.length;  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.length;  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.length;	  final    String    header    =    hdrMap[i];    	non-compiled	[CE]  :  expected	3	None	replace
11	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length[i];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord.length[i];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length[i];	  final    String    header    =    headerRecord.length[i];    	non-compiled	[CE]  :  expected	6	None	replace
12	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length();  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord.length();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length();	  final    String    header    =    headerRecord.length[i];    	non-compiled	[CE]  :  expected	6	None	replace
13	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[0];  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord.length[0];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[0];	  final    String    header    =    headerRecord.length[i];    	non-compiled	[CE]  :  expected	6	None	replace
14	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim();  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord.trim();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim();	  final    String    header    =    headerRecord.trim();    	non-compiled	[CE]  :  expected	9	None	replace
15	[BUG]  [BUGGY]  final  String  header  =  headerRecord.trim().toLowerCase();  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord.trim().toLowerCase();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.trim().toLowerCase();	  final    String    header    =    headerRecord.trim();    	non-compiled	[CE]  :  expected	9	None	replace
16	[BUG]  [BUGGY]  final  String  header  =  header.trim();  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  header.trim();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  header.trim();	  final    String    header    =    headerRecord.trim();    	non-compiled	[CE]  :  expected	9	None	replace
17	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[0];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord[0];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[0];	  final    String    header    =    headerRecord[0];    	non-compiled	[CE]  :  expected	7	None	replace
18	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	8	None	replace
19	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  +  2];  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[i  +  2];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  +  2];	  final    String    header    =    headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	8	None	replace
20	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  -  1];  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[i  -  1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  -  1];	  final    String    header    =    headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	8	None	replace
21	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  +  1];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord[i  +  1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  +  1];	  final    String    header    =    this.headerRecord[i];    	non-compiled	[CE]  :  expected	1	None	replace
22	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length;  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord.length;  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length;	  final    String    header    =    this.headerRecord[i];    	non-compiled	[CE]  :  expected	1	None	replace
23	[BUG]  [BUGGY]  final  String  header  =  hdrMap.length[i];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.length[i];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.length[i];	  final    String    header    =    headerRecord.length[i];    	non-compiled	[CE]  :  expected	6	None	replace
24	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  +  1];  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord.length[i  +  1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  +  1];	  final    String    header    =    headerRecord.length[i];    	non-compiled	[CE]  :  expected	6	None	replace
25	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  *  1];  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[i  *  1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  *  1];	  final    String    header    =    headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	8	None	replace
26	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  hdrMap.containsKey(header);	      	non-compiled	[CE]  :  expected	5	None	replace
27	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.valueOf(1));	      	non-compiled	[CE]  :  expected	5	None	replace
28	[BUG]  [BUGGY]  final  String  header  =  headerRecord[1];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[1];	  final    String    header    =    headerRecord[0];    	non-compiled	[CE]  :  expected	7	None	replace
29	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(0));  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(0));  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  Integer.valueOf(0));	  final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	2	None	replace
30	[BUG]  [BUGGY]  final  String  header  =  hdrRecord.trim();  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrRecord.trim();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrRecord.trim();	  final    String    header    =    headerRecord.trim();    	non-compiled	[CE]  :  expected	9	None	replace
31	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  -  1];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord[i  -  1];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  -  1];	  final    String    header    =    this.headerRecord[i];    	non-compiled	[CE]  :  expected	1	None	replace
32	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[i];  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[i];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord  *  this.headerRecord[i];	  final    String    header    =    this.headerRecord[i];    	non-compiled	[CE]  :  expected	1	None	replace
33	[BUG]  [BUGGY]  static  final  String  header  =  hdrMap.get(header);  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  static  final  String  header  =  hdrMap.get(header);  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  hdrMap.get(header);	  final    String    header    =    hdrMap.get(headerRecord);    	non-compiled	[CE]  :  expected	4	None	replace
34	[BUG]  [BUGGY]  final  String  header  =  hdrMap.keySet()[i];  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  hdrMap.keySet()[i];  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.keySet()[i];	  final    String    header    =    hdrMap[i];    	non-compiled	[CE]  :  expected	3	None	replace
35	[BUG]  [BUGGY]  final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    headerRecord[0];    	non-compiled	[CE]  :  expected	7	None	replace
36	[BUG]  [BUGGY]  final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders());  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders());  [BUGGY]    final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[0]  + "  in "  +  this.format.getIgnoreEmptyHeaders());	  final    String    header    =    headerRecord[0];    	non-compiled	[CE]  :  expected	7	None	replace
