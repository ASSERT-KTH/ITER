bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i];  [CE]  :  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  this.headerRecord[i];  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i];	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
2	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header);  [CE]  :  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  hdrMap.get(header);  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header);	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
3	[BUG]  [BUGGY]  final  String  header  =  hdrMap[i];  [CE]  :  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  hdrMap[i];  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap[i];	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
4	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(headerRecord);  [CE]  :  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  hdrMap.get(headerRecord);  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(headerRecord);	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
5	[BUG]  [BUGGY]    [CE]  :  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	  	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
6	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i];  [CE]  :  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  headerRecord.length[i];  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i];	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
7	[BUG]  [BUGGY]  final  String  header  =  headerRecord[0];  [CE]  :  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  headerRecord[0];  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[0];	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
8	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  +  1];  [CE]  :  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  headerRecord[i  +  1];  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  +  1];	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
9	[BUG]  [BUGGY]  final  String  header  =  headerRecord.trim();  [CE]  :  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  final  String  header  =  headerRecord.trim();  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  name:  \ " "  +  header  +   "\ "  in   "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.trim();	final  String  header  =  headerRecord[i];  	non-compiled	[CE]  :  expected	21	None	replace
