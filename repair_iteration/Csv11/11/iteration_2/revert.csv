projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(headerRecord);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.valueOf(0));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.valueOf(i));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(i,Integer.valueOf(i));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(i,Integer.valueOf(0));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382if(headerRecord!=null){finalStringheader=hdrMap.get(header);}else{thrownewIllegalArgumentException("");}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382if(headerRecord!=null){finalStringheader=hdrMap.get(header);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.length;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.trim().toLowerCase();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=header.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i+2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.length[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i*1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=hdrMap.containsKey(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.valueOf(1));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,Integer.valueOf(0));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrRecord.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord*this.headerRecord[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.keySet()[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[0]+"in"+this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[0]+"in"+this.format.getIgnoreEmptyHeaders());
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalObjectheaderRecord=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrRecord.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrRecord.trim().toLowerCase();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=hdrMap.containsKey(i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=hdrMap.containsKey(headerRecord);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=this.hdrMap.containsKey(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.keySet()[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.keySet()[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(i,Integer.valueOf(0));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(i+1);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap.get(i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.size();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.keySet().length;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i+2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i*1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.toString(i));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.toHexString(i));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.MIN_VALUE);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382hdrMap.put(header,Integer.MAX_VALUE);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.toString();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.substring(0,this.headerRecord.length);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length-1;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i*1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i-2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap[i].trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getIgnoreEmptyHeaders()+"in"+headerRecord[0]);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getIgnoreEmptyHeaders()+"in"+headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.header.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=header.trim().toLowerCase();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim().toLowerCase();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.trim().toLowerCase(Locale.ENGLISH);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord*this.headerRecord[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord/this.headerRecord[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord*this.headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i*2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i*4];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i*3];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,Integer.MIN_VALUE);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,Integer.MAX_VALUE);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[0].trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[0]+1;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getIgnoreEmptyHeaders()[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord()+"in"+headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i+2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382if(header!=null){finalStringheader=hdrMap.get(header);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalObjectheader=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=hdrMap.get(i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalstaticStringheader=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=hdrMap.get(header,i);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i-1]+"in";
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i-2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i/2];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,Integer.valueOf(i));
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length+1;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.length[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i+1]&Integer.MAX_VALUE;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i+1]&Integer.MIN_VALUE;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim():"";
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim()+""";
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheaderRecord=hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=hdrMap.get(headerRecord);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i+3];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap.length[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap.length;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleanhasHeader=hdrMap.containsKey(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i-1]+"n";
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord()+"in"+this.format.getIgnoreEmptyHeaders());
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrRecord[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.trim().toLowerCase();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382if(header!=null){finalbooleancontainsHeader=hdrMap.containsKey(header);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalbooleancontainsHeader=hdrMap.containsKey(header)||hdrRecord.containsKey(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.length[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim()+1;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.getHeader();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i-1]+"n";
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord()+"in"+this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getIgnoreEmptyHeaders()+"in"+headerRecord;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord*this.header[i];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=headerRecord[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.substring(0,headerRecord.length()-1);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord(headerRecord)+"in"+this.format.getIgnoreEmptyHeaders());
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382if(hdrMap!=null){finalbooleancontainsHeader=hdrMap.containsKey(header);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=header.trim();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim()+"in"+this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.headerRecord.trim()+"-"+this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord.length;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=headerRecord[i+1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=headerRecord[0];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=hdrMap.get(header,Integer.valueOf(i).toString());
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=this.headerRecord[i-1];
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=headerRecord[i*1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382staticfinalStringheader=headerRecord[i+1]&Integer.valueOf(0);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord(headerRecord)+"in"+this.format.getIgnoreEmptyHeaders();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.format.getHeaderRecord()+"in"+this.headerRecord;
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap.get(header);
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java382finalStringheader=this.hdrMap.keySet()[i];
