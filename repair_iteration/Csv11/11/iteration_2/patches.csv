bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.get(header);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  containsHeader  =  hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  hdrMap.get(header);	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  :  expected	7	None	replace
2	[BUG]  [BUGGY]  final  Object  headerRecord  =  hdrMap.get(header);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  Object  headerRecord  =  hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  Object  headerRecord  =  hdrMap.get(header);	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  :  expected	7	None	replace
3	[BUG]  [BUGGY]  final  String  header  =  this.hdrRecord.trim();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrRecord.trim();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrRecord.trim();	  final    String    header    =    hdrRecord.trim();    	non-compiled	[CE]  :  expected	30	None	replace
4	[BUG]  [BUGGY]  final  String  header  =  hdrRecord.trim().toLowerCase();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrRecord.trim().toLowerCase();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrRecord.trim().toLowerCase();	  final    String    header    =    hdrRecord.trim();    	non-compiled	[CE]  :  expected	30	None	replace
5	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(i);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(i);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  hdrMap.containsKey(i);	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
6	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(headerRecord);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(headerRecord);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  hdrMap.containsKey(headerRecord);	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
7	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(header);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  this.hdrMap.containsKey(header);	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
8	[BUG]  [BUGGY]  final  String  header  =  hdrMap.keySet()  [0];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.keySet()  [0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.keySet()  [0];	  final    String    header    =    hdrMap.keySet()[i];    	non-compiled	[CE]  :  expected	34	None	replace
9	[BUG]  [BUGGY]  final  String  header  =  hdrMap.keySet()  [i  +  1];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.keySet()  [i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.keySet()  [i  +  1];	  final    String    header    =    hdrMap.keySet()[i];    	non-compiled	[CE]  :  expected	34	None	replace
10	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(i,  Integer.valueOf(0));  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(i,  Integer.valueOf(0));  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(i,  Integer.valueOf(0));	  final    String    header    =    hdrMap.get(i);    	non-compiled	[CE]  :  expected	1	None	replace
11	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(i  +  1);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(i  +  1);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(i  +  1);	  final    String    header    =    hdrMap.get(i);    	non-compiled	[CE]  :  expected	1	None	replace
12	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap.get(i);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap.get(i);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap.get(i);	  final    String    header    =    hdrMap.length;    	non-compiled	[CE]  :  expected	10	None	replace
13	[BUG]  [BUGGY]  final  String  header  =  hdrMap.size();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.size();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.size();	  final    String    header    =    hdrMap.length;    	non-compiled	[CE]  :  expected	10	None	replace
14	[BUG]  [BUGGY]  final  String  header  =  hdrMap.keySet().length;  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.keySet().length;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.keySet().length;	  final    String    header    =    hdrMap.length;    	non-compiled	[CE]  :  expected	10	None	replace
15	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[1];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[1];	  final    String    header    =    headerRecord.length[0];    	non-compiled	[CE]  :  expected	13	None	replace
16	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length[0];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.length[0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length[0];	  final    String    header    =    headerRecord.length[0];    	non-compiled	[CE]  :  expected	13	None	replace
17	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  +  2];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[i  +  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  +  2];	  final    String    header    =    headerRecord.length[i    +    1];    	non-compiled	[CE]  :  expected	24	None	replace
18	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  -  1];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[i  -  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  -  1];	  final    String    header    =    headerRecord.length[i    +    1];    	non-compiled	[CE]  :  expected	24	None	replace
19	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  *  1];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[i  *  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  *  1];	  final    String    header    =    headerRecord.length[i    +    1];    	non-compiled	[CE]  :  expected	24	None	replace
20	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.toString(i));  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.toString(i));  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.toString(i));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	4	None	replace
21	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.toHexString(i));  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.toHexString(i));  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.toHexString(i));	  hdrMap.put(header,    Integer.valueOf(i));    	non-compiled	[CE]  :  expected	4	None	replace
22	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.MIN_VALUE);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.MIN_VALUE);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.MIN_VALUE);	  hdrMap.put(header,    Integer.valueOf(1));    	non-compiled	[CE]  :  expected	27	None	replace
23	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.MAX_VALUE);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  hdrMap.put(header,  Integer.MAX_VALUE);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	hdrMap.put(header,  Integer.MAX_VALUE);	  hdrMap.put(header,    Integer.valueOf(1));    	non-compiled	[CE]  :  expected	27	None	replace
24	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.toString();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.toString();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.toString();	  final    String    header    =    this.headerRecord.length;    	non-compiled	[CE]  :  expected	22	None	replace
25	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.substring(0,  this.headerRecord.length);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.substring(0,  this.headerRecord.length);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.substring(0,  this.headerRecord.length);	  final    String    header    =    this.headerRecord.length;    	non-compiled	[CE]  :  expected	22	None	replace
26	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length  -  1;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.length  -  1;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length  -  1;	  final    String    header    =    this.headerRecord.length;    	non-compiled	[CE]  :  expected	22	None	replace
27	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  *  1];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[i  *  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  *  1];	  final    String    header    =    this.headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	31	None	replace
28	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  -  2];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[i  -  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  -  2];	  final    String    header    =    this.headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	31	None	replace
29	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap[i].trim();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap[i].trim();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap[i].trim();	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
30	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap[i  +  1];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap[i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap[i  +  1];	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
31	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap[i  -  1];  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap[i  -  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap[i  -  1];	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
32	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[1];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[1];	  final    String    header    =    headerRecord[1];    	non-compiled	[CE]  :  expected	28	None	replace
33	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.length();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length();	  final    String    header    =    headerRecord.length();    	non-compiled	[CE]  :  expected	12	None	replace
34	[BUG]  [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders());    	non-compiled	[CE]  :  expected	36	None	replace
35	[BUG]  [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0]);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0]);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0]);	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders());    	non-compiled	[CE]  :  expected	36	None	replace
36	[BUG]  [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord[0];	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders());    	non-compiled	[CE]  :  expected	36	None	replace
37	[BUG]  [BUGGY]  final  String  header  =  this.header.trim();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.header.trim();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.header.trim();	  final    String    header    =    header.trim();    	non-compiled	[CE]  :  expected	16	None	replace
38	[BUG]  [BUGGY]  final  String  header  =  header.trim().toLowerCase();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  header.trim().toLowerCase();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  header.trim().toLowerCase();	  final    String    header    =    header.trim();    	non-compiled	[CE]  :  expected	16	None	replace
39	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim().toLowerCase();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim().toLowerCase();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim().toLowerCase();	  final    String    header    =    headerRecord.trim().toLowerCase();    	non-compiled	[CE]  :  expected	15	None	replace
40	[BUG]  [BUGGY]  final  String  header  =  headerRecord.trim().toLowerCase(Locale.ENGLISH);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.trim().toLowerCase(Locale.ENGLISH);	  final    String    header    =    headerRecord.trim().toLowerCase();    	non-compiled	[CE]  :  expected	15	None	replace
41	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[i  +  1];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord  *  this.headerRecord[i  +  1];	  final    String    header    =    this.headerRecord    *    this.headerRecord[i];    	non-compiled	[CE]  :  expected	32	None	replace
42	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord  /  this.headerRecord[i];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord  /  this.headerRecord[i];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord  /  this.headerRecord[i];	  final    String    header    =    this.headerRecord    *    this.headerRecord[i];    	non-compiled	[CE]  :  expected	32	None	replace
43	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[0];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord  *  this.headerRecord[0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord  *  this.headerRecord[0];	  final    String    header    =    this.headerRecord    *    this.headerRecord[i];    	non-compiled	[CE]  :  expected	32	None	replace
44	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  *  2];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  *  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  *  2];	  final    String    header    =    headerRecord[i    *    1];    	non-compiled	[CE]  :  expected	25	None	replace
45	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  *  4];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  *  4];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  *  4];	  final    String    header    =    headerRecord[i    *    1];    	non-compiled	[CE]  :  expected	25	None	replace
46	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  *  3];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  *  3];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  *  3];	  final    String    header    =    headerRecord[i    *    1];    	non-compiled	[CE]  :  expected	25	None	replace
47	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.MIN_VALUE);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.MIN_VALUE);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  Integer.MIN_VALUE);	  final    String    header    =    hdrMap.get(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	29	None	replace
48	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.MAX_VALUE);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.MAX_VALUE);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  Integer.MAX_VALUE);	  final    String    header    =    hdrMap.get(header,    Integer.valueOf(0));    	non-compiled	[CE]  :  expected	29	None	replace
49	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[0].trim();  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[0].trim();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[0].trim();	  final    String    header    =    this.headerRecord[0];    	non-compiled	[CE]  :  expected	17	None	replace
50	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[0]  +  1;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[0]  +  1;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[0]  +  1;	  final    String    header    =    this.headerRecord[0];    	non-compiled	[CE]  :  expected	17	None	replace
51	[BUG]  [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  [0];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  [0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getIgnoreEmptyHeaders()  [0];	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
52	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  headerRecord[0];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  headerRecord[0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  headerRecord[0];	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
53	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  +  2];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[i  +  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  +  2];	  final    String    header    =    this.headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	21	None	replace
54	[BUG]  [BUGGY]  if(header!=  null)  {  final  String  header  =  hdrMap.get(header);  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(header!=  null)  {  final  String  header  =  hdrMap.get(header);  }  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	if(header!=  null)  {  final  String  header  =  hdrMap.get(header);  }	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    	non-compiled	[CE]  :  expected	8	None	replace
55	[BUG]  [BUGGY]  final  Object  header  =  hdrMap.get(header);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  Object  header  =  hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  Object  header  =  hdrMap.get(header);	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    	non-compiled	[CE]  :  expected	8	None	replace
56	[BUG]  [BUGGY]  static  final  String  header  =  hdrMap.get(i);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  hdrMap.get(i);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  hdrMap.get(i);	  static    final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	33	None	replace
57	[BUG]  [BUGGY]  final  static  String  header  =  hdrMap.get(header);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  static  String  header  =  hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  static  String  header  =  hdrMap.get(header);	  static    final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	33	None	replace
58	[BUG]  [BUGGY]  static  final  String  header  =  hdrMap.get(header,  i);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  hdrMap.get(header,  i);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  hdrMap.get(header,  i);	  static    final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	33	None	replace
59	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  -  1]  + "  in ";  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  -  1]  + "  in ";  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  -  1]  + "  in ";	  final    String    header    =    headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	20	None	replace
60	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  -  2];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  -  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  -  2];	  final    String    header    =    headerRecord[i    +    2];    	non-compiled	[CE]  :  expected	19	None	replace
61	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  /  2];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  /  2];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  /  2];	  final    String    header    =    headerRecord[i    +    2];    	non-compiled	[CE]  :  expected	19	None	replace
62	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(i));  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(i));  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  Integer.valueOf(i));	  final    String    header    =    hdrMap.get(header,    i);    	non-compiled	[CE]  :  expected	2	None	replace
63	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length  +  1;  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.length  +  1;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length  +  1;	  final    String    header    =    this.headerRecord.length[i];    	non-compiled	[CE]  :  expected	11	None	replace
64	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.length[i  +  1];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.length[i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.length[i  +  1];	  final    String    header    =    this.headerRecord.length[i];    	non-compiled	[CE]  :  expected	11	None	replace
65	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.MAX_VALUE;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.MAX_VALUE;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  +  1]  &  Integer.MAX_VALUE;	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
66	[BUG]  [BUGGY]  final  String  header  =  hdrMap[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap[i  +  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
67	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.MIN_VALUE;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  +  1]  &  Integer.MIN_VALUE;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  +  1]  &  Integer.MIN_VALUE;	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
68	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim()  : " ";  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim()  : " ";  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim()  : " ";	  final    String    header    =    this.headerRecord.trim();    	non-compiled	[CE]  :  expected	14	None	replace
69	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim()  + " " ";  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim()  + " " ";  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim()  + " " ";	  final    String    header    =    this.headerRecord.trim();    	non-compiled	[CE]  :  expected	14	None	replace
70	[BUG]  [BUGGY]  final  String  headerRecord  =  hdrMap.get(header);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  headerRecord  =  hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  headerRecord  =  hdrMap.get(header);	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    	non-compiled	[CE]  :  expected	8	None	replace
71	[BUG]  [BUGGY]  static  final  String  header  =  hdrMap.get(headerRecord);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  hdrMap.get(headerRecord);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  hdrMap.get(headerRecord);	  static    final    String    header    =    hdrMap.get(header);    	non-compiled	[CE]  :  expected	33	None	replace
72	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  +  3];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[i  +  3];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  +  3];	  final    String    header    =    headerRecord.length[i    +    1];    	non-compiled	[CE]  :  expected	24	None	replace
73	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap.length[i];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap.length[i];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap.length[i];	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
74	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap.length;  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap.length;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap.length;	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
75	[BUG]  [BUGGY]  final  boolean  hasHeader  =  hdrMap.containsKey(header);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  hasHeader  =  hdrMap.containsKey(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  hasHeader  =  hdrMap.containsKey(header);	  if(headerRecord!=    null)    {    final    String    header    =    hdrMap.get(header);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  :  expected	7	None	replace
76	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  -  1]  + "n ";  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[i  -  1]  + "n ";  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  -  1]  + "n ";	  final    String    header    =    this.headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	31	None	replace
77	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders());  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders());  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders());	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders());    	non-compiled	[CE]  :  expected	36	None	replace
78	[BUG]  [BUGGY]  final  String  header  =  hdrRecord[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrRecord[i  +  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrRecord[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
79	[BUG]  [BUGGY]  final  String  header  =  hdrMap.trim().toLowerCase();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.trim().toLowerCase();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.trim().toLowerCase();	  final    String    header    =    headerRecord.trim().toLowerCase();    	non-compiled	[CE]  :  expected	15	None	replace
80	[BUG]  [BUGGY]  if(header!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(header!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	if(header!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
81	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header)||  hdrRecord.containsKey(header);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(header)||  hdrRecord.containsKey(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  boolean  containsHeader  =  hdrMap.containsKey(header)||  hdrRecord.containsKey(header);	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
82	[BUG]  [BUGGY]  final  String  header  =  hdrMap.length[i  +  1];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.length[i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.length[i  +  1];	  final    String    header    =    hdrMap.length[i];    	non-compiled	[CE]  :  expected	23	None	replace
83	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim()  +  1;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim()  +  1;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim()  +  1;	  final    String    header    =    this.headerRecord.trim();    	non-compiled	[CE]  :  expected	14	None	replace
84	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.getHeader();  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.getHeader();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.getHeader();	  final    String    header    =    this.headerRecord.length;    	non-compiled	[CE]  :  expected	22	None	replace
85	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  -  1]  + "n ";  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  -  1]  + "n ";  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  -  1]  + "n ";	  final    String    header    =    headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	20	None	replace
86	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
87	[BUG]  [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getIgnoreEmptyHeaders()  + "  in "  +  headerRecord;	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
88	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord[i  +  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    this.headerRecord[i    +    1];    	non-compiled	[CE]  :  expected	21	None	replace
89	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord  *  this.header[i];  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord  *  this.header[i];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord  *  this.header[i];	  final    String    header    =    this.headerRecord    *    this.headerRecord[i];    	non-compiled	[CE]  :  expected	32	None	replace
90	[BUG]  [BUGGY]  static  final  String  header  =  headerRecord[i  -  1];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  headerRecord[i  -  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  headerRecord[i  -  1];	  final    String    header    =    headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	20	None	replace
91	[BUG]  [BUGGY]  final  String  header  =  headerRecord.substring(0,  headerRecord.length()  -  1);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.substring(0,  headerRecord.length()  -  1);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.substring(0,  headerRecord.length()  -  1);	  final    String    header    =    headerRecord.length();    	non-compiled	[CE]  :  expected	12	None	replace
92	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length[i  +  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord.length[i    +    1];    	non-compiled	[CE]  :  expected	24	None	replace
93	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders());  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders());  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders());	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders());    	non-compiled	[CE]  :  expected	36	None	replace
94	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(header);  }	  final    boolean    containsHeader    =    hdrMap.containsKey(header);    	non-compiled	[CE]  :  expected	26	None	replace
95	[BUG]  [BUGGY]  static  final  String  header  =  header.trim();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  header.trim();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  header.trim();	  final    String    header    =    header.trim();    	non-compiled	[CE]  :  expected	16	None	replace
96	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim()  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim()  + "  in "  +  this.format.getIgnoreEmptyHeaders();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim()  + "  in "  +  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    this.headerRecord.trim();    	non-compiled	[CE]  :  expected	14	None	replace
97	[BUG]  [BUGGY]  final  String  header  =  this.headerRecord.trim()  + "  - "  +  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.headerRecord.trim()  + "  - "  +  this.format.getIgnoreEmptyHeaders();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.headerRecord.trim()  + "  - "  +  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    this.headerRecord.trim();    	non-compiled	[CE]  :  expected	14	None	replace
98	[BUG]  [BUGGY]  final  String  header  =  headerRecord.length;  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord.length;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord.length;	  final    String    header    =    headerRecord.length[0];    	non-compiled	[CE]  :  expected	13	None	replace
99	[BUG]  [BUGGY]  static  final  String  header  =  headerRecord[i  +  1];  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  headerRecord[i  +  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  headerRecord[i  +  1];	  final    String    header    =    headerRecord[i    +    2];    	non-compiled	[CE]  :  expected	19	None	replace
100	[BUG]  [BUGGY]  static  final  String  header  =  headerRecord[0];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  headerRecord[0];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  headerRecord[0];	  final    String    header    =    headerRecord[1];    	non-compiled	[CE]  :  expected	28	None	replace
101	[BUG]  [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(i).toString());  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  hdrMap.get(header,  Integer.valueOf(i).toString());  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  hdrMap.get(header,  Integer.valueOf(i).toString());	  final    String    header    =    hdrMap.get(header,    i);    	non-compiled	[CE]  :  expected	2	None	replace
102	[BUG]  [BUGGY]  static  final  String  header  =  this.headerRecord[i  -  1];  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  this.headerRecord[i  -  1];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  this.headerRecord[i  -  1];	  final    String    header    =    this.headerRecord[i    -    1];    	non-compiled	[CE]  :  expected	31	None	replace
103	[BUG]  [BUGGY]  final  String  header  =  headerRecord[i  *  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  headerRecord[i  *  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  headerRecord[i  *  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
104	[BUG]  [BUGGY]  static  final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	static  final  String  header  =  headerRecord[i  +  1]  &  Integer.valueOf(0);	  final    String    header    =    headerRecord[i    +    1]    &    Integer.valueOf(0);    	non-compiled	[CE]  :  expected	18	None	replace
105	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders();  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders();  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord(headerRecord)+ "  in "  +  this.format.getIgnoreEmptyHeaders();	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
106	[BUG]  [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.headerRecord;  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.headerRecord;  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.format.getHeaderRecord()  + "  in "  +  this.headerRecord;	  final    String    header    =    headerRecord[0]    +   "    in   "    +    this.format.getIgnoreEmptyHeaders();    	non-compiled	[CE]  :  expected	35	None	replace
107	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap.get(header);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap.get(header);  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap.get(header);	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
108	[BUG]  [BUGGY]  final  String  header  =  this.hdrMap.keySet()[i];  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  header  =  this.hdrMap.keySet()[i];  [BUGGY]      final  boolean  containsHeader  =  hdrMap.containsKey(header);  final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  name:  \     "     "  +  header  +       "\     "  in       "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	final  String  header  =  this.hdrMap.keySet()[i];	  final    String    header    =    this.hdrMap[i];    	non-compiled	[CE]  :  expected	9	None	replace
