bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(i);  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(i);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.hdrMap.containsKey(i);	  final    boolean    containsHeader    =    hdrMap.containsKey(i);    	non-compiled	[CE]  :  expected	1	None	replace
2	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(this.header);  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  hdrMap.containsKey(this.header);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  hdrMap.containsKey(this.header);	  final    boolean    containsHeader    =    hdrMap.containsKey(i);    	non-compiled	[CE]  :  expected	1	None	replace
3	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(0));  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(0));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(header,  Integer.valueOf(0));	      	non-compiled	[CE]  :  expected	4	None	replace
4	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.valueOf(0));  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(i,  Integer.valueOf(0));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(i,  Integer.valueOf(0));	      	non-compiled	[CE]  :  expected	4	None	replace
5	[BUG]  [BUGGY]  hdrMap.put(i,  Integer.valueOf(i));  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(i,  Integer.valueOf(i));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(i,  Integer.valueOf(i));	      	non-compiled	[CE]  :  expected	4	None	replace
6	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(i));  [CE]  :  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(i));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(header,  Integer.valueOf(i));	      	non-compiled	[CE]  :  expected	4	None	replace
7	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(headerRecord);  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.hdrMap.containsKey(headerRecord);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.hdrMap.containsKey(headerRecord);	  final    boolean    containsHeader    =    hdrMap.containsKey(headerRecord);    	non-compiled	[CE]  :  expected	2	None	replace
8	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.trim().isEmpty();  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.trim().isEmpty();  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.trim().isEmpty();	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
9	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.containsKey(hdrMap);  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.containsKey(hdrMap);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.containsKey(hdrMap);	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
10	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.trim().equals(hdrMap.get(i));  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.trim().equals(hdrMap.get(i));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.trim().equals(hdrMap.get(i));	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
11	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(i));  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(i));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(i));	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
12	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(header));  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(header));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.equals(hdrMap.get(header));	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
13	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(header,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(header,  Integer.valueOf(0));  }  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(header,  Integer.valueOf(0));  }	      	non-compiled	[CE]  :  expected	4	None	replace
14	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(headerRecord,  Integer.valueOf(0));  }  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(headerRecord,  Integer.valueOf(0));  }  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	if(header.length()  ==  0)  {  hdrMap.put(header,  Integer.valueOf(0));  }  else  {  hdrMap.put(headerRecord,  Integer.valueOf(0));  }	      	non-compiled	[CE]  :  expected	4	None	replace
15	[BUG]  [BUGGY]  final  boolean  containsHeader  =  hdrMap.contains(header);  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  hdrMap.contains(header);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  hdrMap.contains(header);	  final    boolean    containsHeader    =    hdrMap.containsKey(i);    	non-compiled	[CE]  :  expected	1	None	replace
16	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  this.headerRecord.containsKey(header);  }  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  this.headerRecord.containsKey(header);  }  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	if(hdrMap!=  null)  {  final  boolean  containsHeader  =  this.headerRecord.containsKey(header);  }	  final    boolean    containsHeader    =    hdrMap.containsKey(this.headerRecord);    	non-compiled	[CE]  :  expected	3	None	replace
17	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(1));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(header,  Integer.valueOf(1));	      	non-compiled	[CE]  :  expected	4	None	replace
18	[BUG]  [BUGGY]  hdrMap.put(header,  Integer.valueOf(2));  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  hdrMap.put(header,  Integer.valueOf(2));  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	hdrMap.put(header,  Integer.valueOf(2));	      	non-compiled	[CE]  :  expected	4	None	replace
19	[BUG]  [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(i);  }  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(i);  }  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	if(hdrMap!=  null)  {  final  boolean  containsHeader  =  hdrMap.containsKey(i);  }	  final    boolean    containsHeader    =    hdrMap.containsKey(i);    	non-compiled	[CE]  :  expected	1	None	replace
20	[BUG]  [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.containsKey(header);  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  boolean  containsHeader  =  this.headerRecord.containsKey(header);  [BUGGY]    final  boolean  emptyHeader  =  header.trim().isEmpty();  if  (containsHeader  &&  (!emptyHeader  ||  (emptyHeader  &&  !this.format.getIgnoreEmptyHeaders())))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  name:  \   "   "  +  header  +     "\   "  in     "  +  Arrays.toString(headerRecord));  }  hdrMap.put(header,  Integer.valueOf(i));  }  }  }  return  hdrMap;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	final  boolean  containsHeader  =  this.headerRecord.containsKey(header);	  final    boolean    containsHeader    =    hdrMap.containsKey(headerRecord);    	non-compiled	[CE]  :  expected	2	None	replace
