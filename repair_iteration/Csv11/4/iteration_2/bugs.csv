bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.initializeHeader(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.initializeHeader(entry.getKey());  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.initializeHeader(entry.getKey());  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,String>  entry  :  this.headerRecord.entrySet())  {  headerRecord  =  entry.getKey();  }  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,String>  entry  :  this.headerRecord.entrySet())  {  headerRecord  =  entry.getKey();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  for(Map.Entry  <  String,String>  entry  :  this.headerRecord.entrySet())  {  headerRecord  =  entry.getKey();  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
3	[BUG]  [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry();  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Map.Entry  <  K,  V>  entry  =  this.format.getEntry();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	Map.Entry  <  K,  V>  entry  =  this.format.getEntry();	      	non-compiled	[CE]  ';'  expected	5	None	replace
4	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.format  =  entry.getValue();  }  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.format  =  entry.getValue();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  for(Map.Entry  <  String,Object>  entry  :  headerRecord.entrySet())  {  this.format  =  entry.getValue();  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
5	[BUG]  [BUGGY]  headerRecord  =  this.header.values();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.header.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.header.values();	  headerRecord    =    header.values();    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  header  :  header.values();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  header  :  header.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  header  :  header.values();	  headerRecord    =    header.values();    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  headerRecord  :  header.values();  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  headerRecord  :  header.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  headerRecord  :  header.values();	  headerRecord    =    header.values();    	non-compiled	[CE]  not  a  statement	7	None	replace
8	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  header.values()  :  headerRecord;  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  header.values()  :  headerRecord;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  header.values()  :  headerRecord;	  headerRecord    =    header.values();    	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  headerRecord  =  this.headerRecord.getHeaderRecord();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.headerRecord.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.headerRecord.getHeaderRecord();	  headerRecord    =    nextRecord.getHeaderRecord();    	non-compiled	[CE]  not  a  statement	6	None	replace
10	[BUG]  [BUGGY]  headerRecord  =  this.nextRecord.getHeaderRecord();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.nextRecord.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.nextRecord.getHeaderRecord();	  headerRecord    =    nextRecord.getHeaderRecord();    	non-compiled	[CE]  not  a  statement	6	None	replace
11	[BUG]  [BUGGY]  headerRecord  =  this.nextRecord.getHeader();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.nextRecord.getHeader();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.nextRecord.getHeader();	  headerRecord    =    this.nextRecord.values();    	non-compiled	[CE]  not  a  statement	2	None	replace
12	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  null  :  this.headers.values();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  null  :  this.headers.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  null  :  this.headers.values();	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  not  a  statement	4	None	replace
13	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  headerRecord;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  headerRecord;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  headerRecord;	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_MAP;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_MAP;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_MAP;	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord.null  :  headerRecord.values();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord.null  :  headerRecord.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord!=  null)?  headerRecord.null  :  headerRecord.values();	  headerRecord    =    headerRecord.values();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord.values()  :  headerRecord;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord.values()  :  headerRecord;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord!=  null)?  headerRecord.values()  :  headerRecord;	  headerRecord    =    headerRecord.values();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord  :  headerRecord.values();  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord!=  null)?  headerRecord  :  headerRecord.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord!=  null)?  headerRecord  :  headerRecord.values();	  headerRecord    =    headerRecord.values();    	non-compiled	[CE]  not  a  statement	3	None	replace
18	[BUG]  [BUGGY]  headerRecord  =  this.headerRecord.getHeader();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.headerRecord.getHeader();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.headerRecord.getHeader();	  headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  headerRecord  =  this.headerRecord.toString();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.headerRecord.toString();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.headerRecord.toString();	  headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  not  a  statement	1	None	replace
20	[BUG]  [BUGGY]  headerRecord  =  this.nextRecord.toArray(new  String[this.headerRecord.size()  ]);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.nextRecord.toArray(new  String[this.headerRecord.size()  ]);  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.nextRecord.toArray(new  String[this.headerRecord.size()  ]);	  headerRecord    =    this.nextRecord.values();    	non-compiled	[CE]  not  a  statement	2	None	replace
21	[BUG]  [BUGGY]  headerRecord  =  this.headerRecord.toArray(new  String[this.headerRecord.size()  ]);  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.headerRecord.toArray(new  String[this.headerRecord.size()  ]);  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.headerRecord.toArray(new  String[this.headerRecord.size()  ]);	  headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  not  a  statement	1	None	replace
22	[BUG]  [BUGGY]  headerRecord  =  this.headers.getHeaderRecord();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.headers.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.headers.getHeaderRecord();	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  not  a  statement	4	None	replace
23	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_LIST;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_LIST;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  this.headers.values()  :  Collections.EMPTY_LIST;	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  not  a  statement	4	None	replace
24	[BUG]  [BUGGY]  this.initializeHeader(headerRecord);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.initializeHeader(headerRecord);  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	this.initializeHeader(headerRecord);	      	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  String,Object>();  }  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  String,Object>();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  String,Object>();  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  headerRecord  =  new  CSVHeader();  }  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  headerRecord  =  new  CSVHeader();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  headerRecord  =  new  CSVHeader();  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
27	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  Map  <  K,  V>();  }  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  Map  <  K,  V>();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  this.headerRecord  =  new  HashMap  <  Map  <  K,  V>();  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
28	[BUG]  [BUGGY]  headerRecord  =(headerRecord!=  null)?  this.headerRecord.values()  :  headerRecord;  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord!=  null)?  this.headerRecord.values()  :  headerRecord;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord!=  null)?  this.headerRecord.values()  :  headerRecord;	  headerRecord    =    headerRecord.values();    	non-compiled	[CE]  not  a  statement	3	None	replace
29	[BUG]  [BUGGY]  headerRecord  =  this.nextHeaderRecord.getHeaderRecord();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.nextHeaderRecord.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.nextHeaderRecord.getHeaderRecord();	  headerRecord    =    nextRecord.getHeaderRecord();    	non-compiled	[CE]  not  a  statement	6	None	replace
30	[BUG]  [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headerRecord  :  header.values();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(headerRecord  ==  null)?  this.headerRecord  :  header.values();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(headerRecord  ==  null)?  this.headerRecord  :  header.values();	  headerRecord    =    header.values();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  headerRecord  =  this.header.getHeaderRecord();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.header.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.header.getHeaderRecord();	  headerRecord    =    nextRecord.getHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader(this.format.getSkipHeaderRecord());  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader(this.format.getSkipHeaderRecord());  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader(this.format.getSkipHeaderRecord());  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  this.headerRecord  =  new  HashMap  <  String,Object>();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.headerRecord  =  new  HashMap  <  String,Object>();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	this.headerRecord  =  new  HashMap  <  String,Object>();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader();  }  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	if(headerRecord  ==  null)  {  this.header  =  new  CSVHeader();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  this.headerRecord  =  headerRecord.getHeader();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  this.headerRecord  =  headerRecord.getHeader();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	this.headerRecord  =  headerRecord.getHeader();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  headerRecord  =(this.headers!=  null)?  this.headers.values()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =(this.headers!=  null)?  this.headers.values()  :  Collections.EMPTY_LIST;  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =(this.headers!=  null)?  this.headers.values()  :  Collections.EMPTY_LIST;	  headerRecord    =    this.headers.values();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  headerRecord  =  header.getHeaderRecord();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  header.getHeaderRecord();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  header.getHeaderRecord();	  headerRecord    =    headerRecord.values();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  headerRecord  =  this.header.recordedHeader();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  headerRecord  =  this.header.recordedHeader();  [BUGGY]    }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  }  if  (headerRecord  !=  null)  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	headerRecord  =  this.header.recordedHeader();	  headerRecord    =    header.values();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
