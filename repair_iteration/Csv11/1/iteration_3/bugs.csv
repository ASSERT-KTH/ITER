bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {   ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {   ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  {   ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "    {    /   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	26	None	replace
2	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  {  / ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  {  / ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase( "  {  / ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "    {    /   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	26	None	replace
3	[BUG]  [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
4	[BUG]  [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
5	[BUG]  [BUGGY]  addRecordValue(String.valueOf(this.getClass().getName()  +  1));  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  addRecordValue(String.valueOf(this.getClass().getName()  +  1));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(this.getClass().getName()  +  1));	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  ';'  expected	4	None	replace
6	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  Integer.toString(input));  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  Integer.toString(input));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  Integer.toString(input));	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	13	None	replace
7	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(input)?  null  :  input);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(input)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(input)?  null  :  input);	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	13	None	replace
8	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input.toString());  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  input.toString());	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	13	None	replace
9	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  value);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  value);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  value);	  this.record.add(value.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	12	None	replace
10	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  value.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  value.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  value.toString());	  this.record.add(value.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	12	None	replace
11	[BUG]  [BUGGY]  this.record.add(Integer.toString(value)?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Integer.toString(value)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Integer.toString(value)?  null  :  input);	  this.record.add(value.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	12	None	replace
12	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue(true);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVRecordValue(true);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue(true);	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	30	None	replace
13	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue(0);  [CE]  not  a  statement  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVRecordValue(0);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue(0);	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  not  a  statement	30	None	replace
14	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue(this.cSVFormat);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVRecordValue(this.cSVFormat);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue(this.cSVFormat);	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	30	None	replace
15	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(false)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	14	None	replace
16	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(true)?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(true)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(true)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	14	None	replace
17	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(null)?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(null)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(null)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	14	None	replace
18	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(   "    <       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	19	None	replace
19	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.getMessage());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.getMessage());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input.getMessage());	  this.record.add(input.equalsIgnoreCase(   "    <       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	19	None	replace
20	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  2);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  2);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  2);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	20	None	replace
21	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  0,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  0,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  0,  1);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	20	None	replace
22	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	20	None	replace
23	[BUG]  [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
24	[BUG]  [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
25	[BUG]  [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  null)  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
26	[BUG]  [BUGGY]  this.recordValue  =  Collections.emptySet();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.emptySet();  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.emptySet();	  this.recordValue    =    Collections.emptyList();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	29	None	replace
27	[BUG]  [BUGGY]  this.recordValue  =  Collections.emptyMap();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.emptyMap();  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.emptyMap();	  this.recordValue    =    Collections.emptyList();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	29	None	replace
28	[BUG]  [BUGGY]  this.recordValue  =  Collections.EMPTY_STRING;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.EMPTY_STRING;  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.EMPTY_STRING;	  this.recordValue    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	28	None	replace
29	[BUG]  [BUGGY]  this.recordValue  =  null;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  null;  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  null;	  this.recordValue    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	28	None	replace
30	[BUG]  [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST  +  1;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST  +  1;  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.EMPTY_LIST  +  1;	  this.recordValue    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	28	None	replace
31	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);	  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	16	None	replace
32	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(   "/-   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
33	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/-* ")?  null  :  input);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "/-* ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/-* ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/-   ")?    null    :    input);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  parser.addRecordValue(';',  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(';',  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(';',  1);	  parser.addRecordValue(';');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  parser.addRecordValue(';',  true);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(';',  true);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(';',  true);	  parser.addRecordValue(';');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
36	[BUG]  [BUGGY]  parser.addRecordValue(';',  -1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(';',  -1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(';',  -1);	  parser.addRecordValue(';');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  input);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  input);	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(input));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(input));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Integer.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(input));	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }	  addRecordValue(String.valueOf(record));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
41	[BUG]  [BUGGY]  if(record!=  null)  {  addRecordValue(String.valueOf(record));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(record!=  null)  {  addRecordValue(String.valueOf(record));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(record!=  null)  {  addRecordValue(String.valueOf(record));  }	  addRecordValue(String.valueOf(record));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
42	[BUG]  [BUGGY]  if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(record  ==  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(record));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
43	[BUG]  [BUGGY]  if(record!=  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(record!=  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(record!=  null)  {  addRecordValue(String.valueOf(record));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(record));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
44	[BUG]  [BUGGY]  this.addRecordValue(null);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.addRecordValue(null);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.addRecordValue(null);	  addRecordValue(null);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	22	None	replace
45	[BUG]  [BUGGY]  _addRecordValue(null);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  _addRecordValue(null);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	_addRecordValue(null);	  addRecordValue(null);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	22	None	replace
46	[BUG]  [BUGGY]  addRecordValue(null,  null);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  addRecordValue(null,  null);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(null,  null);	  addRecordValue(null);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	22	None	replace
47	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  <  / ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  <  / ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase( "  <  / ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "    <    /   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	17	None	replace
48	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  2);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  2);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  2);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	23	None	replace
49	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  3);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  3);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  3);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	23	None	replace
50	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  0,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  0,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  0,  1);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	23	None	replace
51	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  this.recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  this.recordValue);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    this.recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	8	None	replace
52	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "* ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "* ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "* ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/*   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
53	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(   "/*   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
54	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.getValue());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.getValue());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input.getValue());	  this.record.add(input.equalsIgnoreCase(   "/*   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
55	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	7	None	replace
56	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  output.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  output.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  output.toString());	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	7	None	replace
57	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	11	None	replace
58	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  value.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  value.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  value.toString());	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	11	None	replace
59	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	18	None	replace
60	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.getValue());  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.getValue());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input.getValue());	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	18	None	replace
61	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(true)?  null  :  input);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(true)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(true)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(false)?    null    :    input);    	non-compiled	[CE]  ';'  expected	27	None	replace
62	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(true)?  null  :  input);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(true)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(true)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(false)?    null    :    input);    	non-compiled	[CE]  ';'  expected	27	None	replace
63	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(false)?  null  :  input);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(false)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(false)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(false)?    null    :    input);    	non-compiled	[CE]  ';'  expected	27	None	replace
64	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  value);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  value);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  value);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input,    reference);    	non-compiled	[CE]  ';'  expected	25	None	replace
65	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  input);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  input);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input,    reference);    	non-compiled	[CE]  ';'  expected	25	None	replace
66	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  reference);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input,    reference);    	non-compiled	[CE]  ';'  expected	25	None	replace
67	[BUG]  [BUGGY]  addRecordValue(String.valueOf(';')+  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  addRecordValue(String.valueOf(';')+  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(';')+  1);	  addRecordValue(String.valueOf(';'));    	non-compiled	[CE]  ';'  expected	2	None	replace
68	[BUG]  [BUGGY]  parser.addRecordValue(String.valueOf(';'));  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(String.valueOf(';'));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(String.valueOf(';'));	  addRecordValue(String.valueOf(';'));    	non-compiled	[CE]  ';'  expected	2	None	replace
69	[BUG]  [BUGGY]  validateValue(String.valueOf(';'));  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  validateValue(String.valueOf(';'));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	validateValue(String.valueOf(';'));	  addRecordValue(String.valueOf(';'));    	non-compiled	[CE]  ';'  expected	2	None	replace
70	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getMessage());  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getMessage());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getMessage());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.getValue());    	non-compiled	[CE]  ';'  expected	15	None	replace
71	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getKey());  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getKey());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getKey());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.getValue());    	non-compiled	[CE]  ';'  expected	15	None	replace
72	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecordValue());  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecordValue());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecordValue());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.getValue());    	non-compiled	[CE]  ';'  expected	15	None	replace
73	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  recordValue);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  recordValue);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  ';'  expected	24	None	replace
74	[BUG]  [BUGGY]  this.record.add(getRecordValue().equalsIgnoreCase(value)?  null  :  recordValue);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(getRecordValue().equalsIgnoreCase(value)?  null  :  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(getRecordValue().equalsIgnoreCase(value)?  null  :  recordValue);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  ';'  expected	24	None	replace
75	[BUG]  [BUGGY]  this.record.add(RecordValue.equalsIgnoreCase(value)?  null  :  recordValue);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(RecordValue.equalsIgnoreCase(value)?  null  :  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(RecordValue.equalsIgnoreCase(value)?  null  :  recordValue);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  ';'  expected	24	None	replace
76	[BUG]  [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.recordValue    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  ';'  expected	28	None	replace
77	[BUG]  [BUGGY]  this.recordValue  =  new  CSVFormat();  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVFormat();  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVFormat();	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  ';'  expected	30	None	replace
78	[BUG]  [BUGGY]  super.addRecordValue(String.valueOf(record));  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  super.addRecordValue(String.valueOf(record));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	super.addRecordValue(String.valueOf(record));	  addRecordValue(String.valueOf(record));    	non-compiled	[CE]  ';'  expected	3	None	replace
79	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  reference);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  reference);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  reference,  reference);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input,    reference);    	non-compiled	[CE]  ';'  expected	25	None	replace
80	[BUG]  [BUGGY]  parser.addRecordValue(String.valueOf(this.getClass().getName()));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(String.valueOf(this.getClass().getName()));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(String.valueOf(this.getClass().getName()));	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
81	[BUG]  [BUGGY]  validate(String.valueOf(this.getClass().getName()));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  validate(String.valueOf(this.getClass().getName()));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	validate(String.valueOf(this.getClass().getName()));	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
82	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(this.recordValue));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(this.recordValue));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  Integer.toString(this.recordValue));	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	9	None	replace
83	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input,  this.recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input,  this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input,  this.recordValue);	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	9	None	replace
84	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecord());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecord());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getRecord());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input.getValue());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	15	None	replace
85	[BUG]  [BUGGY]  this.recordValue  =  Lists.newArrayList();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Lists.newArrayList();  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Lists.newArrayList();	  this.recordValue    =    Collections.emptyList();    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	29	None	replace
86	[BUG]  [BUGGY]  super.addRecordValue(null);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  super.addRecordValue(null);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	super.addRecordValue(null);	  addRecordValue(null);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	22	None	replace
87	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.toString(input));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.toString(input));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.toString(input));	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	18	None	replace
88	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  }   ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase( "  }   ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase( "  }   ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	18	None	replace
89	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.MAX_VALUE);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.MAX_VALUE);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  Integer.MAX_VALUE);	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	18	None	replace
90	[BUG]  [BUGGY]  parser.addRecordValue(String.valueOf(this.getClass().getSimpleName()));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parser.addRecordValue(String.valueOf(this.getClass().getSimpleName()));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(String.valueOf(this.getClass().getSimpleName()));	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
91	[BUG]  [BUGGY]  addRecordValue(String.valueOf(this.getClass().getSimpleName()  +  1));  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  addRecordValue(String.valueOf(this.getClass().getSimpleName()  +  1));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(this.getClass().getSimpleName()  +  1));	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
92	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  /- ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  /- ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  {  /- ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/-   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
93	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  /- ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  /- ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <  /- ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/-   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
94	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(null)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(null)?  null  :  input,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(null)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	23	None	replace
95	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  false);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  false);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  false);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	23	None	replace
96	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  /* ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  /* ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  {  /* ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/*   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
97	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  /* ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  /* ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <  /* ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/*   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
98	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  input);	  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	16	None	replace
99	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	20	None	replace
100	[BUG]  [BUGGY]  this.record.add(recordValue.equalsIgnoreCase(value)?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(recordValue.equalsIgnoreCase(value)?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(recordValue.equalsIgnoreCase(value)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	24	None	replace
101	[BUG]  [BUGGY]  append(String.valueOf(';'));  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  append(String.valueOf(';'));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	append(String.valueOf(';'));	  addRecordValue(String.valueOf(';'));    	non-compiled	[CE]  :  expected	2	None	replace
102	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  value);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  value);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  value);	  this.record.add(value.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  :  expected	12	None	replace
103	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  recordValue);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  recordValue);	  this.record.add(this.recordValue.equalsIgnoreCase(input)?    null    :    input);    	non-compiled	[CE]  :  expected	10	None	replace
104	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  1);  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  1);	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  :  expected	13	None	replace
105	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  value);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  value);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  input,  value);	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  :  expected	13	None	replace
106	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input.toString());  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(nullValue)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input.toString());    	non-compiled	[CE]  :  expected	7	None	replace
107	[BUG]  [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(this.getClass().getSimpleName()));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
108	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  1  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  1  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(this.recordValue)?  1  :  input);	  this.record.add(Input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	9	None	replace
109	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input,  recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input,  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(false)?  null  :  input,  recordValue);	  this.record.add(input.equalsIgnoreCase(false)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	27	None	replace
110	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  1);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	20	None	replace
111	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  true);  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  true);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  true);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input,    1);    	non-compiled	[CE]  :  expected	20	None	replace
112	[BUG]  [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  :  expected	4	None	replace
113	[BUG]  [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  :  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  :  expected	4	None	replace
114	[BUG]  [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  :  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(this.getClass()!=  getClass())  {  addRecordValue(String.valueOf(this.getClass().getName()));  }  else  {  throw  new  IllegalStateException( " ");  }	  addRecordValue(String.valueOf(this.getClass().getName()));    	non-compiled	[CE]  :  expected	4	None	replace
115	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  Input.escape(input));  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  Input.escape(input));  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  Input.escape(input));	  this.record.add(Input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  :  expected	13	None	replace
116	[BUG]  [BUGGY]  this.recordValue  =  Collections.binarySearch(this.recordValue);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.binarySearch(this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.binarySearch(this.recordValue);	  this.recordValue    =    Collections.emptyList();    	non-compiled	[CE]  :  expected	29	None	replace
117	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  1  :  input);  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  1  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  1  :  input);	  this.record.add(value.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  :  expected	12	None	replace
118	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue(DEFAULT_CSV_VALUE);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVRecordValue(DEFAULT_CSV_VALUE);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue(DEFAULT_CSV_VALUE);	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  :  expected	30	None	replace
119	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue(DEFAULT_REcord_VALUE);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  new  CSVRecordValue(DEFAULT_REcord_VALUE);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue(DEFAULT_REcord_VALUE);	  this.recordValue    =    new    CSVRecordValue();    	non-compiled	[CE]  :  expected	30	None	replace
120	[BUG]  [BUGGY]  if(String.valueOf(';')!=  0)  {  addRecordValue(String.valueOf(';'));  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(String.valueOf(';')!=  0)  {  addRecordValue(String.valueOf(';'));  }  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	if(String.valueOf(';')!=  0)  {  addRecordValue(String.valueOf(';'));  }	  addRecordValue(String.valueOf(';'));    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	2	None	replace
121	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  }   ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  }   ")?  null  :  input);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  {  }   ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "    }       ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	18	None	replace
122	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  reference,  reference);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  reference,  reference);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  reference,  reference);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input,    reference);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	25	None	replace
123	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue,  recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue,  recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue,  recordValue);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	24	None	replace
124	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  record);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  record);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  record);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	24	None	replace
125	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  output.toString());  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  output.toString());  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  output.toString());	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input.toString());    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	11	None	replace
126	[BUG]  [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_STRING;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_STRING;  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_STRING;	  this.recordValue    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	28	None	replace
127	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordValue);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordValue);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    this.recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	8	None	replace
128	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordName);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordName);  [BUGGY]      }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue,  this.recordName);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    this.recordValue);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	8	None	replace
