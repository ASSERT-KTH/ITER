bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  addRecordValue(String.valueOf(this.getClass().getSimpleName()));  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(this.getClass().getSimpleName()));	      	non-compiled	[CE]  ';'  expected	4	None	replace
2	[BUG]  [BUGGY]  addRecordValue(String.valueOf(';'));  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  addRecordValue(String.valueOf(';'));  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(';'));	      	non-compiled	[CE]  ';'  expected	4	None	replace
3	[BUG]  [BUGGY]  addRecordValue(String.valueOf(record));  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  addRecordValue(String.valueOf(record));  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(record));	      	non-compiled	[CE]  ';'  expected	4	None	replace
4	[BUG]  [BUGGY]  addRecordValue(String.valueOf(this.getClass().getName()));  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  addRecordValue(String.valueOf(this.getClass().getName()));  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(String.valueOf(this.getClass().getName()));	      	non-compiled	[CE]  ';'  expected	4	None	replace
5	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/* ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "/- ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	3	None	replace
7	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input.toString());  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input.toString());  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input);    	non-compiled	[CE]  ';'  expected	5	None	replace
8	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(this.recordValue)?  null  :  this.recordValue);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  ';'  expected	1	None	replace
9	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(this.recordValue)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  ';'  expected	1	None	replace
10	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  input);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(input)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  ';'  expected	1	None	replace
11	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input.toString());  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input.toString());  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  input);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(value.equalsIgnoreCase(value)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(value.equalsIgnoreCase(value)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(Input.equalsIgnoreCase(value)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(Input.equalsIgnoreCase(value)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  ';'  expected	2	None	replace
14	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.toString());  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.toString());  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.toString());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input);    	non-compiled	[CE]  ';'  expected	6	None	replace
15	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getValue());  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getValue());  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input.getValue());	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input);    	non-compiled	[CE]  ';'  expected	6	None	replace
16	[BUG]  [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  input);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(this.recordValue.equalsIgnoreCase(this.recordValue)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(this.recordValue)?    null    :    input);    	non-compiled	[CE]  ';'  expected	1	None	replace
17	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  / ")?  null  :  input);  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <  / ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <  / ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	3	None	replace
18	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input);  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  }   ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	3	None	replace
19	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  <   ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  ';'  expected	3	None	replace
20	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  1);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(nullValue)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(nullValue)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	5	None	replace
21	[BUG]  [BUGGY]  parser.addRecordValue(';');  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parser.addRecordValue(';');  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	parser.addRecordValue(';');	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
22	[BUG]  [BUGGY]  addRecordValue(null);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  addRecordValue(null);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	addRecordValue(null);	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
23	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  1);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  1);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(null)?  null  :  input,  1);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
24	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  recordValue);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	2	None	replace
25	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  reference);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  reference);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(value)?  null  :  input,  reference);	  this.record.add(input.equalsIgnoreCase(value)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	2	None	replace
26	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  / ")?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase( "  {  / ")?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase( "  {  / ")?  null  :  input);	  this.record.add(input.equalsIgnoreCase(   "/   ")?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
27	[BUG]  [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input);  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.record.add(input.equalsIgnoreCase(false)?  null  :  input);  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.record.add(input.equalsIgnoreCase(false)?  null  :  input);	  this.record.add(input.equalsIgnoreCase(null)?    null    :    input);    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
28	[BUG]  [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST;  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.recordValue  =  Collections.EMPTY_LIST;  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.EMPTY_LIST;	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
29	[BUG]  [BUGGY]  this.recordValue  =  Collections.emptyList();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.recordValue  =  Collections.emptyList();  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  Collections.emptyList();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
30	[BUG]  [BUGGY]  this.recordValue  =  new  CSVRecordValue();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.recordValue  =  new  CSVRecordValue();  [BUGGY]    }  }  [CLASS]  CSVParser  1  [METHOD]  addRecordValue  [RETURN_TYPE]  void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	this.recordValue  =  new  CSVRecordValue();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
