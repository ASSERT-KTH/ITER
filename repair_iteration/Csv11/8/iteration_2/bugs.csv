bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty())  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getSkipHeaderRecord().isEmpty())  {	  if(this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.format.getHeaderRecord()!=  null)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord()!=  null)  {	  if(this.format.getHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(this.format.getCSVHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.format.getCSVHeaderRecord()!=  null)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getCSVHeaderRecord()!=  null)  {	  if(this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  if(!this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(!this.format.getSkipHeaderRecord())  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getSkipHeaderRecord())  {	  if(this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  if(this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.format.getHeaderRecord())  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord())  {	  if(this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.format.getSkipHeaderRecord()  >  0)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()  >  0)  {	  if(this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null)  {  final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null)  {  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  if(headerRecord.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord.length()  ==  0)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length()  ==  0)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord  ==  null)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  if(this.headerRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.headerRecord.length  ==  0)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord.length  ==  0)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  if(headerRecord.length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord.length  ==  1)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length  ==  1)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  if(headerRecord.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord.length!=  0)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length!=  0)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }	      	non-compiled	[CE]  :  expected	4	None	replace
18	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();	      	non-compiled	[CE]  :  expected	4	None	replace
19	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();	      	non-compiled	[CE]  :  expected	4	None	replace
20	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();  [CE]  :  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  :  expected	4	None	replace
21	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [CE]  :  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  :  expected	4	None	replace
22	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }  [CE]  :  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }	      	non-compiled	[CE]  :  expected	4	None	replace
23	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }  [CE]  :  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  :  expected	4	None	replace
24	[BUG]  [BUGGY]  if(headerRecord.size()  ==  0)  {  [CE]  :  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord.size()  ==  0)  {  [BUGGY]      final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.size()  ==  0)  {	  if(headerRecord.length    ==    0)    {    	non-compiled	[CE]  :  expected	3	None	replace
