bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();	  if(headerRecord!=    null)    {    final    CSVHeader    headerRecord    =    this.headerRecord.values();    headerRecord    =    headerRecord.values();    }    	non-compiled	[CE]  :  expected	17	None	replace
2	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    headerRecord    =    this.headerRecord.values();    headerRecord    =    headerRecord.values();    }    	non-compiled	[CE]  :  expected	17	None	replace
3	[BUG]  [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVRecord  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();	  if(headerRecord!=    null)    {    final    CSVHeader    headerRecord    =    this.headerRecord.values();    headerRecord    =    headerRecord.values();    }    	non-compiled	[CE]  :  expected	17	None	replace
4	[BUG]  [BUGGY]  Annotation  <  CSV>  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Annotation  <  CSV>  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	Annotation  <  CSV>  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();	  if(headerRecord!=    null)    {    final    CSVHeader    headerRecord    =    this.headerRecord.values();    headerRecord    =    headerRecord.values();    }    	non-compiled	[CE]  :  expected	17	None	replace
5	[BUG]  [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.values();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  headerRecord  =  this.headerRecord.values();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.values();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	23	None	replace
6	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.values();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	23	None	replace
7	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeader();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeader();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  :  expected	18	None	replace
8	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecord();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecord();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecord();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  :  expected	18	None	replace
9	[BUG]  [BUGGY]  if(!this.format.getHeaderRecord())  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!this.format.getHeaderRecord())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getHeaderRecord())  {	  if(this.format.getHeaderRecord())    {    	non-compiled	[CE]  :  expected	5	None	replace
10	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()  >  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getHeaderRecord()  >  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord()  >  0)  {	  if(this.format.getHeaderRecord())    {    	non-compiled	[CE]  :  expected	5	None	replace
11	[BUG]  [BUGGY]  if(headerRecord.length()  ==  1)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length()  ==  1)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length()  ==  1)  {	  if(headerRecord.length    ==    1)    {    	non-compiled	[CE]  :  expected	15	None	replace
12	[BUG]  [BUGGY]  static  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  static  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	static  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  :  expected	19	None	replace
13	[BUG]  [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
14	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.parseHeader(headerRecord);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.parseHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.parseHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
15	[BUG]  [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
16	[BUG]  [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);  [CE]  :  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
17	[BUG]  [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
18	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.values();  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
19	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
20	[BUG]  [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.getHeader();  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.getHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVRecord  headerRecord  =  this.headerRecord.getHeader();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
21	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {	  if(this.headerRecord.length    ==    0)    {    	non-compiled	[CE]  :  expected	14	None	replace
22	[BUG]  [BUGGY]  if(this.headerRecord!=  null  ||  this.headerRecord.length  ==  0)  {  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null  ||  this.headerRecord.length  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null  ||  this.headerRecord.length  ==  0)  {	  if(this.headerRecord.length    ==    0)    {    	non-compiled	[CE]  :  expected	14	None	replace
23	[BUG]  [BUGGY]  if(this.headerRecord  ==  null)  {  [CE]  :  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord  ==  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord  ==  null)  {	  if(this.headerRecord.length    ==    0)    {    	non-compiled	[CE]  :  expected	14	None	replace
24	[BUG]  [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
25	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.recordHeader(headerRecord);  [CE]  :  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.recordHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.getParser();  headerRecord  =  headerRecord.recordHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
26	[BUG]  [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);  [CE]  :  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
27	[BUG]  [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [CE]  :  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
28	[BUG]  [BUGGY]  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  <  K,  V>  headerRecord  =  this.format.getSkipHeaderRecord();	  final    CSVParser    <    K,    V>    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  :  expected	9	None	replace
29	[BUG]  [BUGGY]  static  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  static  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	static  final  CSVParser  <  K,  V>  headerRecord  =  this.format.getHeaderRecord();	  final    CSVParser    <    K,    V>    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  :  expected	9	None	replace
30	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null  &&!this.format.getSkipHeaderRecord().isEmpty())  {  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null  &&!this.format.getSkipHeaderRecord().isEmpty())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()!=  null  &&!this.format.getSkipHeaderRecord().isEmpty())  {	  if(!this.format.getSkipHeaderRecord().isEmpty())    {    	non-compiled	[CE]  :  expected	1	None	replace
31	[BUG]  [BUGGY]  if(!this.format.getHeaderRecord().isEmpty())  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!this.format.getHeaderRecord().isEmpty())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getHeaderRecord().isEmpty())  {	  if(!this.format.getSkipHeaderRecord().isEmpty())    {    	non-compiled	[CE]  :  expected	1	None	replace
32	[BUG]  [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty()  ||  headerRecord.values().length  >  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty()  ||  headerRecord.values().length  >  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getSkipHeaderRecord().isEmpty()  ||  headerRecord.values().length  >  0)  {	  if(!this.format.getSkipHeaderRecord().isEmpty())    {    	non-compiled	[CE]  :  expected	1	None	replace
33	[BUG]  [BUGGY]  if(this.format!=  null)  {  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.format!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format!=  null)  {	  if(headerRecord    ==    null)    {    	non-compiled	[CE]  :  expected	13	None	replace
34	[BUG]  [BUGGY]  if(nextRecord  ==  null)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(nextRecord  ==  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(nextRecord  ==  null)  {	  if(headerRecord!=    null)    {    	non-compiled	[CE]  :  expected	12	None	replace
35	[BUG]  [BUGGY]  if(!this.format.getSkipHeaderRecord()  &&  headerRecord!=  null)  {  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(!this.format.getSkipHeaderRecord()  &&  headerRecord!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getSkipHeaderRecord()  &&  headerRecord!=  null)  {	  if(!this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  :  expected	4	None	replace
36	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.getHeader();  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.getHeader();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.getHeader();  headerRecord  =  headerRecord.getHeader();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.getHeader();    }    	non-compiled	[CE]  :  expected	22	None	replace
37	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.getHeader();    }    	non-compiled	[CE]  :  expected	22	None	replace
38	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.getHeader();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.getHeader();    }    	non-compiled	[CE]  :  expected	22	None	replace
39	[BUG]  [BUGGY]  if(headerRecord.length()  >  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length()  >  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length()  >  0)  {	  if(headerRecord.length()    ==    0)    {    	non-compiled	[CE]  :  expected	11	None	replace
40	[BUG]  [BUGGY]  if(this.headerRecord.length()  ==  0)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord.length()  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord.length()  ==  0)  {	  if(headerRecord.length()    ==    0)    {    	non-compiled	[CE]  :  expected	11	None	replace
41	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()  ==  0)  {	  if(this.format.getSkipHeaderRecord()    >    0)    {    	non-compiled	[CE]  :  expected	6	None	replace
42	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()!=  0)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()!=  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()!=  0)  {	  if(this.format.getSkipHeaderRecord()    >    0)    {    	non-compiled	[CE]  :  expected	6	None	replace
43	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  >=  0)  {  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()  >=  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()  >=  0)  {	  if(this.format.getSkipHeaderRecord()    >    0)    {    	non-compiled	[CE]  :  expected	6	None	replace
44	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  <  0)  {  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()  <  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()  <  0)  {	  if(this.format.getSkipHeaderRecord()    >    0)    {    	non-compiled	[CE]  :  expected	6	None	replace
45	[BUG]  [BUGGY]  if(headerRecord.length  >  0)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length  >  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length  >  0)  {	  if(headerRecord.length!=    0)    {    	non-compiled	[CE]  :  expected	16	None	replace
46	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
47	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
48	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  nextRecord.values();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVRecord  nextRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  nextRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVRecord  nextRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  nextRecord.values();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
49	[BUG]  [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.getSkipHeader();  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVRecord  headerRecord  =  this.headerRecord.getSkipHeader();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVRecord  headerRecord  =  this.headerRecord.getSkipHeader();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
50	[BUG]  [BUGGY]  if(headerRecord.size()  >  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.size()  >  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.size()  >  0)  {	  if(headerRecord.size()    ==    0)    {    	non-compiled	[CE]  :  expected	24	None	replace
51	[BUG]  [BUGGY]  if(headerRecord.size()  ==  1)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.size()  ==  1)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.size()  ==  1)  {	  if(headerRecord.size()    ==    0)    {    	non-compiled	[CE]  :  expected	24	None	replace
52	[BUG]  [BUGGY]  if(this.headerRecord.size()  ==  0)  {  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord.size()  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord.size()  ==  0)  {	  if(headerRecord.size()    ==    0)    {    	non-compiled	[CE]  :  expected	24	None	replace
53	[BUG]  [BUGGY]  final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
54	[BUG]  [BUGGY]  final  CSVRecord  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVRecord  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVRecord  formatHeader  =  this.headerRecord.getSkipHeader();  headerRecord  =  formatHeader.values();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
55	[BUG]  [BUGGY]  if(headerRecord.length!=  1)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length!=  1)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length!=  1)  {	  if(headerRecord.length    ==    1)    {    	non-compiled	[CE]  :  expected	15	None	replace
56	[BUG]  [BUGGY]  final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
57	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(0);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(0);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(0);	  final    CSVHeader    <    K,    V>    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  :  expected	19	None	replace
58	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()  ||  this.format.getSkipHeaderRecord())  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getHeaderRecord()  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord()  ||  this.format.getSkipHeaderRecord())  {	  if(this.format.getHeaderRecord())    {    	non-compiled	[CE]  :  expected	5	None	replace
59	[BUG]  [BUGGY]  if(headerRecord.length()!=  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length()!=  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length()!=  0)  {	  if(headerRecord.length()    ==    0)    {    	non-compiled	[CE]  :  expected	11	None	replace
60	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
61	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  formatHeader  =  this.headerRecord.getHeader();  headerRecord  =  formatHeader.values();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	21	None	replace
62	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  formatHeader  =  this.headerRecord.values();  headerRecord  =  formatHeader.values();	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.values();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	23	None	replace
63	[BUG]  [BUGGY]  if(this.format.getCSVHeaderRecord()  ==  null)  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getCSVHeaderRecord()  ==  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getCSVHeaderRecord()  ==  null)  {	  if(this.format.getCSVHeaderRecord()!=    null)    {    	non-compiled	[CE]  :  expected	3	None	replace
64	[BUG]  [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.size()  ==  0)  {  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.size()  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null  ||  headerRecord.size()  ==  0)  {	  if(headerRecord    ==    null)    {    	non-compiled	[CE]  :  expected	13	None	replace
65	[BUG]  [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.values()!=  null)  {  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.values()!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null  ||  headerRecord.values()!=  null)  {	  if(headerRecord    ==    null)    {    	non-compiled	[CE]  :  expected	13	None	replace
66	[BUG]  [BUGGY]  if(headerRecord.size()  ==  2)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.size()  ==  2)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.size()  ==  2)  {	  if(headerRecord.size()    ==    0)    {    	non-compiled	[CE]  :  expected	24	None	replace
67	[BUG]  [BUGGY]  if(headers!=  null)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headers!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headers!=  null)  {	  if(headerRecord!=    null)    {    	non-compiled	[CE]  :  expected	12	None	replace
68	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecords();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecords();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaderRecords();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  :  expected	18	None	replace
69	[BUG]  [BUGGY]  static  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  static  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	static  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.values();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  :  expected	18	None	replace
70	[BUG]  [BUGGY]  final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
71	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.values();  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.values();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.format.values();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	20	None	replace
72	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaders();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaders();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.headerRecord.getHeaders();	  final    CSVHeader    <    K,    V>    headerRecord    =    this.headerRecord.values();    	non-compiled	[CE]  :  expected	18	None	replace
73	[BUG]  [BUGGY]  if(headerRecord.size()!=  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.size()!=  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.size()!=  0)  {	  if(headerRecord.size()    ==    0)    {    	non-compiled	[CE]  :  expected	24	None	replace
74	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  >  1)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()  >  1)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()  >  1)  {	  if(this.format.getSkipHeaderRecord()    >    0)    {    	non-compiled	[CE]  :  expected	6	None	replace
75	[BUG]  [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(this.header);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(this.header);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVHeader  <  K,  V>  headerRecord  =  this.format.getHeaderRecord(this.header);	  final    CSVHeader    <    K,    V>    headerRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	20	None	replace
76	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.recordHeader(headerRecord);  [CE]  :  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.recordHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.recordHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
77	[BUG]  [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);  [CE]  :  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	parser  =  this.headerRecord.getParser();  headerRecord  =  parser.recordHeader(this.headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.recordHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	10	None	replace
78	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.parseHeader(headerRecord);  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.parseHeader(headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.parseHeader(headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
79	[BUG]  [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	parser  =  this.headerRecord.getParser();  headerRecord  =  parser.parseHeader(this.headerRecord);	  if(headerRecord    ==    null)    {    final    CSVParser    parser    =    this.headerRecord.getParser();    headerRecord    =    parser.parseHeader(headerRecord);    }    	non-compiled	[CE]  :  expected	8	None	replace
80	[BUG]  [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.isEmpty())  {  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord  ==  null  ||  headerRecord.isEmpty())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null  ||  headerRecord.isEmpty())  {	  if(headerRecord    ==    null)    {    	non-compiled	[CE]  :  expected	13	None	replace
81	[BUG]  [BUGGY]  if(headerRecord.length()  <  =  0)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length()  <  =  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length()  <  =  0)  {	  if(headerRecord.length()    ==    0)    {    	non-compiled	[CE]  :  expected	11	None	replace
82	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()  ||  this.headerRecord!=  null)  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getHeaderRecord()  ||  this.headerRecord!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord()  ||  this.headerRecord!=  null)  {	  if(this.format.getHeaderRecord())    {    	non-compiled	[CE]  :  expected	5	None	replace
83	[BUG]  [BUGGY]  if(headerRecord.length  >  1)  {  [CE]  :  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord.length  >  1)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord.length  >  1)  {	  if(headerRecord.length    ==    1)    {    	non-compiled	[CE]  :  expected	15	None	replace
84	[BUG]  [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty()  ||  this.headerRecord.values().isEmpty())  {  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(!this.format.getSkipHeaderRecord().isEmpty()  ||  this.headerRecord.values().isEmpty())  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(!this.format.getSkipHeaderRecord().isEmpty()  ||  this.headerRecord.values().isEmpty())  {	  if(!this.format.getSkipHeaderRecord().isEmpty())    {    	non-compiled	[CE]  :  expected	1	None	replace
85	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()!=  headerRecord)  {  [CE]  :  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getSkipHeaderRecord()!=  headerRecord)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getSkipHeaderRecord()!=  headerRecord)  {	  if(!this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  :  expected	4	None	replace
86	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  :  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.format.getHeaderRecord()!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.format.getHeaderRecord()!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(this.format.getHeaderRecord()!=    null)    {    	non-compiled	[CE]  :  expected	2	None	replace
87	[BUG]  [BUGGY]  if(this.headerRecord.length!=  0)  {  [CE]  :  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord.length!=  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord.length!=  0)  {	  if(this.headerRecord.length    ==    0)    {    	non-compiled	[CE]  :  expected	14	None	replace
88	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.getHeader();  }  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.getHeader();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.getHeader();  }	  if(headerRecord!=    null)    {    final    CSVHeader    formatHeader    =    this.headerRecord.getHeader();    headerRecord    =    formatHeader.getHeader();    }    	non-compiled	[CE]  :  expected	22	None	replace
89	[BUG]  [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.headerRecord!=  null)  {  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(this.headerRecord!=  null)  {  final  CSVParser  headerRecord  =  this.headerRecord.getSkipHeader();  headerRecord  =  headerRecord.values();  }	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
90	[BUG]  [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getHeaderRecord();  [CE]  :  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  CSVParser  headerRecord  =  this.headerRecord.getHeaderRecord();  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	final  CSVParser  headerRecord  =  this.headerRecord.getHeaderRecord();	  if(headerRecord    ==    null)    {    final    CSVParser    formatHeader    =    this.headerRecord.getSkipHeader();    headerRecord    =    formatHeader.values();    }    	non-compiled	[CE]  :  expected	7	None	replace
91	[BUG]  [BUGGY]  if(headerRecord!=  null  ||  headerRecord.size()  ==  0)  {  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord!=  null  ||  headerRecord.size()  ==  0)  {  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord!=  null  ||  headerRecord.size()  ==  0)  {	  if(headerRecord!=    null)    {    	non-compiled	[CE]  :  expected	12	None	replace
92	[BUG]  [BUGGY]  if(headerRecord  ==  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [CE]  :  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(headerRecord  ==  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }  [BUGGY]        final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  headerRecord  =  formatHeader;  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	if(headerRecord  ==  null)  {  final  CSVHeader  headerRecord  =  this.headerRecord.values();  headerRecord  =  headerRecord.values();  }	  if(headerRecord!=    null)    {    final    CSVHeader    headerRecord    =    this.headerRecord.values();    headerRecord    =    headerRecord.values();    }    	non-compiled	[CE]  :  expected	17	None	replace
