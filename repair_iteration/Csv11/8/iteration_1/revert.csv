projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(formatHeader.length==0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getSkipHeaderRecord()==null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getSkipHeaderRecord()!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord.length==0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getSkipHeaderRecord()){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getHeaderRecord()==null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(!this.format.getSkipHeaderRecord().isEmpty()){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getHeaderRecord()!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getCSVHeaderRecord()!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(!this.format.getSkipHeaderRecord()){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getHeaderRecord()){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.format.getSkipHeaderRecord()>0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord==null){finalCSVParserformatHeader=this.headerRecord.getSkipHeader();headerRecord=formatHeader.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord==null){finalCSVParserparser=this.headerRecord.getParser();headerRecord=parser.parseHeader(headerRecord);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366finalCSVParser<K,V>headerRecord=this.format.getHeaderRecord();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord==null){finalCSVParserparser=this.headerRecord.getParser();headerRecord=parser.recordHeader(headerRecord);}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord.length()==0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord!=null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord==null){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(this.headerRecord.length==0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord.length==1){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord.length!=0){
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord!=null){finalCSVHeaderheaderRecord=this.headerRecord.values();headerRecord=headerRecord.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366finalCSVHeader<K,V>headerRecord=this.headerRecord.values();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366finalCSVHeader<K,V>headerRecord=this.format.getHeaderRecord();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366finalCSVHeader<K,V>headerRecord=this.format.getSkipHeaderRecord();
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord!=null){finalCSVHeaderformatHeader=this.headerRecord.getHeader();headerRecord=formatHeader.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord!=null){finalCSVHeaderformatHeader=this.headerRecord.getHeader();headerRecord=formatHeader.getHeader();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord!=null){finalCSVHeaderformatHeader=this.headerRecord.values();headerRecord=formatHeader.values();}
projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java366if(headerRecord.size()==0){
