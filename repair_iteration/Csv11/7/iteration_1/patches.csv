bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String[]  headerRecord  =  this.format.getSkipHeaderRecord();  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  this.format.getSkipHeaderRecord();	  String[]    headerRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	1	None	replace
2	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  +  1];  [CE]  :  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  +  1];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  +  1];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord()    ];    	non-compiled	[CE]  :  expected	6	None	replace
3	[BUG]  [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  ];  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  ];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord()  ];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord()    ];    	non-compiled	[CE]  :  expected	6	None	replace
4	[BUG]  [BUGGY]  final  String[]  headerRecord  =  this.format.getHeaderRecords();  [CE]  :  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  this.format.getHeaderRecords();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  this.format.getHeaderRecords();	  String[]    headerRecord    =    this.format.getHeaderRecords();    	non-compiled	[CE]  :  expected	2	None	replace
5	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getSkipHeaderRecords();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getSkipHeaderRecords();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getSkipHeaderRecords();	  String[]    headerRecord    =    this.format.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(true);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(true);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getHeaderRecords(true);	  String[]    headerRecord    =    this.format.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  1];  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  1];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  1];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values();	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  2];  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  2];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  +  2];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  1];  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  1];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  1];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().size()  ]);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().size()  ]);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().size()  ]);	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  2];  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  2];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().size()  +  2];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  final  String[]  headerRecord  =  this.format.getHeaderRecord();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  this.format.getHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  this.format.getHeaderRecord();	  String[]    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  String  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String  formatHeader  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  ';'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  ';'  expected	5	None	replace
16	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(headerRecord!=  null)  {  headerRecord  =  formatHeader.values();  }  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(headerRecord!=  null)  {  headerRecord  =  formatHeader.values();  }  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(headerRecord!=  null)  {  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
17	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(formatHeader!=  null)  {  headerRecord  =  formatHeader.values();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(formatHeader!=  null)  {  headerRecord  =  formatHeader.values();  }  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  CSVHeader  formatHeader  =  this.format.getSkipHeaderRecord();  if(formatHeader!=  null)  {  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  +  1];  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  +  1];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  +  1];	  String[]    headerRecord    =    new    String[this.format.getSkipHeaderRecord()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  ];  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  ];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  new  String[this.format.getSkipHeaderRecord()  ];	  String[]    headerRecord    =    new    String[this.format.getSkipHeaderRecord()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.values();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.values();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.values();	  String[]    headerRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getBaseHeaderRecord();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getBaseHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getBaseHeaderRecord();	  String[]    headerRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  final  Map  <  K,  V>  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  Map  <  K,  V>  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  Map  <  K,  V>  formatHeader  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getHeader();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getHeader();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  CSVHeader  formatHeader  =  this.format.getHeader();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getFormatHeader();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  final  CSVHeader  formatHeader  =  this.format.getFormatHeader();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  CSVHeader  formatHeader  =  this.format.getFormatHeader();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  ];  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  ];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values()  ];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecord(this.header);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecord(this.header);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getHeaderRecord(this.header);	  String[]    headerRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  final  Map  <  String,  Object>  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  Map  <  String,  Object>  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  Map  <  String,  Object>  formatHeader  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  if(headerRecord!=  null)  {  final  CSVFormat  formatHeader  =  this.format.getSkipHeaderRecord();  headerRecord  =  formatHeader.values();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(headerRecord!=  null)  {  final  CSVFormat  formatHeader  =  this.format.getSkipHeaderRecord();  headerRecord  =  formatHeader.values();  }  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	if(headerRecord!=  null)  {  final  CSVFormat  formatHeader  =  this.format.getSkipHeaderRecord();  headerRecord  =  formatHeader.values();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  final  Map  <  String,  Object>  formatHeader  =  this.format.getFormatHeader();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  final  Map  <  String,  Object>  formatHeader  =  this.format.getFormatHeader();  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	final  Map  <  String,  Object>  formatHeader  =  this.format.getFormatHeader();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().toString()  ];  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().toString()  ];  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().toString()  ];	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values()    ];    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().length()  ]);  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().length()  ]);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  new  String[this.format.getHeaderRecord().values().toArray(new  String[this.format.getHeaderRecord().length()  ]);	  String[]    headerRecord    =    new    String[this.format.getHeaderRecord().values().size()    ];    	non-compiled	[CE]  ')'  expected	8	None	replace
32	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(this.header);  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(this.header);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getHeaderRecords(this.header);	  String[]    headerRecord    =    this.format.getHeaderRecords();    	non-compiled	[CE]  ')'  expected	2	None	replace
33	[BUG]  [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(this);  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  headerRecord  =  this.format.getHeaderRecords(this);  [BUGGY]    if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  headerRecord  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	String[]  headerRecord  =  this.format.getHeaderRecords(this);	  String[]    headerRecord    =    this.format.getHeaderRecords();    	non-compiled	[CE]  ')'  expected	2	None	replace
