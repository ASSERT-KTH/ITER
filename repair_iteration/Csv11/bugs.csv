bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this.record.add(input.equalsIgnoreCase(nullString) ? null : input); [FE] NullPointerException [CONTEXT] [BUGGY] this.record.add(input.equalsIgnoreCase(nullString) ? null : input); [BUGGY] } } [CLASS] CSVParser 1 [METHOD] addRecordValue [RETURN_TYPE] void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] this.record.add(input.equalsIgnoreCase(nullString) ? null : input); } } [CLASS] CSVParser 1 [METHOD] addRecordValue [RETURN_TYPE] void  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	1.0	259	259	1	add	
3	[BUG] [BUGGY] final CSVRecord nextRecord = this.nextRecord(); [FE] NullPointerException [CONTEXT] [BUGGY] final CSVRecord nextRecord = this.nextRecord(); [BUGGY] if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }  [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }  [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	368	368	1	add	
5	[BUG] [BUGGY] if (nextRecord != null) { [FE] NullPointerException [CONTEXT] [BUGGY] if (nextRecord != null) { [BUGGY] headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }   [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }   [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	add	
7	[BUG] [BUGGY] headerRecord = nextRecord.values(); [FE] NullPointerException [CONTEXT] [BUGGY] headerRecord = nextRecord.values(); [BUGGY] } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }  if (headerRecord != null) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; }  if (headerRecord != null) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	add	
9	[BUG] [BUGGY] } else { [FE] NullPointerException [CONTEXT] [BUGGY] } else { [BUGGY] if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	372	372	1	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	372	372	1	add	
11	[BUG] [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); [FE] NullPointerException [CONTEXT] [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); [BUGGY]  String[] headerRecord = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	363	363	1	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); String[] headerRecord = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	363	363	1	add	
13	[BUG] [BUGGY] String[] headerRecord = null; [FE] NullPointerException [CONTEXT] [BUGGY] String[] headerRecord = null; [BUGGY] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] String[] headerRecord = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	365	365	1	add	
15	[BUG] [BUGGY] if (formatHeader.length == 0) { [FE] NullPointerException [CONTEXT] [BUGGY] if (formatHeader.length == 0) { [BUGGY]  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	replace	
16	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { headerRecord = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } headerRecord = formatHeader; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	366	366	1	add	
17	[BUG] [BUGGY] if (headerRecord != null) { [FE] NullPointerException [CONTEXT] [BUGGY] if (headerRecord != null) { [BUGGY] for (int i = 0; i < headerRecord.length; i++) { final String header = headerRecord[i]; final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	380	380	1	replace	
18	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (headerRecord != null) { for (int i = 0; i < headerRecord.length; i++) { final String header = headerRecord[i]; final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	380	380	1	add	
19	[BUG] [BUGGY] for (int i = 0; i < headerRecord.length; i++) { [FE] NullPointerException [CONTEXT] [BUGGY] for (int i = 0; i < headerRecord.length; i++) { [BUGGY] final String header = headerRecord[i]; final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	381	381	1	replace	
20	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (int i = 0; i < headerRecord.length; i++) { final String header = headerRecord[i]; final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	381	381	1	add	
21	[BUG] [BUGGY] final String header = headerRecord[i]; [FE] NullPointerException [CONTEXT] [BUGGY] final String header = headerRecord[i]; [BUGGY] final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	replace	
22	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final String header = headerRecord[i]; final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	382	382	1	add	
23	[BUG] [BUGGY] final boolean containsHeader = hdrMap.containsKey(header); [FE] NullPointerException [CONTEXT] [BUGGY] final boolean containsHeader = hdrMap.containsKey(header); [BUGGY] final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	replace	
24	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final boolean containsHeader = hdrMap.containsKey(header); final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	383	383	1	add	
25	[BUG] [BUGGY] final boolean emptyHeader = header.trim().isEmpty(); [FE] NullPointerException [CONTEXT] [BUGGY] final boolean emptyHeader = header.trim().isEmpty(); [BUGGY] if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	replace	
26	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] final boolean emptyHeader = header.trim().isEmpty(); if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	384	384	1	add	
27	[BUG] [BUGGY] if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { [FE] NullPointerException [CONTEXT] [BUGGY] if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { [BUGGY] throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	385	385	1	replace	
28	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) { throw new IllegalArgumentException("The header contains a duplicate name: \"" + header + "\" in " + Arrays.toString(headerRecord)); } hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	385	385	1	add	
29	[BUG] [BUGGY] hdrMap.put(header, Integer.valueOf(i)); [FE] NullPointerException [CONTEXT] [BUGGY] hdrMap.put(header, Integer.valueOf(i)); [BUGGY] } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	389	389	1	replace	
30	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] hdrMap.put(header, Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  	projects/Csv11/src/main/java/org/apache/commons/csv/CSVParser.java	0.2672612419124244	389	389	1	add	
