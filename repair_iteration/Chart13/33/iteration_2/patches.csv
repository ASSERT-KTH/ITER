bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
2	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
4	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
5	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
6	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
7	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
8	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
10	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
11	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	24	1	replace
12	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	24	1	replace
13	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	24	1	replace
14	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	24	1	replace
15	[BUG]  [BUGGY]  int  w[0]  =  constraint.getWidth();  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  int  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	int  w[0]  =  constraint.getWidth();	  w[0]    =    constraint.getHeight();    int    w[0]    =    constraint.getHeight();    	non-compiled	[CE]  ']'  expected	13	None	replace
16	[BUG]  [BUGGY]  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	double[]  w  =  new  double[5];  double[]  h  =  new  double[5];	  if(constraint.getWidth()    >    LengthConstraintType.RANGE)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	20	None	replace
17	[BUG]  [BUGGY]  RectangleConstraint  w  =  constraint.getWidth();  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  RectangleConstraint  w  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	RectangleConstraint  w  =  constraint.getWidth();	  if(constraint.getWidth()    >    LengthConstraintType.RANGE)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	20	None	replace
18	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
19	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
20	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth()    +    1;    w[1]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
21	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getWidth()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth()    +    1;    w[1]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
22	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[2]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth()    +    1;    w[2]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
23	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[2]  =  constraint.getWidth()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[2]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth()    +    1;    w[2]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
24	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth()    +    1;    w[1]  =  constraint.getHeight()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
25	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getHeight()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[1]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth()    +    1;    w[1]  =  constraint.getHeight()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
26	[BUG]  [BUGGY]  double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	double[]  w  =  new  double[1];  double[]  h  =  new  double[1];	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[1];    double[]    h    =    new    double[1];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	27	None	replace
27	[BUG]  [BUGGY]  RectangleConstraint  w  =  constraint.getHeight();  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  RectangleConstraint  w  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	RectangleConstraint  w  =  constraint.getHeight();	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[1];    double[]    h    =    new    double[1];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	27	None	replace
28	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
29	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
30	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
31	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
32	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  size[0]  =  constraint.getWidth();  [CE]  cannot  find  symbol  size  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  size[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  size[0]  =  constraint.getWidth();	  	non-compiled	[CE]  cannot  find  symbol  size	11	None	add
33	[BUG]  [BUGGY]  if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[0];  double[]  h  =  new  double[0];  }  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[0];  double[]  h  =  new  double[0];  }  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[0];  double[]  h  =  new  double[0];  }	          if(constraint.getWidth()    ==    0.0)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	21	None	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
35	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
36	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
37	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
38	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
39	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	7	1	add
40	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getHeight();    w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
41	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getHeight();    w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
42	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getHeight();    w[2]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
43	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getHeight();    w[2]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
44	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
45	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
46	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
47	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
48	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
49	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
50	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
51	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
52	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	8	1	replace
53	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	8	1	replace
54	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getHeight()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
55	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getHeight()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
56	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
57	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
58	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  int  w[0]  =  constraint.getHeight()  +  1;  [CE]  ']'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  int  w[0]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight()    +    1;    int  w[0]  =  constraint.getHeight()  +  1;	  	non-compiled	[CE]  ']'  expected	1	None	add
59	[BUG]  [BUGGY]  Size2D  size  =  constraint.getHeight();  [CE]  incompatible  types  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  Size2D  size  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Size2D  size  =  constraint.getHeight();	  w[0]    =    constraint.getHeight();    Size2D    size    =    constraint.getHeight();    	non-compiled	[CE]  incompatible  types	19	None	replace
60	[BUG]  [BUGGY]  size  =  constraint.getHeight();  [CE]  cannot  find  symbol  size  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  size  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	size  =  constraint.getHeight();	  w[0]    =    constraint.getHeight();    Size2D    size    =    constraint.getHeight();    	non-compiled	[CE]  cannot  find  symbol  size	19	None	replace
61	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
62	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
63	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
64	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
65	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
66	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
67	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getHeight()  +  1;	  w[1]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	16	1	replace
68	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight()  +  1;	  w[1]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	16	1	replace
69	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	12	1	replace
70	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	12	1	replace
71	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
72	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
73	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
74	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
75	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
76	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
77	[BUG]  [BUGGY]  double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	double[]  w  =  new  double[2];  double[]  h  =  new  double[2];	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[2];    double[]    h    =    new    double[2];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	26	None	replace
78	[BUG]  [BUGGY]  []  w  =  new  double[2];  double[]  h  =  new  double[2];  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  []  w  =  new  double[2];  double[]  h  =  new  double[2];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	[]  w  =  new  double[2];  double[]  h  =  new  double[2];	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[2];    double[]    h    =    new    double[2];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  Double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  Double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Double[]  w  =  new  double[2];  double[]  h  =  new  double[2];	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[2];    double[]    h    =    new    double[2];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	26	None	replace
80	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  Size2D  size  =  constraint.getHeight()  +  1;  [CE]  incompatible  types  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  Size2D  size  =  constraint.getHeight()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight()    +    1;    Size2D  size  =  constraint.getHeight()  +  1;	  	non-compiled	[CE]  incompatible  types	1	None	add
81	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
82	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
83	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
84	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[2]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[2]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	add
85	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight());  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight());  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight());	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getHeight());    	non-compiled	[CE]  ';'  expected	22	None	replace
86	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight());  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight());  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight();  w[1]  =  constraint.getHeight());	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getHeight());    	non-compiled	[CE]  ';'  expected	22	None	replace
87	[BUG]  [BUGGY]  RectangleConstraint  constraint  =  constraint.getWidth();  [CE]  variable  constraint  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  RectangleConstraint  constraint  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	RectangleConstraint  constraint  =  constraint.getWidth();	          if(constraint.getWidth()    ==    0.0)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  constraint  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	21	None	replace
88	[BUG]  [BUGGY]  Double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  Double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Double[]  w  =  new  double[5];  double[]  h  =  new  double[5];	  if(constraint.getWidth()    >    LengthConstraintType.RANGE)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	20	None	replace
89	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth()  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth()  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth()	  	non-compiled	[CE]  ';'  expected	11	None	add
90	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
91	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
92	[BUG]  [BUGGY]  Double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  Double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Double[]  w  =  new  double[1];  double[]  h  =  new  double[1];	          if(constraint.getHeight()    >    LengthConstraintType.FIXED)    {    double[]    w    =    new    double[1];    double[]    h    =    new    double[1];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	27	None	replace
93	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	10	1	replace
94	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  w[0]    =    constraint.getHeight();    w[0]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	10	1	replace
95	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  2;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getHeight()  +  2;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
96	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  2;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  w[0]  =  constraint.getHeight()  +  2;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight()    +    1;    w[0]  =  constraint.getHeight()  +  2;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
97	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
98	[BUG]  [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	23	1	add
99	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
100	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  w[1]    =    constraint.getWidth();    w[2]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
101	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
102	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
103	[BUG]  [BUGGY]  if(constraint.getWidth()  >  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  if(constraint.getWidth()  >  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	if(constraint.getWidth()  >  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }	          if(constraint.getWidth()    ==    0.0)    {    double[]    w    =    new    double[5];    double[]    h    =    new    double[5];    }    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	21	None	replace
104	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth()    +    1;    w[0]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
105	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  w[0]  =  constraint.getWidth()  +  1;  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth()    +    1;    w[0]  =  constraint.getWidth()  +  1;	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	17	1	add
106	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
107	[BUG]  [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]        =        constraint.getHeight();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	9	1	add
108	[BUG]  [BUGGY]  Size2D  size  =  constraint.getWidth();  [CE]  incompatible  types  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];      [BUGGY]  Size2D  size  =  constraint.getWidth();  [BUGGY]      if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Size2D  size  =  constraint.getWidth();	  w[0]    =    constraint.getHeight();    Size2D    size    =    constraint.getHeight();    	non-compiled	[CE]  incompatible  types	19	None	replace
