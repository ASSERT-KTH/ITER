bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]  =  constraint.getHeight()  +  1;	  w[0]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	2	1	replace
2	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight()  +  1;  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]  =  constraint.getHeight()  +  1;	  w[0]    =    constraint.getHeight();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	2	1	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
4	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
5	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
6	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth();    w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
7	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
8	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth();    w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
10	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
11	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
12	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	1	1	add
13	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  int  w[0]  =  constraint.getHeight();  [CE]  ']'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  int  w[0]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight();    int  w[0]  =  constraint.getHeight();	  	non-compiled	[CE]  ']'  expected	1	None	add
14	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  w);  [CE]  no  suitable  method  found  for  arrange(Graphics2D,double[])  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  w);  [BUGGY]    w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  w);	      Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,double[])	7	None	replace
15	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
16	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
17	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]  =  constraint.getWidth()  +  1;	  w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
18	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth()  +  1;  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]  =  constraint.getWidth()  +  1;	  w[1]    =    constraint.getWidth();    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	4	1	replace
19	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  Size2D  size  =  constraint.getHeight();  [CE]  incompatible  types  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  Size2D  size  =  constraint.getHeight();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight();    Size2D  size  =  constraint.getHeight();	  	non-compiled	[CE]  incompatible  types	1	None	add
20	[BUG]  [BUGGY]  if(constraint.getWidth()  >  LengthConstraintType.RANGE)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  if(constraint.getWidth()  >  LengthConstraintType.RANGE)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	if(constraint.getWidth()  >  LengthConstraintType.RANGE)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	6	None	replace
21	[BUG]  [BUGGY]      if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]      if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	        if(constraint.getWidth()  ==  0.0)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }	  	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	5	None	add
22	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight());  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight());  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight());	  	non-compiled	[CE]  ';'  expected	1	None	add
23	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	add	w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
24	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
25	[BUG]  [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	        if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5	None	add
26	[BUG]  [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  }  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	        if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[2];  double[]  h  =  new  double[2];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5	None	add
27	[BUG]  [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];  double[]  h  =  new  double[5];    [BUGGY]      if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  }  [BUGGY]    if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	426	426	1	replace	        if(constraint.getHeight()  >  LengthConstraintType.FIXED)  {  double[]  w  =  new  double[1];  double[]  h  =  new  double[1];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5	None	add
