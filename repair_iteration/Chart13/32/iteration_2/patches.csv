bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  []  h  =  new  double[5];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  []  h  =  new  double[5];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	[]  h  =  new  double[5];	  double[]    h    =    new    double[2];    h    =    new    double[2];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
2	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
3	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
4	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
5	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
6	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
7	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[2]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	15	1	add
8	[BUG]  [BUGGY]  double[]  h  =  new  double[4];  double[]  h  =  new  double[4];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[4];  double[]  h  =  new  double[4];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[4];    double[]  h  =  new  double[4];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
9	[BUG]  [BUGGY]  double[]  h  =  new  double[4];  Double[]  h  =  new  double[4];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[4];  Double[]  h  =  new  double[4];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[4];    Double[]  h  =  new  double[4];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
10	[BUG]  [BUGGY]  double[]  h  =  new  double[4];  boolean[]  h  =  new  double[4];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[4];  boolean[]  h  =  new  double[4];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[4];    boolean[]  h  =  new  double[4];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
11	[BUG]  [BUGGY]  boolean[]  h  =  new  double[5];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  boolean[]  h  =  new  double[5];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	boolean[]  h  =  new  double[5];	  double[]    h    =    new    double[2];    boolean[]    h    =    new    double[2];    	non-compiled	[CE]  incompatible  types	25	None	replace
12	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
13	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
14	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
15	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
16	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
17	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
18	[BUG]  [BUGGY]  w[1]  =  constraint.getHeight();  [CE]  cannot  find  symbol  h  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	w[1]  =  constraint.getHeight();	  w[1]    =    constraint.getWidth();    	non-compiled	[CE]  cannot  find  symbol  h	18	None	replace
19	[BUG]  [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [CE]  cannot  find  symbol  h  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	w[0]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	          w[0]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	non-compiled	[CE]  cannot  find  symbol  h	16	None	replace
20	[BUG]  [BUGGY]  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [CE]  cannot  find  symbol  h  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();	          w[0]    =    constraint.getWidth();    w[1]    =    constraint.getWidth();    	non-compiled	[CE]  cannot  find  symbol  h	16	None	replace
21	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
22	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
23	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
24	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
25	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
26	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[0]  =  constraint.getHeight();  w[0]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
27	[BUG]  [BUGGY]  double[]  w  =  new  double[1];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  w  =  new  double[1];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]  w  =  new  double[1];	  double[]    h    =    new    double[1];    double[]    h    =    new    double[5];    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	7	None	replace
28	[BUG]  [BUGGY]  Double[]  h  =  new  double[5];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  Double[]  h  =  new  double[5];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	Double[]  h  =  new  double[5];	  double[]    h    =    new    double[1];    Double[]    h    =    new    double[1];    	non-compiled	[CE]  incompatible  types	27	None	replace
29	[BUG]  [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [CE]  cannot  find  symbol  h  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	          w[0]    =    constraint.getWidth();    w[0]    =    constraint.getHeight();    	non-compiled	[CE]  cannot  find  symbol  h	14	None	replace
30	[BUG]  [BUGGY]  double[]  h  =  new  double[6];  double[]  h  =  new  double[6];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[6];  double[]  h  =  new  double[6];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[6];    double[]  h  =  new  double[6];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	3	None	add
31	[BUG]  [BUGGY]  double[]  h  =  new  double[6];  Double[]  h  =  new  double[6];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[6];  Double[]  h  =  new  double[6];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[6];    Double[]  h  =  new  double[6];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	3	None	add
32	[BUG]  [BUGGY]  double[]  h  =  new  double[6];  double[]  h  =  new  double[7];  [CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  h  =  new  double[6];  double[]  h  =  new  double[7];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]    h    =    new    double[6];    double[]  h  =  new  double[7];	  	non-compiled	[CE]  variable  h  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	3	None	add
33	[BUG]  [BUGGY]  double[]  w  =  new  double[6];  [CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  double[]  w  =  new  double[6];  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	double[]  w  =  new  double[6];	  double[]    w    =    new    double[4];    	non-compiled	[CE]  variable  w  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	22	None	replace
34	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  double[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  double[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    double[0]  =  constraint.getWidth();  w[0]  =  constraint.getWidth();	  	non-compiled	[CE]  ']'  expected	11	None	add
35	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
36	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
37	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  double[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[1]  =  constraint.getWidth();  double[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[1]    =    constraint.getWidth();    double[0]  =  constraint.getWidth();  w[1]  =  constraint.getWidth();	  	non-compiled	[CE]  ']'  expected	15	None	add
38	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  double[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  double[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    double[0]  =  constraint.getWidth();  w[0]  =  constraint.getHeight();	  	non-compiled	[CE]  ']'  expected	13	None	add
39	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	add	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
40	[BUG]  [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]          w[0]    =    constraint.getWidth();    w[0]  =  constraint.getHeight();  w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();  [BUGGY]      double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	                w[0]        =        constraint.getWidth();        w[0]    =    constraint.getHeight();    w[1]  =  constraint.getWidth();  w[1]  =  constraint.getHeight();	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	13	1	add
41	[BUG]  [BUGGY]  boolean[]  h  =  new  double[2];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      RectangleConstraint  constraint)  {  double[]  w  =  new  double[5];      [BUGGY]  boolean[]  h  =  new  double[2];  [BUGGY]      w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  w[1]  =  w[0];  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	425	425	1	replace	boolean[]  h  =  new  double[2];	  double[]    h    =    new    double[2];    boolean[]    h    =    new    double[2];    	non-compiled	[CE]  incompatible  types	25	None	replace
