bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE,  w);  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE,  w);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE,  w);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    width),    LengthConstraintType.FIXED,    0.0,    null,    LengthConstraintType.NONE,    h);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[0]  =  size.width;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[0]  =  size.width;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[0]  =  size.width;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    w[0]    =    size.width;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    w[0]    =    size.width;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
5	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
6	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c2    =    new    RectangleConstraint(width,    null,    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	w[2]  =  size.width;  h[2]  =  size.height;	  w[1]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
12	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[1]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
14	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
16	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
17	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }  [CE]  cannot  find  symbol  c2  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	non-compiled	[CE]  cannot  find  symbol  c2	3	None	add
18	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c2);    w[1]    =    size.width;    h[1]    =    size.height;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	h[0]  =  size.height;	  w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    width,    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  ')'  expected	16	None	replace
23	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    width,    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  ')'  expected	16	None	replace
24	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.NONE,  0.0,  null,  LengthConstraintType.FIXED);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.NONE,  0.0,  null,  LengthConstraintType.FIXED);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.NONE,  0.0,  null,  LengthConstraintType.FIXED);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    width),    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.FIXED);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
26	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;	          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
28	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
30	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
32	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
33	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
36	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
38	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
39	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }  [CE]  cannot  find  symbol  c2  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	non-compiled	[CE]  cannot  find  symbol  c2	6	None	add
40	[BUG]  [BUGGY]  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  h[1]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	h[1]  =  size.height;	  w[1]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    w[1]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
43	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
45	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
47	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
48	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    height),    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    height),    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
52	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
53	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(width,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(width,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(width,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.FIXED);	  RectangleConstraint    c2    =    new    RectangleConstraint(width,    null,    LengthConstraintType.FIXED,    0.0,    null,    LengthConstraintType.RANGE);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }  [CE]  cannot  find  symbol  c2  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	non-compiled	[CE]  cannot  find  symbol  c2	26	None	add
55	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    height),    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
57	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
58	[BUG]  [BUGGY]  if(this.topBlock!=  null)  {  w[1]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.topBlock!=  null)  {  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.topBlock!=  null)  {  w[1]  =  size.width;  h[1]  =  size.height;  }	  w[1]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
59	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE	  RectangleConstraint    c2    =    new    RectangleConstraint(0.0,    new    Range(0.0,    width),    LengthConstraintType.FIXED,    0.0,    null,    LengthConstraintType.NONE,    h);    	non-compiled	[CE]  ')'  expected	33	None	replace
60	[BUG]  [BUGGY]  if(this.topBlock!=  null)  {  w[0]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.topBlock!=  null)  {  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.topBlock!=  null)  {  w[0]  =  size.width;  h[1]  =  size.height;  }	  w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
61	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[2]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
64	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
65	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[0]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c2);    w[1]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  w[0]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  w[0]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	w[0]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
67	[BUG]  [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE);  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE);  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	RectangleConstraint  c2  =  new  RectangleConstraint(w,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.RANGE);	  RectangleConstraint    c2    =    new    RectangleConstraint(w,    null,    LengthConstraintType.FIXED,    0.0,    null,    LengthConstraintType.NONE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
69	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[0]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
70	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[1]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[1]  =  size.width;  h[1]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[1]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  w[2]  =  size.width;  h[0]  =  size.height;  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  w[2]  =  size.width;  h[0]  =  size.height;  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	w[2]  =  size.width;  h[0]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[2]    =    size.width;    h[0]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[0]  =  size.width;  h[1]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
73	[BUG]  [BUGGY]  w[0]  =  size.width;  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  w[0]  =  size.width;  [BUGGY]      Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	w[0]  =  size.width;	  Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    w[0]    =    size.width;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	add	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
75	[BUG]  [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]          if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	                if(this.rightBlock!=        null)        {        Size2D        size        =        this.rightBlock.arrange(g2,        c1);        w[1]        =        size.width;        h[1]        =        size.height;        }        if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[1]    =    size.width;    h[1]    =    size.height;    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[0]  =  size.height;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
76	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[0]  =  size.width;  h[1]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c2);    w[0]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      double[]  w  =  new  double[5];  double[]  h  =  new  double[5];  RectangleConstraint  c1  =  new  RectangleConstraint(width,  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  if  (this.topBlock  !=  null)  {  Size2D  size  =  this.topBlock.arrange(g2,  c1);  w[0]  =  size.width;  h[0]  =  size.height;  }      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }  [BUGGY]      if  (this.bottomBlock  !=  null)  {  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[1]  =  size.width;  h[1]  =  size.height;  }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	287	287	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[1]  =  size.width;  h[1]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c2);    w[1]    =    size.width;    h[1]    =    size.height;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
