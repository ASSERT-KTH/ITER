bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.bottomBlock!=  null)  {  If(this.bottomBlock  ==  null)  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.bottomBlock!=  null)  {  If(this.bottomBlock  ==  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.bottomBlock!=  null)  {  If(this.bottomBlock  ==  null)  {	  if(this.rightBlock    ==    null)    {    If(this.rightBlock    ==    null)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
2	[BUG]  [BUGGY]  w[3]  =  size.width;  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  w[3]  =  size.width;  [BUGGY]      if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	w[3]  =  size.width;	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    w[3]    =    size.width;    	non-compiled	[CE]  ']'  expected	1	None	replace
3	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  If(this.rightBlock!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.rightBlock!=  null)  {  If(this.rightBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.rightBlock!=  null)  {  If(this.rightBlock!=  null)  {	  if(this.bottomBlock!=    null)    {    If(this.bottomBlock!=    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
4	[BUG]  [BUGGY]  If(this.rightBlock!=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  If(this.rightBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	If(this.rightBlock!=  null)  {	  if(this.bottomBlock!=    null)    {    If(this.bottomBlock!=    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
5	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  if(this.leftBlock!=  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.leftBlock!=  null)  {  if(this.leftBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.leftBlock!=    null)    {    if(this.leftBlock!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
6	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  if(this.leftBlock  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.leftBlock!=  null)  {  if(this.leftBlock  ==  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.leftBlock!=    null)    {    if(this.leftBlock  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
7	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  if(this.rightBlock!=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.leftBlock!=  null)  {  if(this.rightBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.leftBlock!=    null)    {    if(this.rightBlock!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
8	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  If(this.leftBlock!=  null)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(this.leftBlock!=  null)  {  If(this.leftBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(this.leftBlock!=    null)    {    If(this.leftBlock!=  null)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          NullPointerException      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(rightBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	add	if(rightBlock!=  null)  {	  if(this.bottomBlock!=    null)    {    if(this.bottomBlock    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	replace
10	[BUG]  [BUGGY]  if(rightBlock!=  null)  {  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          NullPointerException      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  if(rightBlock!=  null)  {  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	if(rightBlock!=  null)  {	  if(this.bottomBlock!=    null)    {    if(this.bottomBlock    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	replace
11	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  w[3]  =  size.width;  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  w[3]  =  size.width;  [BUGGY]      if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  w[3]  =  size.width;	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    w[3]    =    size.width;    	non-compiled	[CE]  ']'  expected	1	None	replace
12	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c5);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c5);  [BUGGY]      if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	453	453	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c5);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	non-compiled	[CE]  ']'  expected	8	None	replace
