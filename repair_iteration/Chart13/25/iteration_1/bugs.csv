bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]      -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,          LengthConstraintType.NONE);  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);		non-compiled	[CE]  ']'  expected	50	None	add
2	[BUG]  [BUGGY]    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  cannot  find  symbol  c3  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]      -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,          LengthConstraintType.NONE);  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	    Size2D  size  =  this.centerBlock.arrange(g2,  c3);		non-compiled	[CE]  cannot  find  symbol  c3	50	None	add
3	[BUG]  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [CE]  ']'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]      -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,          LengthConstraintType.NONE);  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;		non-compiled	[CE]  ']'  expected	50	None	add
4	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0,  0,  null,  LengthConstraintType.NONE);  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,<null>,LengthConstraintType,int,int,<null>,LengthConstraintType)  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0,  0,  null,  LengthConstraintType.NONE);  [BUGGY]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0,  0,  null,  LengthConstraintType.NONE);	RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]    -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,      LengthConstraintType.NONE);  	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,<null>,LengthConstraintType,int,int,<null>,LengthConstraintType)	49	None	replace
5	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  this.centerBlock[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [CE]  array  required,  but  Block  found  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  this.centerBlock[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(width  -  this.centerBlock[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);	RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]    -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,      LengthConstraintType.NONE);  	non-compiled	[CE]  array  required,  but  Block  found	49	None	replace
6	[BUG]  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c2);  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]      -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,          LengthConstraintType.NONE);  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c2);		non-compiled	[CE]  ']'  expected	50	None	add
7	[BUG]  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  Math.max(w[2],  w[3]);  [CE]  ']'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  [BUGGY]    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  Math.max(w[2],  w[3]);  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]      -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,          LengthConstraintType.NONE);  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));  return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	315	317	1	replace	    Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  Math.max(w[2],  w[3]);		non-compiled	[CE]  ']'  expected	50	None	add
