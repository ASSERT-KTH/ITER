bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      double  height  =  Math.min(w[2],  0.0);  double  height  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  double  height  =  Math.min(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	        double    height    =    Math.min(w[2],    0.0);    double  height  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
2	[BUG]  [BUGGY]      double  height  =  Math.min(w[2],  0.0);  Double  height  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  Double  height  =  Math.min(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	        double    height    =    Math.min(w[2],    0.0);    Double  height  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
3	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	        double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
4	[BUG]  [BUGGY]      double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	        double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
5	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width);	      double    width    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	replace
6	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth());  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth());  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth());	      double    width    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	replace
7	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [CE]  cannot  find  symbol  c4  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c4);	      Size2D    size    =    this.rightBlock.arrange(g2,    c1);    	non-compiled	[CE]  cannot  find  symbol  c4	2	None	replace
8	[BUG]  [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c1);  [CE]  incompatible  types  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c1);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  this.rightBlock.arrange(g2,  c1);	      w[2]    =    this.rightBlock.arrange(g2,    c2);    	non-compiled	[CE]  incompatible  types	10	None	replace
9	[BUG]  [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c3);  [CE]  cannot  find  symbol  c3  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c3);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  this.rightBlock.arrange(g2,  c3);	      w[2]    =    this.rightBlock.arrange(g2,    c2);    	non-compiled	[CE]  cannot  find  symbol  c3	10	None	replace
10	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	double  maxW  =  Math.max(width  *  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
11	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  *  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
12	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  0.0);  [CE]  array  required,  but  Block  found  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  array  required,  but  Block  found	6	None	replace
13	[BUG]  [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c1);  [CE]  ']'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c1);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Size2D  w[2]  =  this.rightBlock.arrange(g2,  c1);	      Size2D    w[2]    =    this.rightBlock.arrange(g2,    c2);    	non-compiled	[CE]  ']'  expected	8	None	replace
14	[BUG]  [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c3);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c3);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Size2D  w[2]  =  this.rightBlock.arrange(g2,  c3);	      Size2D    w[2]    =    this.rightBlock.arrange(g2,    c2);    	non-compiled	[CE]  ']'  expected	8	None	replace
15	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  double  maxW  =  Math.max(width  /  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  double  maxW  =  Math.max(width  /  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    /    w[2],    0.0);    double  maxW  =  Math.max(width  /  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
16	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  Double  maxW  =  Math.max(width  /  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  Double  maxW  =  Math.max(width  /  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    /    w[2],    0.0);    Double  maxW  =  Math.max(width  /  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
17	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  w[2]  =  Math.max(width  /  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  w[2]  =  Math.max(width  /  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    /    w[2],    0.0);    w[2]  =  Math.max(width  /  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
18	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  width,  0.0);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.max(width  -  w[2],  width,  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  width,  0.0);	  double    maxW    =    Math.max(width    -    w[2],    height,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	4	None	replace
19	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0);	  double    maxW    =    Math.max(width    -    w[2],    height,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	4	None	replace
20	[BUG]  [BUGGY]  double  height  =  Math.max(w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.max(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(w[2],  0.0);	      double    height    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	12	None	replace
21	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW);  [CE]  variable  maxW  might  not  have  been  initialized  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  maxW);	  double    maxW    =    Math.max(width    -    w[2],    height);    	non-compiled	[CE]  variable  maxW  might  not  have  been  initialized	9	None	replace
22	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h);  [CE]  no  suitable  method  found  for  max(double,double[])  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  h);	  double    maxW    =    Math.max(width    -    w[2],    height);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[])	9	None	replace
23	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  float  maxW  =  Math.max(width  /  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  float  maxW  =  Math.max(width  /  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    /    w[2],    0.0);    float  maxW  =  Math.max(width  /  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
24	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  height);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  width  =  Math.min(w[2],  0.0,  height);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  height);	      double    width    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	replace
25	[BUG]  [BUGGY]      double  height  =  Math.min(w[2],  0.0);  float  height  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  float  height  =  Math.min(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	        double    height    =    Math.min(w[2],    0.0);    float  height  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
26	[BUG]  [BUGGY]  double  height  =  Math.min(width[2],  0.0);  [CE]  array  required,  but  double  found  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.min(width[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.min(width[2],  0.0);	      double    height    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  array  required,  but  double  found	12	None	replace
27	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW,  0.0);  [CE]  cannot  find  symbol  maxW  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW,  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  maxW,  0.0);	  double    maxW    =    Math.max(width    -    w[2],    height,    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	4	None	replace
28	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW);  [CE]  cannot  find  symbol  maxW  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  maxW);	  double    maxW    =    Math.max(width    -    w[2],    height);    	non-compiled	[CE]  cannot  find  symbol  maxW	9	None	replace
29	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  double  maxW  =  Math.max(width  /  w[2],  1.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0);  double  maxW  =  Math.max(width  /  w[2],  1.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    /    w[2],    0.0);    double  maxW  =  Math.max(width  /  w[2],  1.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
30	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.w[2],  0.0);  [CE]  cannot  find  symbol  w  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock.w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  w	6	None	replace
31	[BUG]  [BUGGY]  double  width  =  Math.max(width  -  w[2],  h);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  width  =  Math.max(width  -  w[2],  h);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  -  w[2],  h);	  double    maxW    =    Math.max(width    -    w[2],    height);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	replace
32	[BUG]  [BUGGY]      double  height  =  Math.min(w[2],  0.0);  double  height  =  Math.max(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]      double  height  =  Math.min(w[2],  0.0);  double  height  =  Math.max(w[2],  0.0);  [BUGGY]    double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	        double    height    =    Math.min(w[2],    0.0);    double  height  =  Math.max(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
33	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {    [BUGGY]  double  height  =  Math.max(width  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  0.0);	  double    maxW    =    Math.max(width    -    w[2],    height,    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	4	None	replace
