bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  cannot  find  symbol  c3  [FE]    NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	non-compiled	[CE]  cannot  find  symbol  c3	2	None	replace
2	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [CE]  cannot  find  symbol  c1  [FE]      NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	non-compiled	[CE]  cannot  find  symbol  c1	2	None	replace
3	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [CE]  cannot  find  symbol  c3  [FE]    NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.topBlock.arrange(g2,  c3);	  Size2D    size    =    this.topBlock.arrange(g2,    c4);    	non-compiled	[CE]  cannot  find  symbol  c3	9	None	replace
4	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c1);  [CE]  cannot  find  symbol  c1  [FE]      NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.topBlock.arrange(g2,  c1);	  Size2D    size    =    this.topBlock.arrange(g2,    c4);    	non-compiled	[CE]  cannot  find  symbol  c1	9	None	replace
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c4);	      	compilable	  [FE]  NullPointerException  	4	1	replace
6	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c4);	      	compilable	  [FE]  NullPointerException  	4	1	replace
7	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [CE]  cannot  find  symbol  c5  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c5);	  Size2D    size    =    this.rightBlock.arrange(g2,    c3);    	non-compiled	[CE]  cannot  find  symbol  c5	3	None	replace
8	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	1	None	add
9	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	1	None	add
10	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    Size2D  size  =  this.bottomBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	1	None	add
11	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  [CE]  cannot  find  symbol  c1  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  c1	6	None	replace
12	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.topBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.topBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.topBlock.arrange(g2,    c4);    Size2D  size  =  this.topBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
13	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.topBlock.arrange(g2,    c4);    Size2D  size  =  this.topBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
14	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.topBlock.arrange(g2,    c4);    Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	8	None	add
15	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[3]  =  size.width;  [CE]  cannot  find  symbol  c1  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  w[3]  =  size.width;	      Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  c1	7	None	replace
16	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  [CE]  cannot  find  symbol  c3  [FE]              java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;	      Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  c3	7	None	replace
17	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4));  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4));  [BUGGY]    w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    Size2D  size  =  this.bottomBlock.arrange(g2,  c4));	  	non-compiled	[CE]  ';'  expected	1	None	add
18	[BUG]  [BUGGY]  w[3]  =  size.width;  [CE]  cannot  find  symbol  size  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);    [BUGGY]  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	458	458	1	replace	w[3]  =  size.width;	      Size2D    size    =    this.rightBlock.arrange(g2,    c4);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
