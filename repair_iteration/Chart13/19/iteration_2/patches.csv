bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	43	1	replace
2	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	43	1	replace
3	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	38	None	add
4	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	38	None	add
5	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	38	None	add
6	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	40	None	add
7	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	40	None	add
8	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	40	None	add
9	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    Size2D  size  =  this.rightBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
10	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    Size2D  size  =  this.leftBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
11	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  Size2D  size  =  this.rightBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    Size2D  size  =  this.rightBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
12	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.topBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D    size    =    this.topBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	35	1	replace
13	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.topBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D    size    =    this.topBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	35	1	replace
14	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	add
15	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    Size2D  size  =  this.centerBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	add
16	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    Size2D  size  =  this.centerBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	add
17	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	22	None	add
18	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	22	None	add
19	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	22	None	add
20	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	17	None	add
21	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	17	None	add
22	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	17	None	add
23	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
24	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
25	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
26	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    Size2D  size  =  this.bottomBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	13	None	add
27	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	13	None	add
28	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    Size2D  size  =  this.bottomBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	13	None	add
29	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	add
30	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	add
31	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	add
32	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
33	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
34	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
35	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	33	None	add
36	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	33	None	add
37	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	33	None	add
38	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[2]  =  size.width;  h[2]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	compilable	  [FE]  NullPointerException  	34	1	replace
39	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[2]  =  size.width;  h[2]  =  size.height;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[2]  =  size.width;  h[2]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	compilable	  [FE]  NullPointerException  	34	1	replace
40	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
41	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
42	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
43	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
44	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
45	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
46	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	42	None	add
47	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	42	None	add
48	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	42	None	add
49	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;	  Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	8	1	replace
50	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;	  Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	8	1	replace
51	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	15	None	add
52	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	15	None	add
53	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	15	None	add
54	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    Size2D  size  =  this.leftBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
55	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    Size2D  size  =  this.leftBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
56	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    Size2D  size  =  this.leftBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	11	None	add
57	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D    size    =    this.centerBlock.arrange(g2,    c1);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	26	None	replace
58	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
59	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
60	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	43	1	replace
61	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	43	1	replace
62	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;  [CE]  cannot  find  symbol  c4  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  c4	43	None	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c2);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	compilable	  [FE]  NullPointerException  	36	1	replace
64	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c2);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	compilable	  [FE]  NullPointerException  	36	1	replace
65	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	17	None	add
66	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
67	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
68	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3,  c3);  [CE]  no  suitable  method  found  for  arrange(Graphics2D,RectangleConstraint,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c1);    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,RectangleConstraint,RectangleConstraint)	14	None	replace
69	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
70	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
71	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;	  Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	39	1	replace
72	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;	  Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	39	1	replace
73	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
74	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
75	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	compilable	  [FE]  NullPointerException  	34	1	replace
76	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	compilable	  [FE]  NullPointerException  	34	1	replace
77	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	33	None	add
78	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[3]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	15	None	add
79	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c2);	  Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	compilable	  [FE]  NullPointerException  	29	1	replace
80	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c2);	  Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	compilable	  [FE]  NullPointerException  	29	1	replace
81	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]          NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	25	None	replace
82	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	22	None	add
83	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	22	None	add
84	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D    size    =    this.centerBlock.arrange(g2,    c2);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	30	None	replace
85	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
86	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
87	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[3]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	40	None	add
88	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]          NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	20	None	replace
89	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	38	None	add
90	[BUG]  [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.topBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.topBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D    size    =    this.bottomBlock.arrange(g2,    c2);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	21	None	replace
91	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	add
92	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    if(this.leftBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	add
93	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	2	None	replace
94	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	41	None	replace
95	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	6	None	replace
96	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	16	None	replace
97	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	33	None	add
98	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  w[3]  =  size.width;  h[3]  =  h;  }  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  w[3]  =  size.width;  h[3]  =  h;  }  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.rightBlock.arrange(g2,    c1);    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  }  else  {  w[3]  =  size.width;  h[3]  =  h;  }	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	27	None	add
99	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	23	None	replace
100	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	23	None	replace
101	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c1);    w[3]    =    size.width;    h[3]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	4	None	replace
102	[BUG]  [BUGGY]  w[3]  =  size.width;  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	w[3]  =  size.width;	  Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    	non-compiled	[CE]  cannot  find  symbol  size	8	None	replace
103	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	42	None	add
104	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	34	None	replace
105	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]          NullPointerException      [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D    size    =    this.bottomBlock.arrange(g2,    c4);    	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	20	None	replace
106	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [CE]  cannot  find  symbol  size  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[2]    =    size.width;    h[2]    =    size.height;    	non-compiled	[CE]  cannot  find  symbol  size	32	None	replace
107	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]      Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.leftBlock.arrange(g2,    c1);    w[3]    =    size.width;    Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
