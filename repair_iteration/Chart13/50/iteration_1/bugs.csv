bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    [BUGGY]  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	  	if  (this.centerBlock  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
2	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.centerBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	    Size2D  size  =  this.centerBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
3	[BUG]  [BUGGY]    Size2D  size  =  this.centerBlock.arrange(g2,  c5);  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.centerBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    Size2D  size  =  this.centerBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	    Size2D  size  =  this.leftBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
5	[BUG]  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c5);  [FE]  NullPointerException  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    Size2D  size  =  this.leftBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
6	[BUG]  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	    Size2D  size  =  this.rightBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
8	[BUG]  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    Size2D  size  =  this.rightBlock.arrange(g2,  c5);		compilable	  [FE]  NullPointerException  	100	1	add
9	[BUG]  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
10	[BUG]  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    if(c5!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
11	[BUG]  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  [BUGGY]    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]  if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	    if(c5!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
