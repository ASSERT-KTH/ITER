bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
2	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
3	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
6	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
7	[BUG]  [BUGGY]  h[4]  =  constraint.getWidth()  -  w[3];  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  h[4]  =  constraint.getWidth()  -  w[3];  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	h[4]  =  constraint.getWidth()  -  w[3];	  h[4]    =    constraint.getWidth()    -    w[4];    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
8	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  Size2D    size    =    this.leftBlock.arrange(g2,    c4);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  Size2D    size    =    this.leftBlock.arrange(g2,    c4);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
11	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
12	[BUG]  [BUGGY]  this.centerBlock.arrange(g2,  c5);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  this.centerBlock.arrange(g2,  c5);  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	this.centerBlock.arrange(g2,  c5);	  if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.setBounds(new    RectangleConstraint(0.0,    0.0,    h[0],    h[1]));    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
13	[BUG]  [BUGGY]  this.centerBlock.arrange(g2,  c4);  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  this.centerBlock.arrange(g2,  c4);  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	this.centerBlock.arrange(g2,  c4);	  if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.setBounds(new    RectangleConstraint(0.0,    0.0,    h[0],    h[1]));    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);	          Size2D    size    =    this.centerBlock.arrange(g2,    c5);    Size2D    size    =    this.centerBlock.arrange(g2,    c3);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
18	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
19	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
20	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	if(this.rightBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  if(this.centerBlock!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	27	1	replace
21	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [FE]  NullPointerException  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  if(this.centerBlock!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	27	1	replace
22	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0	  if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.setBounds(new    RectangleConstraint(0.0,    0.0,    h[0],    h[1]));    }    	non-compiled	[CE]  ')'  expected	25	None	replace
23	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,	  if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.setBounds(new    RectangleConstraint(0.0,    0.0,    h[0],    h[1]));    }    	non-compiled	[CE]  ')'  expected	25	None	replace
24	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
25	[BUG]  [BUGGY]  h[4]  =  constraint.getHeight()  -  w[4];  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  h[4]  =  constraint.getHeight()  -  w[4];  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	h[4]  =  constraint.getHeight()  -  w[4];	  h[4]    =    constraint.getWidth()    -    w[4];    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
26	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
27	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
28	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]  [BUGGY]      this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]	  if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.setBounds(new    RectangleConstraint(0.0,    0.0,    h[0],    h[1]));    }    	non-compiled	[CE]  ')'  expected	25	None	replace
29	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);      [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]      if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
