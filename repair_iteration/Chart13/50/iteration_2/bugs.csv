bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	10	1	replace
2	[BUG]  [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.rightBlock!=  null)  {  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	10	1	replace
3	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c4);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c4);	      if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);	      Size2D    size    =    this.leftBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c4);	      Size2D    size    =    this.leftBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	11	1	replace
8	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	11	1	replace
9	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [CE]  illegal  start  of  type  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c4);  if(this.rightBlock!=  null)  {  this.rightBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.rightBlock!=    null)    {    this.rightBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.leftBlock.arrange(g2,    c5);    Size2D  size  =  this.leftBlock.arrange(g2,  c5);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	4	None	add
11	[BUG]  [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.leftBlock.arrange(g2,    c5);    Size2D  size  =  this.leftBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	4	None	add
12	[BUG]  [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.leftBlock.arrange(g2,  c5);  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.leftBlock.arrange(g2,    c5);    Size2D  size  =  this.leftBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	4	None	add
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	9	1	replace
14	[BUG]  [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  NullPointerException  	9	1	replace
15	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c5);    Size2D  size  =  this.centerBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	2	None	add
16	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c5);    Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	2	None	add
17	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c5);  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c5);    Size2D  size  =  this.centerBlock.arrange(g2,  c5);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	2	None	add
18	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);	      Size2D    size    =    this.centerBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c5);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c5);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c5);	      Size2D    size    =    this.centerBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c5);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.rightBlock.arrange(g2,    c5);    Size2D  size  =  this.rightBlock.arrange(g2,  c5);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	7	None	add
21	[BUG]  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]      NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.rightBlock.arrange(g2,    c5);    Size2D  size  =  this.rightBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	7	None	add
22	[BUG]  [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)  [FE]        NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]      Size2D  size  =  this.rightBlock.arrange(g2,  c5);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	        Size2D    size    =    this.rightBlock.arrange(g2,    c5);    Size2D  size  =  this.rightBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)	7	None	add
23	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);	      Size2D    size    =    this.rightBlock.arrange(g2,    c5);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [CE]  illegal  start  of  type  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c4);	      if(c5!=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]));  }  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,double,double,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]));  }  [BUGGY]    this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(c5!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.setBounds(new  RectangleConstraint(0.0,  0.0,  h[0],  h[1]));  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,double,double,double)	1	None	replace
26	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	add	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
27	[BUG]  [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }  [BUGGY]    if  (this.centerBlock  !=  null)  {  this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	if(this.centerBlock!=  null)  {  Size2D  size  =  this.centerBlock.arrange(g2,  c5);  if(this.leftBlock!=  null)  {  this.leftBlock.arrange(g2,  c5);  }	      if(c5!=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    c5);    if(this.leftBlock!=    null)    {    this.leftBlock.arrange(g2,    c5);    }    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	6	1	replace
28	[BUG]  [BUGGY]  h[4]  =  constraint.getWidth()  -  w[4];  [CE]  illegal  start  of  type  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);    [BUGGY]  h[4]  =  constraint.getWidth()  -  w[4];  [BUGGY]    this.centerBlock.arrange(g2,  c5);  }  if  (this.topBlock  !=  null)  {  this.topBlock.setBounds(new  Rectangle2D.Double(0.0,  0.0,  w[0],  h[0]));  }  if  (this.bottomBlock  !=  null)  {  this.bottomBlock.setBounds(new  Rectangle2D.Double(0.0,  h[0]  +  h[2],  w[1],  h[1]));  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	464	464	1	replace	h[4]  =  constraint.getWidth()  -  w[4];	      	non-compiled	[CE]  illegal  start  of  type	1	None	replace
