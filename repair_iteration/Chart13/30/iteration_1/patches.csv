bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  g2.setPaint(this.centerBlock,  this.centerBlock.getPaint());  [CE]  cannot  find  symbol  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  g2.setPaint(this.centerBlock,  this.centerBlock.getPaint());  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	g2.setPaint(this.centerBlock,  this.centerBlock.getPaint());	      g2.setPaint(this.centerBlock.getPaint());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
2	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c2);    Size2D  size  =  this.centerBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	add
3	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c2);    Size2D  size  =  this.centerBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	add
4	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c2);    Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	add
5	[BUG]  [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  size.height);  [CE]  cannot  find  symbol  size  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  size.height);  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  size.height);	  return    arrange(container,    g2,    new    RectangleConstraint(width,    height),    c4);    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
6	[BUG]  [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  this.centerBlock);  [CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  this.centerBlock);  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  this.centerBlock);	  return    arrange(container,    g2,    new    RectangleConstraint(width,    height),    c4);    	non-compiled	[CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;	5	None	replace
7	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  cannot  find  symbol  c3  [FE]    NullPointerException    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);	      Size2D    size    =    this.centerBlock.arrange(g2,    c2);    	non-compiled	[CE]  cannot  find  symbol  c3	7	None	replace
8	[BUG]  [BUGGY]  return  arrange(g2,  container,  new  RectangleConstraint(w,  height));  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double[],double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(g2,  container,  new  RectangleConstraint(w,  height));  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(g2,  container,  new  RectangleConstraint(w,  height));	  return    arrange(container,    g2,    new    RectangleConstraint(w,    height));    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double[],double)	4	None	replace
9	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  w);  [CE]  no  suitable  method  found  for  arrange(Graphics2D,double[])  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  w);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  w);	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,double[])	1	None	replace
10	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  [CE]  no  suitable  method  found  for  arrange(Graphics2D,double)  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  width);	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,double)	1	None	replace
11	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[4]  =  width;  [CE]  missing  return  statement  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[4]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[4]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[4]    =    width;    	non-compiled	[CE]  missing  return  statement	3	None	replace
12	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[4]  =  width;  [CE]  no  suitable  method  found  for  arrange(Graphics2D,double)  [FE]              java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[4]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[4]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[4]    =    width;    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,double)	3	None	replace
13	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  width;  [CE]  missing  return  statement  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[3]    =    width;    	non-compiled	[CE]  missing  return  statement	8	None	replace
14	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[3]  =  width;  [CE]  no  suitable  method  found  for  arrange(Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[3]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  width);  w[3]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[3]    =    width;    	non-compiled	[CE]  no  suitable  method  found  for  arrange(Graphics2D,double)	8	None	replace
15	[BUG]  [BUGGY]  double  height  =  h[1]  +  Math.max(w[2],  Math.max(h[3],  h[4]));  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  double  height  =  h[1]  +  Math.max(w[2],  Math.max(h[3],  h[4]));  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	double  height  =  h[1]  +  Math.max(w[2],  Math.max(h[3],  h[4]));	      double    height    =    h[1]    +    Math.max(h[2],    Math.max(h[3],    h[4]));    	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	replace
16	[BUG]  [BUGGY]  double  height  =  h[1]  +  Math.max(h[2],  Math.max(w[3],  h[4]));  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  double  height  =  h[1]  +  Math.max(h[2],  Math.max(w[3],  h[4]));  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	double  height  =  h[1]  +  Math.max(h[2],  Math.max(w[3],  h[4]));	      double    height    =    h[1]    +    Math.max(h[2],    Math.max(h[3],    h[4]));    	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	replace
17	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [CE]  missing  return  statement  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    	non-compiled	[CE]  missing  return  statement	1	None	replace
18	[BUG]  [BUGGY]  return  arrange(g2,  new  RectangleConstraint(width,  height));  [CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(g2,  new  RectangleConstraint(width,  height));  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(g2,  new  RectangleConstraint(width,  height));	  return    arrange(container,    g2,    new    RectangleConstraint(w,    height));    	non-compiled	[CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;	4	None	replace
19	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[4]  =  size.width;  [CE]  missing  return  statement  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[4]  =  size.width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[4]  =  size.width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[4]    =    width;    	non-compiled	[CE]  missing  return  statement	3	None	replace
20	[BUG]  [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]      Size2D  size  =  this.centerBlock.arrange(g2,  c2);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	        Size2D    size    =    this.centerBlock.arrange(g2,    c2);    Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	add
21	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  width;  [CE]  missing  return  statement  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c2);  w[3]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[3]    =    width;    	non-compiled	[CE]  missing  return  statement	8	None	replace
22	[BUG]  [BUGGY]  g2.setPaint(this.centerBlock.paint());  [CE]  cannot  find  symbol  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  g2.setPaint(this.centerBlock.paint());  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	g2.setPaint(this.centerBlock.paint());	      g2.setPaint(this.centerBlock.getPaint());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  width;  [CE]  cannot  find  symbol  c3  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[3]    =    width;    	non-compiled	[CE]  cannot  find  symbol  c3	8	None	replace
24	[BUG]  [BUGGY]  double  height  =  h[1]  +  Math.max(h[2],  Math.max(h[0],  h[4]));  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  double  height  =  h[1]  +  Math.max(h[2],  Math.max(h[0],  h[4]));  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	double  height  =  h[1]  +  Math.max(h[2],  Math.max(h[0],  h[4]));	      double    height    =    h[1]    +    Math.max(h[2],    Math.max(h[3],    h[4]));    	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	9	None	replace
25	[BUG]  [BUGGY]  return  arrange(g2,  container,  new  RectangleConstraint(width,  height));  [CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(g2,  container,  new  RectangleConstraint(width,  height));  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(g2,  container,  new  RectangleConstraint(width,  height));	  return    arrange(container,    g2,    new    RectangleConstraint(w,    height));    	non-compiled	[CE]  method  arrange  in  class  BorderArrangement  cannot  be  applied  to  given  types;	4	None	replace
26	[BUG]  [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  length);  [CE]  cannot  find  symbol  length  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  length);  [BUGGY]    }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	return  arrange(container,  g2,  new  RectangleConstraint(width,  height),  length);	  return    arrange(container,    g2,    new    RectangleConstraint(width,    height),    c4);    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
27	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  width;  [CE]  cannot  find  symbol  c3  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  w[4]  =  size.width;  h[4]  =  size.height;  }  double  height  =  h[0]  +  h[1]  +  Math.max(h[2],  Math.max(h[3],  h[4]));    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  width;  [BUGGY]    return  arrange(container,  g2,  new  RectangleConstraint(width,  height));  }  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	323	323	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[4]  =  width;	      Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[4]    =    width;    	non-compiled	[CE]  cannot  find  symbol  c3	3	None	replace
