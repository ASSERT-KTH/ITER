bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;  [CE]  cannot  find  symbol  c3  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;		non-compiled	[CE]  cannot  find  symbol  c3	70	None	add
2	[BUG]  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;  [CE]  cannot  find  symbol  c3  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;		non-compiled	[CE]  cannot  find  symbol  c3	70	None	add
3	[BUG]  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;  [CE]  cannot  find  symbol  c2  [FE]        java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;		non-compiled	[CE]  cannot  find  symbol  c2	70	None	add
4	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]  w[1]  =  h[0];  [BUGGY]  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	add	w[1]  =  h[0];	w[1]  =  w[0];  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	69	1	replace
5	[BUG]  [BUGGY]  w[1]  =  h[0];  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]  w[1]  =  h[0];  [BUGGY]  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	w[1]  =  h[0];	w[1]  =  w[0];  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	69	1	replace
6	[BUG]  [BUGGY]  w[1]  =  size[0];  [CE]  cannot  find  symbol  size  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]  w[1]  =  size[0];  [BUGGY]  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	w[1]  =  size[0];	w[1]  =  w[0];  	non-compiled	[CE]  cannot  find  symbol  size	69	None	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]  w[2]  =  w[0];  [BUGGY]  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	add	w[2]  =  w[0];	w[1]  =  w[0];  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	69	1	replace
8	[BUG]  [BUGGY]  w[2]  =  w[0];  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]  w[2]  =  w[0];  [BUGGY]  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	w[2]  =  w[0];	w[1]  =  w[0];  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	69	1	replace
9	[BUG]  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;  }  [CE]  cannot  find  symbol  c3  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;  }  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[0]  =  size.height;  }		non-compiled	[CE]  cannot  find  symbol  c3	70	None	add
10	[BUG]  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;  }  [CE]  cannot  find  symbol  c3  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;  }  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  size.height;  }		non-compiled	[CE]  cannot  find  symbol  c3	70	None	add
11	[BUG]  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  [CE]  cannot  find  symbol  c2  [FE]        java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    if(this.leftBlock!=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  h[1]  =  size.height;  }		non-compiled	[CE]  cannot  find  symbol  c2	70	None	add
12	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    w[1]  =  constraint.getWidth();  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	add	    w[1]  =  constraint.getWidth();		compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	70	1	add
13	[BUG]  [BUGGY]    w[1]  =  constraint.getWidth();  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    w[1]  =  constraint.getWidth();  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    w[1]  =  constraint.getWidth();		compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	70	1	add
14	[BUG]  [BUGGY]    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);  [CE]  ']'  expected  [FE]      java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);		non-compiled	[CE]  ']'  expected	70	None	add
15	[BUG]  [BUGGY]    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  h[0];  [CE]  ']'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double  [CONTEXT]  double[]  h  =  new  double[5];  w[0]  =  constraint.getWidth();  if  (this.topBlock  !=  null)  {  RectangleConstraint  c1  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()),  LengthConstraintType.RANGE);  Size2D  size  =  this.topBlock.arrange(g2,  c1);  h[0]  =  size.height;  }  [BUGGY]    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  h[0];  [BUGGY]  w[1]  =  w[0];  if  (this.bottomBlock  !=  null)  {  RectangleConstraint  c2  =  new  RectangleConstraint(w[0],  null,  LengthConstraintType.FIXED,  0.0,  new  Range(0.0,  constraint.getHeight()  -  h[0]),  LengthConstraintType.RANGE);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  h[1]  =  size.height;  }  h[2]  =  constraint.getHeight()  -  h[1]  -  h[0];  if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	435	435	1	replace	    Size2D  w[1]  =  this.leftBlock.arrange(g2,  c3);  h[1]  =  h[0];		non-compiled	[CE]  ']'  expected	70	None	add
