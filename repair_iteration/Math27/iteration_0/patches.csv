bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  Fraction  multiply(final  int  i)  {  [BUGGY]    [BUGGY]  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	  	return  new  Fraction(numerator  *  i,  denominator);  	non-compiled	[CE]  missing  return  statement	3	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  testMath835  [CONTEXT]  public  Fraction(int  num,  int  den)  {  if  (den  ==  0)  {  throw  new  MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,  num,  den);  }  [BUGGY]  if(den  <  1)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  new  MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,  num,  den);  }  num  =  -num;  den  =  -den;  }  final  int  d  =  ArithmeticUtils.gcd(num,  den);  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2	261	261	1	add	if(den  <  1)  {	if  (den  <  0)  {  	compilable	  [FE]  AssertionError  testMath835	11	1
14	[BUG]  [BUGGY]  if(den  <  1)  {  [FE]  AssertionError  testMath835  [CONTEXT]  public  Fraction(int  num,  int  den)  {  if  (den  ==  0)  {  throw  new  MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,  num,  den);  }  [BUGGY]  if(den  <  1)  {  [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  new  MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,  num,  den);  }  num  =  -num;  den  =  -den;  }  final  int  d  =  ArithmeticUtils.gcd(num,  den);  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2	261	261	1	replace	if(den  <  1)  {	if  (den  <  0)  {  	compilable	  [FE]  AssertionError  testMath835	11	1	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  Fraction(int  num,  int  den)  {  if  (den  ==  0)  {  throw  new  MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,  num,  den);  }  [BUGGY]    [BUGGY]  if  (num  ==  Integer.MIN_VALUE  ||  den  ==  Integer.MIN_VALUE)  {  throw  new  MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,  num,  den);  }  num  =  -num;  den  =  -den;  }  final  int  d  =  ArithmeticUtils.gcd(num,  den);  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(int,int)  int  num  int  den  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  den  denominator  maxDenominator  maxIterations  n  num  numerator  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.2	261	261	1	replace	  	if  (den  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
