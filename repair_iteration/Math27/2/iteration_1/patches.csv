bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	19	1	add
2	[BUG]  [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	19	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	19	1	add
4	[BUG]  [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	19	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  /  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    	compilable	  [FE]  AssertionError  	12	3	replace
6	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    	compilable	  [FE]  AssertionError  	12	3	replace
7	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  maxDenominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  maxDenominator);	  return    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	12	None	replace
8	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  desominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  desominator);	  return    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  cannot  find  symbol  desominator	12	None	replace
9	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	14	None	replace
10	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  i);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  i);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  i);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
11	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
12	[BUG]  [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
13	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getDenominator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();	      int    numerator    =    getNumber();    	non-compiled	[CE]  missing  return  statement	23	None	replace
14	[BUG]  [BUGGY]  int  numerator  =  getNumber()  -  1;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumber()  -  1;  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber()  -  1;	      int    numerator    =    getNumber();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
15	[BUG]  [BUGGY]  int  numerator  =  getNumber()  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumber()  +  1;  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber()  +  1;	      int    numerator    =    getNumber();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	13	3	replace
17	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	13	3	replace
18	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  den);  [CE]  cannot  find  symbol  den  [FE]              AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  den);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  den);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  den	13	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  i,  denominator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	13	3	replace
20	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	13	3	replace
21	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]                  AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  deserator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  deserator);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	13	None	replace
22	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  -  1,  i);  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(denominator  -  1,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  -  1,  i);	      int    numerator    =    Math.min(numerator    -    1,    denominator);    	non-compiled	[CE]  missing  return  statement	21	None	replace
23	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  i);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  -  1,  i);	      int    numerator    =    Math.min(numerator    -    1,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	21	None	replace
24	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  int  numerator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  numerator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    int  numerator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	16	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        int    numerator    =    getNumerator();    int  denominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	3	add
26	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    int  denominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	3	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        int    numerator    =    getNumerator();    int  deserator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
28	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    int  deserator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  denator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        int    numerator    =    getNumerator();    int  denator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
30	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  int  denator  =  getNumerator();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  denator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    int  denator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
31	[BUG]  [BUGGY]  matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	non-compiled	[CE]  	20	None	replace
32	[BUG]  [BUGGY]  matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	non-compiled	[CE]  	20	None	replace
33	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	compilable	  [FE]  IllegalArgumentException  	20	3	replace
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	compilable	  [FE]  IllegalArgumentException  	20	3	replace
35	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  new  Fraction(denominator  /  i,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  new  Fraction(denominator  /  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    new  Fraction(denominator  /  i,  denominator);	  	non-compiled	[CE]  unreachable  statement	24	None	add
36	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
37	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
38	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  (denominator  /  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    (denominator  /  i,  denominator);	  	non-compiled	[CE]  ')'  expected	24	None	add
39	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }	  	non-compiled	[CE]  cannot  find  symbol  desominator	24	None	add
40	[BUG]  [BUGGY]  float  numerator  =  getNumerator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  float  numerator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	float  numerator  =  getNumerator();	      int    numerator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	17	None	replace
41	[BUG]  [BUGGY]  matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  	3	None	replace
42	[BUG]  [BUGGY]  aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  	3	None	replace
43	[BUG]  [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
46	[BUG]  [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
47	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  i);  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(denominator,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  i);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  missing  return  statement	1	None	replace
48	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  i  +  1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(numerator,  i  +  1);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator,  i  +  1);	      int    numerator    =    Math.min(numerator,    i);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	4	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	5	3	add
50	[BUG]  [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	5	3	add
51	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator);  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.abs(denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  missing  return  statement	22	None	replace
52	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  i);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.abs(numerator  *  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  *  i);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	22	None	replace
53	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	7	3	add
54	[BUG]  [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	7	3	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  2,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    	compilable	  [FE]  AssertionError  	10	3	replace
56	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  2,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    	compilable	  [FE]  AssertionError  	10	3	replace
57	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  den);  [CE]  cannot  find  symbol  den  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  den);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  den);	  return    new    Fraction(numerator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  den	15	None	replace
58	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  derenominator);  [CE]  cannot  find  symbol  derenominator  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  derenominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  derenominator);	  return    new    Fraction(numerator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  derenominator	15	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    	compilable	  [FE]  AssertionError  	25	3	replace
60	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    	compilable	  [FE]  AssertionError  	25	3	replace
61	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  maxDenominator);	  return    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	25	None	replace
62	[BUG]  [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  	6	None	replace
63	[BUG]  [BUGGY]  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
64	[BUG]  [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  N>  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(i,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  denominator);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	18	None	replace
66	[BUG]  [BUGGY]  int  numerator  =  getNumerator(numerator,  i);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(numerator,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(numerator,  i);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	18	None	replace
67	[BUG]  [BUGGY]  int  numerator  =  getNumerator(denominator,  i);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(denominator,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(denominator,  i);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	18	None	replace
68	[BUG]  [BUGGY]  int  numerator  =  getNumerator(n,  i);  [CE]  cannot  find  symbol  n  [FE]                AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(n,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(n,  i);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  cannot  find  symbol  n	18	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	2	1	add
70	[BUG]  [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	2	1	add
71	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  new  Fraction(numerator  /  i,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  new  Fraction(numerator  /  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    new  Fraction(numerator  /  i,  denominator);	  	non-compiled	[CE]  unreachable  statement	9	None	add
72	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
73	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
74	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator  ==  numerator)  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
75	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  desnominator);  }  [CE]  cannot  find  symbol  desnominator  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  desnominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  desnominator);  }	  	non-compiled	[CE]  cannot  find  symbol  desnominator	9	None	add
76	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  new  Fraction(denominator  *  i,  numerator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  new  Fraction(denominator  *  i,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    new  Fraction(denominator  *  i,  numerator);	  	non-compiled	[CE]  unreachable  statement	11	None	add
77	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
78	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
79	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
80	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
81	[BUG]  [BUGGY]  if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	non-compiled	[CE]  missing  return  statement	20	None	replace
82	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	aughtInvalidNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    	non-compiled	[CE]  	20	None	replace
84	[BUG]  [BUGGY]  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
85	[BUG]  [BUGGY]  if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]      IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	8	None	replace
86	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  /  i);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  /  i);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    int  denominator  =  Math.abs(denominator  /  i);	  	non-compiled	[CE]  unreachable  statement	24	None	add
87	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  -  i);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  -  i);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    int  denominator  =  Math.abs(denominator  -  i);	  	non-compiled	[CE]  unreachable  statement	24	None	add
88	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    int  denominator  =  Math.abs(denominator);	  	non-compiled	[CE]  unreachable  statement	24	None	add
89	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
90	[BUG]  [BUGGY]  int  numerator  =  Math.min(i  -  1,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(i  -  1,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(i  -  1,  denominator);	      int    numerator    =    Math.min(numerator    -    1,    denominator);    	non-compiled	[CE]  missing  return  statement	21	None	replace
91	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  tmodd1);  [CE]  cannot  find  symbol  tmodd1  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  tmodd1);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  tmodd1);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  tmodd1	13	None	replace
92	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null);  [CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)  [FE]              AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  null);	  return    new    Fraction(numerator    *    i,    denominator,    maxDenominator);    	non-compiled	[CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)	13	None	replace
93	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
94	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
95	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  null;  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  if(denominator  ==  0)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
96	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
97	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  maxDenominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  maxDenominator);	  return    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	10	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	3	add
99	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	3	add
100	[BUG]  [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
101	[BUG]  [BUGGY]  if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]      IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	6	None	replace
102	[BUG]  [BUGGY]  return  new  Fraction(number  /  i,  denominator);  [CE]  cannot  find  symbol  number  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(number  /  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(number  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	25	None	replace
103	[BUG]  [BUGGY]  if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
104	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	      if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
105	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
106	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
107	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }	  	non-compiled	[CE]  cannot  find  symbol  desominator	11	None	add
108	[BUG]  [BUGGY]  int  numerator  =  Math.min(i,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(i,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(i,  denominator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  missing  return  statement	1	None	replace
109	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  i,  deserator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  deserator);	  return    new    Fraction(numerator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	15	None	replace
110	[BUG]  [BUGGY]  int  numerator  =  Math.abs(i);  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.abs(i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(i);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  missing  return  statement	22	None	replace
111	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.abs(numerator  -  1);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  -  1);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	22	None	replace
112	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  -  1,  denominator);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	22	None	replace
113	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i);	  return    new    Fraction(numerator    *    i,    maxDenominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	15	None	replace
114	[BUG]  [BUGGY]  int  numerator  =  getNumerator(fraction,  i);  [CE]  cannot  find  symbol  fraction  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(fraction,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(fraction,  i);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  cannot  find  symbol  fraction	18	None	replace
115	[BUG]  [BUGGY]  int  numerator  =  getNumerator(variant,  i);  [CE]  cannot  find  symbol  variant  [FE]            AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  getNumerator(variant,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(variant,  i);	      int    numerator    =    getNumerator(i);    	non-compiled	[CE]  cannot  find  symbol  variant	18	None	replace
116	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  *  i,  denominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(numerator  *  i,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  *  i,  denominator);	      int    numerator    =    Math.min(numerator    -    1,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	21	None	replace
117	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  denominator,  i);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  denominator,  i);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  -  1,  denominator,  i);	      int    numerator    =    Math.min(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	21	None	replace
118	[BUG]  [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
119	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  int  numerator  =  getNumerator();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  int  numerator  =  getNumerator();  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    int  numerator  =  getNumerator();	  	non-compiled	[CE]  unreachable  statement	9	None	add
120	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  Math.pow(10,  i),  denominator);  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  Math.pow(10,  i),  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  Math.pow(10,  i),  denominator);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	9	None	add
121	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i));  }  [CE]  cannot  find  symbol  NumberUtils  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i));  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i));  }	  	non-compiled	[CE]  cannot  find  symbol  NumberUtils	9	None	add
122	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i),  denominator);  }  [CE]  cannot  find  symbol  NumberUtils  [FE]          AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i),  denominator);  }  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  less  than  1: "  +  NumberUtils.stringValue(i),  denominator);  }	  	non-compiled	[CE]  cannot  find  symbol  NumberUtils	9	None	add
123	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
124	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  /  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  Math.abs(denominator  /  i,  denominator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    int  denominator  =  Math.abs(denominator  /  i,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	24	None	add
125	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(denominator  /  i,  denominator);  int  denominator  =  getDenominator();  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    denominator);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  unreachable  statement	24	None	add
126	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  int  numerator  =  Math.min(denominator,  denominator);  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  denominator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  missing  return  statement	1	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    	compilable	  [FE]  AssertionError  	12	3	replace
128	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  [BUGGY]    }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    	compilable	  [FE]  AssertionError  	12	3	replace
129	[BUG]  [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	      if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  den  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	        int    numerator    =    getNumerator();    int  den  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
131	[BUG]  [BUGGY]      int  numerator  =  getNumerator();  int  den  =  getNumerator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  Fraction  multiply(final  int  i)  {    [BUGGY]      int  numerator  =  getNumerator();  int  den  =  getNumerator();  [BUGGY]    return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	        int    numerator    =    getNumerator();    int  den  =  getNumerator();	  	compilable	  [FE]  AssertionError  	16	1	add
