bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  denominator);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  *  i,  denominator);	  int    numerator    =    Math.min(numerator    *    i,    denominator);    	non-compiled	[CE]  missing  return  statement	116	None	replace
2	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  numerator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  *  i,  numerator);	  int    numerator    =    Math.min(numerator    *    i,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	116	None	replace
3	[BUG]  [BUGGY]  int  numerator  =  Math.min(variant  *  i,  denominator);  [CE]  cannot  find  symbol  variant  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(variant  *  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(variant  *  i,  denominator);	  int    numerator    =    Math.min(numerator    *    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  variant	116	None	replace
4	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1,  i);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator,  denominator  -  1,  i);	  int    numerator    =    Math.min(denominator    -    1,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	22	None	replace
5	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  i);  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator  *  i,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  *  i,  i);	  int    numerator    =    Math.min(denominator    -    1,    i);    	non-compiled	[CE]  missing  return  statement	22	None	replace
6	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  null);  [CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  null);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  null);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)	92	None	replace
7	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxDenominator,  null);  [CE]  cannot  find  symbol  maxDenominator  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxDenominator,  null);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  maxDenominator,  null);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	92	None	replace
8	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  null,  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	92	None	replace
9	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxIterations);  [CE]  cannot  find  symbol  maxIterations  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  maxIterations);	  return    new    Fraction(numerator    *    i,    denominator,    tmodd1);    	non-compiled	[CE]  cannot  find  symbol  maxIterations	91	None	replace
10	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  desnominator,  maxDenominator);  [CE]  cannot  find  symbol  desnominator  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  desnominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  desnominator,  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    tmodd1);    	non-compiled	[CE]  cannot  find  symbol  desnominator	91	None	replace
11	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  int  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  int  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  int  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	26	None	replace
12	[BUG]  [BUGGY]  int  numerator  =  getNumber();  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber();  int  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber();  int  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denominator    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
13	[BUG]  [BUGGY]  new  Fraction(denominator  /  i,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	35	None	replace
14	[BUG]  [BUGGY]  new  Fraction(denominator  /  i,  maxIterations);  [CE]  cannot  find  symbol  maxIterations  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  /  i,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  /  i,  maxIterations);	  return    new    Fraction(denominator    /    i,    denominator);    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxIterations	35	None	replace
15	[BUG]  [BUGGY]  new  Fraction(denominator  *  i,  denominator);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	35	None	replace
16	[BUG]  [BUGGY]  new  Fraction(denominator  /  i,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  /  i,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  /  i,  maxDenominator);	  return    new    Fraction(denominator    /    i,    denominator);    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	35	None	replace
17	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxDenominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxDenominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxDenominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	105	None	replace
18	[BUG]  [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxDenominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxDenominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxDenominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	105	None	replace
19	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxDenominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxDenominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxDenominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	105	None	replace
20	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
22	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
23	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  Il  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	1	None	add
24	[BUG]  [BUGGY]  multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
25	[BUG]  [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
26	[BUG]  [BUGGY]  parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
27	[BUG]  [BUGGY]  matic(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]              IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matic(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matic(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
28	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  i);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	113	None	replace
29	[BUG]  [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  numerator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  *  FOUR_FIFTHS,  numerator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	113	None	replace
30	[BUG]  [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  number);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  number);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  *  FOUR_FIFTHS,  number);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	113	None	replace
31	[BUG]  [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  fraction);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  fraction);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
32	[BUG]  [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  i  *  FOUR_FIFTHS,  denominator,  maxIterations);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
33	[BUG]  [BUGGY]  return  new  Fraction(denominator,  i  *  FOUR_FIFTHS,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator,  i  *  FOUR_FIFTHS,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator,  i  *  FOUR_FIFTHS,  denominator);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
34	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	72	None	replace
35	[BUG]  [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ".);    }    	non-compiled	[CE]  	118	None	replace
36	[BUG]  [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ".);    }    	non-compiled	[CE]  	118	None	replace
37	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  new  Fraction(denominator  *  i,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  new  Fraction(denominator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    new  Fraction(denominator  *  i,  denominator);	  	non-compiled	[CE]  unreachable  statement	59	None	add
38	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
39	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
40	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }	  	non-compiled	[CE]  cannot  find  symbol  desominator	59	None	add
41	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
42	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  i  +  1);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator,  i  +  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  i  +  1);	  int    numerator    =    Math.min(numerator,    i    +    1);    	non-compiled	[CE]  missing  return  statement	48	None	replace
43	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  i  +  1,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  i  +  1,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator,  i  +  1,  denominator);	  int    numerator    =    Math.min(numerator,    i    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	48	None	replace
44	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  /  i);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  /  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  /  i);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	86	None	replace
45	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  *  i);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  *  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  *  i);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	86	None	replace
46	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  deserator,  maxDenominator);  [CE]  cannot  find  symbol  deserator  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  deserator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  deserator,  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    deserator);    	non-compiled	[CE]  cannot  find  symbol  deserator	21	None	replace
47	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  derenominator,  maxDenominator);  [CE]  cannot  find  symbol  derenominator  [FE]                        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  derenominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  derenominator,  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    deserator);    	non-compiled	[CE]  cannot  find  symbol  derenominator	21	None	replace
48	[BUG]  [BUGGY]  int  numerator  =  getNumerator(fn,  i);  [CE]  cannot  find  symbol  fn  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(fn,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(fn,  i);	  int    numerator    =    getNumerator(fraction,    i);    	non-compiled	[CE]  cannot  find  symbol  fn	114	None	replace
49	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
50	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
51	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denomin  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denomin  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(denominator  /  i,  denomin	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  ')'  expected	74	None	replace
52	[BUG]  [BUGGY]  parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  aughtInvalidNumerator(i)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	42	None	replace
53	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");	  aughtInvalidNumerator(i)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	3	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  [FE]  IllegalArgumentException  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");	  aughtInvalidNumerator(i)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	3	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  i,  numerator);	  return    new    Fraction(numerator    *    i,    deserator);    	compilable	  [FE]  AssertionError  	109	3	replace
56	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  numerator);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  numerator);	  return    new    Fraction(numerator    *    i,    deserator);    	compilable	  [FE]  AssertionError  	109	3	replace
57	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denerator);  [CE]  cannot  find  symbol  denerator  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denerator);	  return    new    Fraction(numerator    *    i,    deserator);    	non-compiled	[CE]  cannot  find  symbol  denerator	109	None	replace
58	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  0,  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  0,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	11	None	replace
59	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  i);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  i);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	11	None	replace
60	[BUG]  [BUGGY]  [FE]  FractionConversionException  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  0,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  i,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	compilable	  [FE]  FractionConversionException  	11	3	replace
61	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  0,  denominator);  [FE]  FractionConversionException  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  0,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	compilable	  [FE]  FractionConversionException  	11	3	replace
62	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  i);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  i);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	11	None	replace
63	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
64	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [CE]  variable  i  is  already  defined  in  method  multiply(int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  multiply(int)	80	None	replace
65	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  continue;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  continue;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
66	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  j  =  0;  j  <  denominator;  j++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  j  =  0;  j  <  denominator;  j++)  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  j  =  0;  j  <  denominator;  j++)  {  break;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  2,  numerator);	  return    new    Fraction(numerator    /    i,    numerator);    	compilable	  [FE]  AssertionError  	128	3	replace
68	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  2,  numerator);	  return    new    Fraction(numerator    /    i,    numerator);    	compilable	  [FE]  AssertionError  	128	3	replace
69	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    int  numerator  =  getNumerator();  int  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
70	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    Integer  numerator  =  getNumerator();  int  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
71	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumber();  int  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumber();  int  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    int  numerator  =  getNumber();  int  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
72	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  *  i);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  *  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator  *  i);	  int    numerator    =    Math.abs(numerator    *    i);    	non-compiled	[CE]  missing  return  statement	52	None	replace
73	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  *  i,  denominator);	  int    numerator    =    Math.abs(numerator    *    i);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	52	None	replace
74	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  i  +  1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  i  +  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  *  i  +  1);	  int    numerator    =    Math.abs(numerator    *    i);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	52	None	replace
75	[BUG]  [BUGGY]  int  numerator  =  getNumerator(variant,  i  +  1);  [CE]  cannot  find  symbol  variant  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(variant,  i  +  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(variant,  i  +  1);	  int    numerator    =    getNumerator(variant,    i);    	non-compiled	[CE]  cannot  find  symbol  variant	115	None	replace
76	[BUG]  [BUGGY]  int  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  getDenominator();	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    getDenominator();    	non-compiled	[CE]  missing  return  statement	125	None	replace
77	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator);  int  denominator  =  getDenominator();	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    getDenominator();    	non-compiled	[CE]  unreachable  statement	125	None	replace
78	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	129	None	replace
79	[BUG]  [BUGGY]  if(i  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  numerator  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	129	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  i,  denominator,  numerator);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	97	3	replace
81	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  numerator);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  numerator);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	compilable	  [FE]  AssertionError  	97	3	replace
82	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  den);  [CE]  cannot  find  symbol  den  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  den);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  den);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  den	97	None	replace
83	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  tmodd1);  [CE]  cannot  find  symbol  tmodd1  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  tmodd1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  tmodd1);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  tmodd1	97	None	replace
84	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  deserator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  deserator);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	97	None	replace
85	[BUG]  [BUGGY]  If(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  If(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	If(numerator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	101	None	replace
86	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  num);  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  num);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  num);	  return    new    Fraction(denominator    /    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  num	61	None	replace
87	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  fraction);	  return    new    Fraction(denominator    /    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  fraction	61	None	replace
88	[BUG]  [BUGGY]  int  numerator  =  Math.max(numerator,  denominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.max(numerator,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.max(numerator,  denominator);	  int    numerator    =    Math.min(denominator,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	126	None	replace
89	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  d1,  denominator);  [CE]  cannot  find  symbol  d1  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  d1,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  d1,  denominator);	  return    new    Fraction(denominator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  d1	7	None	replace
90	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  fraction);	  return    new    Fraction(denominator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  fraction	7	None	replace
91	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  multiplier);  [CE]  cannot  find  symbol  multiplier  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  multiplier);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  multiplier);	  return    new    Fraction(numerator    *    i,    derenominator);    	non-compiled	[CE]  cannot  find  symbol  multiplier	58	None	replace
92	[BUG]  [BUGGY]  final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
93	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
94	[BUG]  [BUGGY]  matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	84	None	replace
95	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  denominator,  i);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  denominator,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  denominator,  i);	  return    new    Fraction(numerator    /    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	9	None	replace
96	[BUG]  [BUGGY]  return  new  Fraction(i  /  FOUR_FIFTHS,  numerator,  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  FOUR_FIFTHS,  numerator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  /  FOUR_FIFTHS,  numerator,  denominator);	  return    new    Fraction(numerator    /    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	9	None	replace
97	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  FOUR_FIFTHS,  i,  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  FOUR_FIFTHS,  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  FOUR_FIFTHS,  i,  denominator);	  return    new    Fraction(numerator    /    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	9	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  *  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
99	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
100	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Throwables.throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");	  throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
101	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException( "Function  cannot  be  numeric. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	throw  new  IllegalArgumentException( "Function  cannot  be  numeric. ");	  throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    	compilable	  [FE]  IllegalArgumentException  	34	3	replace
102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Function  cannot  be  numeric. ");  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException( "Function  cannot  be  numeric. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw  new  IllegalArgumentException( "Function  cannot  be  numeric. ");	  throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    	compilable	  [FE]  IllegalArgumentException  	34	3	replace
103	[BUG]  [BUGGY]  multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	62	None	replace
104	[BUG]  [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	62	None	replace
105	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  new  Fraction(denominator  /  i,  numerator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  new  Fraction(denominator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    new  Fraction(denominator  /  i,  numerator);	  	non-compiled	[CE]  unreachable  statement	5	None	add
106	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
107	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
108	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
109	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }	  	non-compiled	[CE]  cannot  find  symbol  desominator	5	None	add
110	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  i  -  1,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  i  -  1,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator,  i  -  1,  denominator);	  int    numerator    =    Math.min(numerator    -    1,    denominator,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	117	None	replace
111	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  i,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  -  1,  i,  denominator);	  int    numerator    =    Math.min(numerator    -    1,    denominator,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	117	None	replace
112	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  -  1,  i,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator  -  1,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  -  1,  i,  denominator);	  int    numerator    =    Math.min(numerator    -    1,    denominator,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	117	None	replace
113	[BUG]  [BUGGY]  float  numerator  =  Math.abs(denominator);  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  float  numerator  =  Math.abs(denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	float  numerator  =  Math.abs(denominator);	  int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  missing  return  statement	51	None	replace
114	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  -  i);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  -  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator  -  i);	  int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  missing  return  statement	51	None	replace
115	[BUG]  [BUGGY]  multiply(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	32	None	replace
116	[BUG]  [BUGGY]  multiply(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	32	None	replace
117	[BUG]  [BUGGY]  multiply(0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	32	None	replace
118	[BUG]  [BUGGY]  double  numerator  =  getNumerator();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  double  numerator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	double  numerator  =  getNumerator();	  float    numerator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	40	None	replace
119	[BUG]  [BUGGY]  float  numerator  =  getDenominator();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  float  numerator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	float  numerator  =  getDenominator();	  float    numerator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	40	None	replace
120	[BUG]  [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	50	None	replace
121	[BUG]  [BUGGY]  Numerator  <  N>  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  N>  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  N>  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
122	[BUG]  [BUGGY]  return  new  Fraction(number  *  i,  denominator);  [CE]  cannot  find  symbol  number  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(number  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(number  *  i,  denominator);	  return    new    Fraction(denominator    *    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	60	None	replace
123	[BUG]  [BUGGY]  return  new  Fraction(number  /  i,  denominator,  fraction);  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(number  /  i,  denominator,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(number  /  i,  denominator,  fraction);	  return    new    Fraction(number    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	102	None	replace
124	[BUG]  [BUGGY]  matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  {  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	63	None	replace
125	[BUG]  [BUGGY]  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
126	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        Integer    denominator    =    getNumerator();    int  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	98	None	add
127	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        Integer    denominator    =    getNumerator();    Integer  numerator  =  getNumerator();  Integer  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	98	None	add
128	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        Integer    denominator    =    getNumerator();    int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	98	None	add
129	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  desnominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  int  numerator  =  getNumerator();  Integer  desnominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        Integer    denominator    =    getNumerator();    int  numerator  =  getNumerator();  Integer  desnominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	98	None	add
130	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  numerator  =  getNumerator();  int  denator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  numerator  =  getNumerator();  int  denator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denator    =    getNumerator();    int  numerator  =  getNumerator();  int  denator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	29	None	add
131	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  denator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  denator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denator    =    getNumerator();    Integer  numerator  =  getNumerator();  int  denator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	29	None	add
132	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  numerator  =  getNumerator();  int  denator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  numerator  =  getNumerator();  int  denator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denator    =    getNumerator();    int  numerator  =  getNumerator();  int  denator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	29	None	add
133	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  new  Fraction(numerator  *  i,  denominator,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  new  Fraction(numerator  *  i,  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    new  Fraction(numerator  *  i,  denominator,  denominator);	  	non-compiled	[CE]  unreachable  statement	19	None	add
134	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    final  int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	19	None	add
135	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    final  int  numerator  =  Math.min(numerator  *  i,  denominator);	  	non-compiled	[CE]  unreachable  statement	19	None	add
136	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator,  denominator);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    final  int  numerator  =  Math.min(numerator,  denominator);	  	non-compiled	[CE]  unreachable  statement	19	None	add
137	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator,  numerator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  final  int  numerator  =  Math.min(numerator  *  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    final  int  numerator  =  Math.min(numerator  *  i,  denominator,  numerator);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	19	None	add
138	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
139	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
140	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
141	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {	  	non-compiled	[CE]  	49	None	add
142	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  nu  [CE]  [FE]          IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  nu  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  nu	  	non-compiled	[CE]  	49	None	add
143	[BUG]  [BUGGY]  if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	85	None	replace
144	[BUG]  [BUGGY]  Variation  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Variation  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Variation  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
145	[BUG]  [BUGGY]  Variant  <  Numerator>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Variant  <  Numerator>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Variant  <  Numerator>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
146	[BUG]  [BUGGY]  Variant  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]              IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Variant  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Variant  <?>  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
147	[BUG]  [BUGGY]  multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
148	[BUG]  [BUGGY]  multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
149	[BUG]  [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
150	[BUG]  [BUGGY]  multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(i  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	41	None	replace
151	[BUG]  [BUGGY]  multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	multiply(numerator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	41	None	replace
152	[BUG]  [BUGGY]  final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
153	[BUG]  [BUGGY]  new  Fraction(numerator  /  i,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(numerator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(numerator  /  i,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	71	None	replace
154	[BUG]  [BUGGY]  new  Fraction(numerator  *  i,  denominator);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(numerator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(numerator  *  i,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	71	None	replace
155	[BUG]  [BUGGY]  new  Fraction(numerator  /  i,  denominator,  numerator);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(numerator  /  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(numerator  /  i,  denominator,  numerator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	71	None	replace
156	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  numerator,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  numerator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  numerator,  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    den);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	18	None	replace
157	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxDiminator);  [CE]  cannot  find  symbol  maxDiminator  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maxDiminator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  maxDiminator);	  return    new    Fraction(numerator    *    i,    denominator,    den);    	non-compiled	[CE]  cannot  find  symbol  maxDiminator	18	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	73	3	replace
159	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	73	3	replace
160	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	88	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
162	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
164	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
165	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  desominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  desominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	non-compiled	[CE]  cannot  find  symbol  desominator	107	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
167	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
168	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  i,  denominator,  maxIterations);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxIterations);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	106	None	replace
169	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  fraction);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  fraction);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxIterations);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
170	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  0,  denominator,  maxIterations);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxIterations);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
172	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
174	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
176	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
177	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  numerator  =  getNumerator();  int  den  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  numerator  =  getNumerator();  int  den  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  numerator  =  getNumerator();  int  den  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	130	None	add
178	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getNumerator();  int  den  =  getNumerator();  [CE]  variable  den  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getNumerator();  int  den  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  denominator  =  getNumerator();  int  den  =  getNumerator();	  	non-compiled	[CE]  variable  den  is  already  defined  in  method  multiply(int)	130	None	add
179	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  Integer  numerator  =  getNumerator();  int  den  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  Integer  numerator  =  getNumerator();  int  den  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    Integer  numerator  =  getNumerator();  int  den  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	130	None	add
180	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  numerator  =  getNumerator();  int  den  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  numerator  =  getNumerator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  numerator  =  getNumerator();  int  den  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	130	None	add
181	[BUG]  [BUGGY]  this.numerator  /  i,  denominator);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  this.numerator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	this.numerator  /  i,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
182	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  new  Fraction(numerator  /  i,  numerator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  new  Fraction(numerator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    new  Fraction(numerator  /  i,  numerator);	  	non-compiled	[CE]  unreachable  statement	127	None	add
183	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
184	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
185	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
186	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  break;  }  [CE]  break  outside  switch  or  loop  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  numerator)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  break;  }	  	non-compiled	[CE]  break  outside  switch  or  loop	127	None	add
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
188	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
190	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
191	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	36	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
193	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
194	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  -  i);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  -  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  -  i);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    -    i);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	87	None	replace
195	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  fraction);	  return    new    Fraction(numerator    *    i,    den);    	non-compiled	[CE]  cannot  find  symbol  fraction	57	None	replace
196	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int,int)  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  -  1,  i,  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int,int)	112	None	replace
197	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  1,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  1,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  *  1,  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	112	None	replace
198	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  i);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  -  1,  i);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	112	None	replace
199	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  numerator  =  getNumerator();  int  deserator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	27	None	add
200	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  Integer  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    Integer  numerator  =  getNumerator();  int  deserator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	27	None	add
201	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  denominator  =  getNumerator();  int  deserator  =  getNumerator();  [CE]  variable  deserator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  denominator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  denominator  =  getNumerator();  int  deserator  =  getNumerator();	  	non-compiled	[CE]  variable  deserator  is  already  defined  in  method  multiply(int)	27	None	add
202	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  deserator  =  getNumerator();  int  deserator  =  getNumerator();  [CE]  variable  deserator  is  already  defined  in  method  multiply(int)  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  deserator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  deserator  =  getNumerator();  int  deserator  =  getNumerator();	  	non-compiled	[CE]  variable  deserator  is  already  defined  in  method  multiply(int)	27	None	add
203	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	3	replace
204	[BUG]  [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	3	replace
205	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	3	replace
206	[BUG]  [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	reason:  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	3	replace
207	[BUG]  [BUGGY]  int  numerator  =  getNumber()  /  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber()  /  1;  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber()  /  1;	  int    numerator    =    getNumber()    +    1;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
208	[BUG]  [BUGGY]  int  numerator  =  getNumber()  *  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber()  *  1;  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber()  *  1;	  int    numerator    =    getNumber()    +    1;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
209	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
210	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
211	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.  [CE]  unclosed  string  literal  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.	  	non-compiled	[CE]  unclosed  string  literal	3	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
213	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
214	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  Il  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	3	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
216	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
218	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
219	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  deserator  =  getDenominator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  deserator  =  getDenominator();	          int    numerator    =    getNumerator();    int    deserator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	28	None	replace
220	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  int  deserator  =  getDenominator();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  int  deserator  =  getDenominator();	          int    numerator    =    getNumerator();    int    deserator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	28	None	replace
221	[BUG]  [BUGGY]  int  numerator  =  getNumber();  int  deserator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber();  int  deserator  =  getDenominator();	          int    numerator    =    getNumerator();    int    deserator    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
222	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  deserator  =  getNumerator();  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  deserator  =  getNumerator();	          int    numerator    =    getNumerator();    int    deserator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	28	None	replace
223	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getDenominator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  den  =  getDenominator();	          int    numerator    =    getNumerator();    int    den    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	131	None	replace
224	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  int  den  =  getDenominator();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  int  den  =  getDenominator();	          int    numerator    =    getNumerator();    int    den    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	131	None	replace
225	[BUG]  [BUGGY]  int  numerator  =  getNumber();  int  den  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber();  int  den  =  getDenominator();	          int    numerator    =    getNumerator();    int    den    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
226	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  numerator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  numerator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  numerator);	  int    numerator    =    getNumerator(numerator,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	66	None	replace
227	[BUG]  [BUGGY]  int  numerator  =  getNumerator(numerator,  i,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(numerator,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(numerator,  i,  denominator);	  int    numerator    =    getNumerator(numerator,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	66	None	replace
228	[BUG]  [BUGGY]  int  numerator  =  getNumerator(numerator,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(numerator,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(numerator,  denominator);	  int    numerator    =    getNumerator(numerator,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	66	None	replace
229	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  number);  [CE]  cannot  find  symbol  number  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  number);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  number);	  int    numerator    =    getNumerator(numerator,    i);    	non-compiled	[CE]  cannot  find  symbol  number	66	None	replace
230	[BUG]  [BUGGY]  allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	103	None	replace
231	[BUG]  [BUGGY]  parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parseNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  aughtInvalidNumerator(i)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	83	None	replace
232	[BUG]  [BUGGY]  variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
233	[BUG]  [BUGGY]  attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	70	None	replace
234	[BUG]  [BUGGY]  variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	variant  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
235	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  denator  =  getDenominator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  denator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  denator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	30	None	replace
236	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  int  denator  =  getDenominator();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  int  denator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  int  denator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	30	None	replace
237	[BUG]  [BUGGY]  int  numerator  =  getNumber();  int  denator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumber();  int  denator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumber();  int  denator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denator    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
238	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  new  Fraction(numerator  *  i,  denominator,  numerator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  new  Fraction(numerator  *  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    new  Fraction(numerator  *  i,  denominator,  numerator);	  	non-compiled	[CE]  unreachable  statement	16	None	add
239	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
240	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
241	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
242	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  fraction);  }  [CE]  cannot  find  symbol  fraction  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  fraction);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  fraction);  }	  	non-compiled	[CE]  cannot  find  symbol  fraction	16	None	add
243	[BUG]  [BUGGY]  int  numerator  =  getDenominator()  -  1;  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator()  -  1;  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator()  -  1;	  int    numerator    =    getNumber()    -    1;    	non-compiled	[CE]  missing  return  statement	14	None	replace
244	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  new  Fraction(numerator  /  2,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  new  Fraction(numerator  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    new  Fraction(numerator  /  2,  denominator);	  	non-compiled	[CE]  unreachable  statement	55	None	add
245	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  unreachable  statement	55	None	add
246	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  Math.abs(numerator  /  2,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  Math.abs(numerator  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  denominator  =  Math.abs(numerator  /  2,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	55	None	add
247	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator(i);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator(i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  denominator  =  getDenominator(i);	  	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	55	None	add
248	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  Math.abs(numerator  /  2,  numerator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]            AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  Math.abs(numerator  /  2,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  denominator  =  Math.abs(numerator  /  2,  numerator);	  	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	55	None	add
249	[BUG]  [BUGGY]  int  numerator  =  Math.max(numerator,  i);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.max(numerator,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.max(numerator,  i);	  int    numerator    =    Math.min(denominator,    i);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	47	None	replace
250	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  i  +  1,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator,  i  +  1,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  i  +  1,  denominator);	  int    numerator    =    Math.min(denominator,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	47	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
252	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  2,  denominator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(i  /  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
254	[BUG]  [BUGGY]  return  new  Fraction(i  /  2,  denominator);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  /  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
255	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  multiplier);  [CE]  cannot  find  symbol  multiplier  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  multiplier);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  2,  multiplier);	  return    new    Fraction(numerator    /    2,    denominator);    	non-compiled	[CE]  cannot  find  symbol  multiplier	56	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  2,  i);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
257	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  i);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  2,  i);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
258	[BUG]  [BUGGY]  attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	attern(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    	non-compiled	[CE]  	4	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  i,  denominator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
260	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  denominator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  *  i,  numerator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
262	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  denominator);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  numerator,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	compilable	  [FE]  AssertionError  	75	3	replace
264	[BUG]  [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	compilable	  [FE]  AssertionError  	75	3	replace
265	[BUG]  [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	non-compiled	[CE]  missing  return  statement	75	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
267	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  >=  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
269	[BUG]  [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  >=  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
270	[BUG]  [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  maxDenominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(denominator,  i,  maxDenominator);	  int    numerator    =    getNumerator(denominator,    i);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	67	None	replace
271	[BUG]  [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  maxIterations);  [CE]  cannot  find  symbol  maxIterations  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  maxIterations);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(denominator,  i,  maxIterations);	  int    numerator    =    getNumerator(denominator,    i);    	non-compiled	[CE]  cannot  find  symbol  maxIterations	67	None	replace
272	[BUG]  [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(denominator,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(denominator,  i,  denominator);	  int    numerator    =    getNumerator(denominator,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	67	None	replace
273	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  *  i,  i);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator  *  i,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  *  i,  i);	  int    numerator    =    Math.min(numerator    -    1,    i);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	23	None	replace
274	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  int  numerator  =  getNumerator();  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  int  numerator  =  getNumerator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator);  int  numerator  =  getNumerator();	  return    new    Fraction(numerator    /    i,    denominator);    int    numerator    =    getNumerator();    	non-compiled	[CE]  unreachable  statement	119	None	replace
275	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  getNumerator();  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  getNumerator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  getNumerator();	  return    new    Fraction(numerator    /    i,    denominator);    int    numerator    =    getNumerator();    	non-compiled	[CE]  unreachable  statement	119	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
277	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	1	replace
279	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	1	replace
280	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
282	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
284	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
285	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  Integer  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  Integer  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  Integer  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    Integer    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	99	None	replace
286	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Integer  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Integer  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    Integer    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	99	None	replace
287	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    Integer    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	99	None	replace
288	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();	          int    numerator    =    getNumerator();    Integer    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	99	None	replace
289	[BUG]  [BUGGY]  this.numerator  =  new  Fraction(numerator  /  i,  denominator);  [CE]  cannot  assign  a  value  to  final  variable  numerator  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  this.numerator  =  new  Fraction(numerator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	this.numerator  =  new  Fraction(numerator  /  i,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  numerator	93	None	replace
290	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxDenominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxDenominator);	  return    new    Fraction(denominator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	123	None	replace
291	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  FOUR_FIFTHS,  i,  maxIterations);	  return    new    Fraction(denominator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	123	None	replace
292	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	  	non-compiled	[CE]  unreachable  statement	33	None	add
293	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(numerator  ==  numeric)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  cannot  find  symbol  numeric  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(numerator  ==  numeric)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    if(numerator  ==  numeric)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  numeric	33	None	add
294	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(numerator  ==  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(numerator  ==  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    if(numerator  ==  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	non-compiled	[CE]  <identifier>  expected	33	None	add
295	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
296	[BUG]  [BUGGY]  new  Fraction(denominator  *  i,  numerator);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  *  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  missing  return  statement	76	None	replace
297	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  maxDenominator);  new  Fraction(denominator  *  i,  numerator);  [CE]  cannot  find  symbol  maxDenominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  maxDenominator);  new  Fraction(denominator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  maxDenominator);  new  Fraction(denominator  *  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	76	None	replace
298	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  maxIterations);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator,  maxIterations);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    denominator,    i);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	10	None	replace
299	[BUG]  [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically()  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  	54	None	replace
300	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator  -  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  missing  return  statement	111	None	replace
301	[BUG]  [BUGGY]  int  numerator  =  Math.abs(i  -  1);  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(i  -  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(i  -  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  missing  return  statement	111	None	replace
302	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  d1,  denominator);  [CE]  cannot  find  symbol  d1  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  d1,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  d1,  denominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  d1	65	None	replace
303	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  n,  denominator);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  n,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  n,  denominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  n	65	None	replace
304	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  denominator,  fraction);  [CE]  cannot  find  symbol  fraction  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  denominator,  fraction);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  denominator,  fraction);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  fraction	65	None	replace
305	[BUG]  [BUGGY]  allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	allowNumerator(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	81	None	replace
306	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator);  (denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
307	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  (denominator  *  i,  denominator);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  (denominator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  denominator);  (denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
308	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  (denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  maxDenominator);  (denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
309	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  maxIterations);  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  maxIterations);  (denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  maxIterations);  (denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
310	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	3	add
311	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	3	add
312	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized	  	non-compiled	[CE]  unclosed  string  literal	53	None	add
313	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
314	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  {  [CE]  [FE]          IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  {	  	non-compiled	[CE]  	53	None	add
315	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	124	None	replace
316	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  desominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  /  i,  desominator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  desominator	124	None	replace
317	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  numerator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  /  i,  numerator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	124	None	replace
318	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    desominator);    }    	non-compiled	[CE]  missing  return  statement	39	None	replace
319	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  desominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    desominator);    }    	non-compiled	[CE]  cannot  find  symbol  desominator	39	None	replace
320	[BUG]  [BUGGY]  float  numerator  =  Math.abs(i);  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  float  numerator  =  Math.abs(i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	float  numerator  =  Math.abs(i);	  int    numerator    =    Math.abs(i);    	non-compiled	[CE]  missing  return  statement	110	None	replace
321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	1	replace
322	[BUG]  [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	1	replace
323	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(numerator  *  i,  denominator);  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(numerator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(numerator  *  i,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  unreachable  statement	71	None	replace
324	[BUG]  [BUGGY]  new  Fraction(numerator  /  i,  denominator,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(numerator  /  i,  denominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(numerator  /  i,  denominator,  maxDenominator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	71	None	replace
325	[BUG]  [BUGGY]  MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	62	None	replace
326	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    int  numerator  =  getNumerator();  int  deserator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
327	[BUG]  [BUGGY]  MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	MutableFormat.multiply(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
328	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  num);  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  num);  (denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  num);  (denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
329	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  *  i,  denominator);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator);  (denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
330	[BUG]  [BUGGY]  final  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  variant  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
331	[BUG]  [BUGGY]  Variator  <  Numerator>  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Variator  <  Numerator>  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Variator  <  Numerator>  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
332	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator  *  i);  [CE]  no  suitable  method  found  for  min(int)  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator  *  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator  *  i);	  int    numerator    =    Math.min(denominator    -    1,    i);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	22	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	compilable	  [FE]  AssertionError  	75	3	replace
334	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	compilable	  [FE]  AssertionError  	75	3	replace
335	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
336	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
337	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
338	[BUG]  [BUGGY]  int  numerator  =  getDenominator(i);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator(i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator(i);	  int    numerator    =    getDenominator();    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	13	None	replace
339	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  i);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  i);	  int    numerator    =    getNumerator(variant,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	115	None	replace
340	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  i.intValue();  [CE]  int  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  i.intValue();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    int  numerator  =  i.intValue();	  	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	add
341	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
342	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  less  than  1 ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  less  than  1 ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  less  than  1 ");  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
343	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  getNumber();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  getNumber();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    int  numerator  =  getNumber();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
344	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  unreachable  statement	76	None	replace
345	[BUG]  [BUGGY]  new  Fraction(denominator  *  i,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  *  i,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  *  i,  maxDenominator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	76	None	replace
346	[BUG]  [BUGGY]  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");	  throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    	non-compiled	[CE]  missing  return  statement	34	None	replace
347	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator(i).multiply(false);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  denominator  =  getDenominator(i).multiply(false);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  denominator  =  getDenominator(i).multiply(false);	  	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	55	None	add
348	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  getNumber();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  getNumber();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  numerator  =  getNumber();	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
349	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  new  Fraction(denominator  /  i,  denominator);  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  new  Fraction(denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator);  new  Fraction(denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    new    Fraction(denominator    /    i,    denominator);    	non-compiled	[CE]  unreachable  statement	35	None	replace
350	[BUG]  [BUGGY]  if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	85	None	replace
351	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getDenominator();  int  den  =  getNumerator();  [CE]  variable  den  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getDenominator();  int  den  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  denominator  =  getDenominator();  int  den  =  getNumerator();	  	non-compiled	[CE]  variable  den  is  already  defined  in  method  multiply(int)	130	None	add
352	[BUG]  [BUGGY]  Desertion  <  Object>  denominator  =  calculateDenominator(i);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Desertion  <  Object>  denominator  =  calculateDenominator(i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Desertion  <  Object>  denominator  =  calculateDenominator(i);	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
353	[BUG]  [BUGGY]  Desertion  <  Object>  denominator  =  getDenominator(i);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Desertion  <  Object>  denominator  =  getDenominator(i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Desertion  <  Object>  denominator  =  getDenominator(i);	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
354	[BUG]  [BUGGY]  Desertion  <  Object>  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Desertion  <  Object>  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Desertion  <  Object>  denominator  =  getDenominator();	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
355	[BUG]  [BUGGY]  Desertion  <  Object>  denominator  =  multiply(i);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Desertion  <  Object>  denominator  =  multiply(i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Desertion  <  Object>  denominator  =  multiply(i);	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
356	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getNumerator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  den  =  getNumerator();	          int    numerator    =    getNumerator();    int    den    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	131	None	replace
357	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getNumber();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  den  =  getNumber();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  den  =  getNumber();	          int    numerator    =    getNumerator();    int    den    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
358	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  /  i,  denominator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator  /  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator  /  i,  denominator);	  int    numerator    =    Math.min(numerator    *    i,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	116	None	replace
359	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator,  fraction);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator,  fraction);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxDenominator,  fraction);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxDenominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	105	None	replace
360	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
361	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
362	[BUG]  [BUGGY]  Numerator  {  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  {	  Numerator    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  not  a  statement	46	None	replace
363	[BUG]  [BUGGY]  if(i  <  =  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  =  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  =  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
364	[BUG]  [BUGGY]  if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  missing  return  statement	63	None	replace
365	[BUG]  [BUGGY]  if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	63	None	replace
366	[BUG]  [BUGGY]  if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]              IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  missing  return  statement	63	None	replace
367	[BUG]  [BUGGY]  if(numerator  ==  i  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  i  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  i  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	129	None	replace
368	[BUG]  [BUGGY]  if(denominator  ==  numerator  ||  i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  numerator  ||  i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  numerator  ||  i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	129	None	replace
369	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  n);  [CE]  cannot  find  symbol  n  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator,  n);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator,  n);	  return    new    Fraction(numerator    /    i,    denominator,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  n	97	None	replace
370	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  maxDenominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  maxDenominator);  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  maxDenominator);  int  denominator  =  getDenominator();	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	125	None	replace
371	[BUG]  [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  denominator,  numerator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  *  FOUR_FIFTHS,  denominator,  numerator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    denominator,    i);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	10	None	replace
372	[BUG]  [BUGGY]  NegativeFunction  <  T>denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  NegativeFunction  <  T>denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	NegativeFunction  <  T>denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ".);    }    	non-compiled	[CE]  	118	None	replace
373	[BUG]  [BUGGY]  NegativeFunction  <  T>denominator  ==  false)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  NegativeFunction  <  T>denominator  ==  false)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	NegativeFunction  <  T>denominator  ==  false)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.   ".);    }    	non-compiled	[CE]  	118	None	replace
374	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  [CE]  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  	  	non-compiled	[CE]  	1	None	add
375	[BUG]  [BUGGY]  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  missing  return  statement	54	None	replace
376	[BUG]  [BUGGY]  if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  missing  return  statement	54	None	replace
377	[BUG]  [BUGGY]  if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  missing  return  statement	103	None	replace
378	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  num);  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  num);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  num);	  return    new    Fraction(denominator    *    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  num	7	None	replace
379	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  maxDenominator,  deserator);  [CE]  cannot  find  symbol  maxDenominator  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  maxDenominator,  deserator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  maxDenominator,  deserator);	  return    new    Fraction(numerator    *    i,    denominator,    deserator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	21	None	replace
380	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  unreachable  statement	5	None	add
381	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
382	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
383	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  for  fraction  ' "  +  i  + "' ");  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  for  fraction  ' "  +  i  + "' ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  for  fraction  ' "  +  i  + "' ");  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
384	[BUG]  [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  0,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  FOUR_FIFTHS,  0,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  *  FOUR_FIFTHS,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	11	None	replace
385	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  MINUS_ONE,  0,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  MINUS_ONE,  0,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  MINUS_ONE,  0,  denominator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    0,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	11	None	replace
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  1,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  1,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    less    than    1:   "    +    Math.pow(10,    i),    denominator);    }    	compilable	  [FE]  AssertionError  	120	3	replace
387	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  1,  denominator);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  1,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  1,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    less    than    1:   "    +    Math.pow(10,    i),    denominator);    }    	compilable	  [FE]  AssertionError  	120	3	replace
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  10,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  /  10,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    less    than    1:   "    +    Math.pow(10,    i),    denominator);    }    	compilable	  [FE]  AssertionError  	120	3	replace
389	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  10,  denominator);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  10,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  10,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    less    than    1:   "    +    Math.pow(10,    i),    denominator);    }    	compilable	  [FE]  AssertionError  	120	3	replace
390	[BUG]  [BUGGY]  if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  missing  return  statement	81	None	replace
391	[BUG]  [BUGGY]  parent  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parent  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parent  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  not  a  statement	81	None	replace
392	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
393	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
394	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  missing  return  statement  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  missing  return  statement	80	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
396	[BUG]  [BUGGY]  if(i  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
397	[BUG]  [BUGGY]  parse(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parse(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parse(i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
398	[BUG]  [BUGGY]  parse(i),  multiplier  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parse(i),  multiplier  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parse(i),  multiplier  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
399	[BUG]  [BUGGY]  matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	41	None	replace
400	[BUG]  [BUGGY]  matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	41	None	replace
401	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  return  new  Fraction(numerator  /  i,  denominator	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  ')'  expected	74	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  2,  denominator,  i);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
403	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  i);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  2,  denominator,  i);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
404	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {  [CE]  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  {  	  	non-compiled	[CE]  	69	None	add
405	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if  [CE]  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if	  	non-compiled	[CE]  	69	None	add
406	[BUG]  [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  >  expected	2	None	replace
407	[BUG]  [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  >  expected	2	None	replace
408	[BUG]  [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	NegativeFunction  <  FOUR_FIFTHS  ||  NegativeFunction  <  FOUR_FIFTHS)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  >  expected	2	None	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(numerator  *  2,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
410	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  2,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  2,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  *  i,  numerator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
412	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  numerator);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  numerator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  numerator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    numerator);    	compilable	  [FE]  AssertionError  	17	3	replace
413	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(numerator,  denominator  +  1);	  int    numerator    =    Math.min(numerator,    i    +    1);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	48	None	replace
414	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  ZERO);  [CE]  no  suitable  constructor  found  for  Fraction(int,Fraction)  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  ZERO);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  ZERO);	  return    new    Fraction(denominator    /    i,    maxDenominator);    	non-compiled	[CE]  no  suitable  constructor  found  for  Fraction(int,Fraction)	61	None	replace
415	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numIterations);  [CE]  cannot  find  symbol  numIterations  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  numIterations);	  return    new    Fraction(denominator    /    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  numIterations	61	None	replace
416	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  i,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  i,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  i,  denominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	65	None	replace
417	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  numerator,  denominator);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  numerator,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  numerator,  denominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	65	None	replace
418	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  denator  =  getNumerator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  denator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  denator  =  getNumerator();	          int    numerator    =    getNumerator();    int    denator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	30	None	replace
419	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator!=  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator!=  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator!=  0)  {  return  null;  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
420	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  if(denominator  ==  0)  {  return  null;  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
421	[BUG]  [BUGGY]  return  new  Fraction(i  /  number,  denominator);  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  number,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  /  number,  denominator);	  return    new    Fraction(number    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	102	None	replace
422	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator  *  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  =  Math.abs(denominator  *  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  =  Math.abs(denominator  *  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	124	None	replace
423	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  denominator  =  getNumerator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  denominator  =  getNumerator();	          int    numerator    =    getNumerator();    int    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	26	None	replace
424	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	26	None	replace
425	[BUG]  [BUGGY]  matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(i  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	32	None	replace
426	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
427	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
428	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
429	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
430	[BUG]  [BUGGY]  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  missing  return  statement	50	None	replace
431	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  int  numerator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getDenominator();  int  numerator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getDenominator();  int  numerator  =  getNumerator();	          int    numerator    =    getNumerator();    int    numerator    =    getNumerator();    	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	24	None	replace
432	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  int  numerator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  int  numerator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  int  numerator  =  getDenominator();	          int    numerator    =    getNumerator();    int    numerator    =    getNumerator();    	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	24	None	replace
433	[BUG]  [BUGGY]  if(i  >  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  >  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  >  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	93	None	replace
434	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator,  numerator);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  numerator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    numerator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
435	[BUG]  [BUGGY]  int  numerator  =  getNumerator(numerator,  denominator,  i);  [CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(numerator,  denominator,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(numerator,  denominator,  i);	  int    numerator    =    getNumerator(numerator,    i);    	non-compiled	[CE]  method  getNumerator  in  class  Fraction  cannot  be  applied  to  given  types;	66	None	replace
436	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  int  denominator  =  getDenominator();  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  unreachable  statement	59	None	add
437	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  int  denominator  =  getDenominator(i);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  int  denominator  =  getDenominator(i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    int  denominator  =  getDenominator(i);	  	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	59	None	add
438	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  in  fraction ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  in  fraction ");  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  not  allowed  in  fraction ");  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
439	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  multiply: "  +  i);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  multiply: "  +  i);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Denominator  cannot  multiply: "  +  i);  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
440	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  i);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  /  i);	  int    numerator    =    Math.abs(numerator    *    i);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	52	None	replace
441	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
442	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  [CE]  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  {  	  	non-compiled	[CE]  	3	None	add
443	[BUG]  [BUGGY]  return  new  Fraction(numerator,  0,  i  *  FOUR_FIFTHS,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  0,  i  *  FOUR_FIFTHS,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  0,  i  *  FOUR_FIFTHS,  denominator);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
444	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  -  1,  i);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  -  1,  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator  -  1,  i);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	112	None	replace
445	[BUG]  [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
446	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  null);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  null);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  null);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	92	None	replace
447	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  null,  denominator);  [CE]  no  suitable  constructor  found  for  Fraction(int,<null>,int)  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  null,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  null,  denominator);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Fraction(int,<null>,int)	92	None	replace
448	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  i  -  1);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator,  i  -  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  i  -  1);	  int    numerator    =    Math.min(denominator,    i);    	non-compiled	[CE]  missing  return  statement	47	None	replace
449	[BUG]  [BUGGY]  Integer  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Integer  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Integer  numerator  =  getDenominator();  Integer  denominator  =  getNumerator();	          int    numerator    =    getNumerator();    Integer    denominator    =    getNumerator();    	non-compiled	[CE]  missing  return  statement	99	None	replace
450	[BUG]  [BUGGY]  if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator!=  null)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	101	None	replace
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
452	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
453	[BUG]  [BUGGY]  return  new  Fraction(number  *  FOUR_FIFTHS,  i,  denominator);  [CE]  cannot  find  symbol  number  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(number  *  FOUR_FIFTHS,  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(number  *  FOUR_FIFTHS,  i,  denominator);	  return    new    Fraction(denominator    *    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	123	None	replace
454	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    IllegalArgumentException( "Numerator  cannot  be  numeric.   ");	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
455	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  Numerator  cannot  be  numeric.   ");  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  Numerator  cannot  be  numeric.   ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    Numerator  cannot  be  numeric.   ");	  	non-compiled	[CE]  	33	None	add
456	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
457	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    numerator);    }    	compilable	  [FE]  AssertionError  	77	3	replace
458	[BUG]  [BUGGY]  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	84	None	replace
459	[BUG]  [BUGGY]  if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  i)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	84	None	replace
460	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  desominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  desominator);	  return    new    Fraction(denominator    /    i,    numerator);    	non-compiled	[CE]  cannot  find  symbol  desominator	6	None	replace
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(denominator  /  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
462	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  denominator,  numerator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  denominator,  numerator);	  return    new    Fraction(numerator    *    i,    denominator,    denominator);    	compilable	  [FE]  AssertionError  	20	3	replace
463	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  upv);  [CE]  cannot  find  symbol  upv  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  upv);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  upv);	  return    new    Fraction(numerator    *    i,    denominator,    tmodd1);    	non-compiled	[CE]  cannot  find  symbol  upv	91	None	replace
464	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  int  maxIterations);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  int  maxIterations);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  int  maxIterations);	  return    new    Fraction(numerator    *    i,    denominator,    tmodd1);    	non-compiled	[CE]  '.class'  expected	91	None	replace
465	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  int  maxDenominator);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  int  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  int  maxDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    tmodd1);    	non-compiled	[CE]  '.class'  expected	91	None	replace
466	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    *    i,    denominator);    if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	59	None	add
467	[BUG]  [BUGGY]  return  new  Fraction(numerator,  i  *  denominator,  null);  [CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  i  *  denominator,  null);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  i  *  denominator,  null);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Fraction(int,int,<null>)	92	None	replace
468	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null,  fraction.denominator);  [CE]  cannot  find  symbol  fraction  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  null,  fraction.denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  null,  fraction.denominator);	  return    new    Fraction(numerator    *    i,    denominator,    null);    	non-compiled	[CE]  cannot  find  symbol  fraction	92	None	replace
469	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  denominator);	  return    new    Fraction(numerator    *    i,    deserator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	109	None	replace
470	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  desominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  /  i,  desominator);	  return    new    Fraction(denominator    /    i,    maxDenominator);    	non-compiled	[CE]  cannot  find  symbol  desominator	61	None	replace
471	[BUG]  [BUGGY]  int  numerator  =  getNumerator(i,  denominator,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(i,  denominator,  maxDenominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(i,  denominator,  maxDenominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	65	None	replace
472	[BUG]  [BUGGY]  int  numerator  =  getNumerator(fraction,  denominator);  [CE]  cannot  find  symbol  fraction  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(fraction,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(fraction,  denominator);	  int    numerator    =    getNumerator(i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  fraction	65	None	replace
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
474	[BUG]  [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
476	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	3	replace
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	1	replace
478	[BUG]  [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  >=  0)  {  return  new  Fraction(numerator  *  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    *    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	96	1	replace
479	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getDenominator();  int  den  =  getDenominator();  [CE]  variable  den  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getDenominator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  denominator  =  getDenominator();  int  den  =  getDenominator();	  	non-compiled	[CE]  variable  den  is  already  defined  in  method  multiply(int)	130	None	add
480	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getNumerator();  int  den  =  getDenominator();  [CE]  variable  den  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  denominator  =  getNumerator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  denominator  =  getNumerator();  int  den  =  getDenominator();	  	non-compiled	[CE]  variable  den  is  already  defined  in  method  multiply(int)	130	None	add
481	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  deserator  =  getDenominator();  int  den  =  getDenominator();  [CE]  variable  den  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  den  =  getNumerator();  int  deserator  =  getDenominator();  int  den  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    den    =    getNumerator();    int  deserator  =  getDenominator();  int  den  =  getDenominator();	  	non-compiled	[CE]  variable  den  is  already  defined  in  method  multiply(int)	130	None	add
482	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i);  return  new  Fraction(denominator  /  i,  numerator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i);  return  new  Fraction(denominator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    int  denominator  =  Math.abs(denominator  /  i);  return  new  Fraction(denominator  /  i,  numerator);	  	non-compiled	[CE]  unreachable  statement	5	None	add
483	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    int  denominator  =  Math.abs(denominator  /  i);	  	non-compiled	[CE]  unreachable  statement	5	None	add
484	[BUG]  [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i,  numerator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  /  i,  numerator);  int  denominator  =  Math.abs(denominator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(denominator    /    i,    numerator);    int  denominator  =  Math.abs(denominator  /  i,  numerator);	  	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	5	None	add
485	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  derenominator);  [CE]  cannot  find  symbol  derenominator  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  derenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  derenominator);	  return    new    Fraction(numerator    *    i,    derenominator);    	non-compiled	[CE]  cannot  find  symbol  derenominator	58	None	replace
486	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
487	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
488	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numeric.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
489	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  fraction,  denominator);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  FOUR_FIFTHS,  fraction,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  FOUR_FIFTHS,  fraction,  denominator);	  return    new    Fraction(numerator    /    FOUR_FIFTHS,    i,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	9	None	replace
490	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(i  /  denominator,  numerator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    null;    }    	compilable	  [FE]  AssertionError  	95	2	replace
491	[BUG]  [BUGGY]  return  new  Fraction(i  /  denominator,  numerator);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  denominator,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  /  denominator,  numerator);	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    null;    }    	compilable	  [FE]  AssertionError  	95	2	replace
492	[BUG]  [BUGGY]  int  numerator  =  getNumerator(variant,  denominator);  [CE]  cannot  find  symbol  variant  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator(variant,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator(variant,  denominator);	  int    numerator    =    getNumerator(variant,    i);    	non-compiled	[CE]  cannot  find  symbol  variant	115	None	replace
493	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator,  denominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  *  denominator,  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	112	None	replace
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(i  /  denominator,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    numericized.   ");    }    	compilable	  [FE]  AssertionError  	89	3	replace
495	[BUG]  [BUGGY]  return  new  Fraction(i  /  denominator,  denominator);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  /  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  /  denominator,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Denominator    cannot    be    numericized.   ");    }    	compilable	  [FE]  AssertionError  	89	3	replace
496	[BUG]  [BUGGY]  if(i  <  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	non-compiled	[CE]  missing  return  statement	75	None	replace
497	[BUG]  [BUGGY]  if(denominator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	non-compiled	[CE]  missing  return  statement	75	None	replace
498	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	non-compiled	[CE]  missing  return  statement	75	None	replace
499	[BUG]  [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                      AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    desnominator);    }    	non-compiled	[CE]  missing  return  statement	75	None	replace
500	[BUG]  [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }	  Numerator    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
502	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
503	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
504	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	compilable	  [FE]  AssertionError  	1	1	add
505	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  /  i);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  /  i);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(denominator  /  i);	  int    numerator    =    Math.abs(numerator    *    i);    	non-compiled	[CE]  missing  return  statement	52	None	replace
506	[BUG]  [BUGGY]  int  numerator  =  Math.max(denominator,  i  +  1);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.max(denominator,  i  +  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.max(denominator,  i  +  1);	  int    numerator    =    Math.min(numerator,    i    +    1);    	non-compiled	[CE]  missing  return  statement	48	None	replace
507	[BUG]  [BUGGY]  if(i  <  denominator)  {  return  new  Fraction(denominator  *  i,  denominator);  }  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  denominator)  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  denominator)  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	72	None	replace
508	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(Numerator  cannot  be  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric.     ");  if(Numerator  cannot  be  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    if(Numerator  cannot  be  numeric.   ")  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  	non-compiled	[CE]  	33	None	add
509	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
510	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    int  numerator  =  Math.min(numerator  *  i,  denominator,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	19	None	add
511	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
512	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  denominator);  if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    *    i,    denominator,    denominator);    if(numerator  ==  0)  {  return  new  Fraction(numerator  *  i,  denominator,  denominator);  }  else  {  return  new  Fraction(numerator  *  i,  denominator,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	19	None	add
513	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ");	  throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    	non-compiled	[CE]  not  a  statement	34	None	replace
514	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getNumerator();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  numerator  =  getNumerator();  int  deserator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	27	None	add
515	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  denominator  =  getDenominator();  int  deserator  =  getDenominator();  [CE]  variable  deserator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  denominator  =  getDenominator();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  denominator  =  getDenominator();  int  deserator  =  getDenominator();	  	non-compiled	[CE]  variable  deserator  is  already  defined  in  method  multiply(int)	27	None	add
516	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getDenominator();  int  deserator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  deserator  =  getNumerator();  int  numerator  =  getDenominator();  int  deserator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    deserator    =    getNumerator();    int  numerator  =  getDenominator();  int  deserator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	27	None	add
517	[BUG]  [BUGGY]  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	84	None	replace
518	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
519	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
520	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
521	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	3	add
522	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	74	None	replace
523	[BUG]  [BUGGY]  if(numerator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  numerator)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	74	None	replace
524	[BUG]  [BUGGY]  if(numerator  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator    ==    numerator)    {    for(int    i    =    0;    i    <    denominator;    i++)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	74	None	replace
525	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  maxDenominator);  [CE]  cannot  find  symbol  maxDenominator  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.min(denominator,  maxDenominator);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.min(denominator,  maxDenominator);	  int    numerator    =    Math.min(denominator,    denominator);    	non-compiled	[CE]  cannot  find  symbol  maxDenominator	126	None	replace
526	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	3	add
527	[BUG]  [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized     ");    }    if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized     ");  }  if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        numerator)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized       ");        }        if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    if(denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }  if(numerator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized   ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	3	add
528	[BUG]  [BUGGY]  new  Fraction(numerator  /  2,  denominator);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(numerator  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(numerator  /  2,  denominator);	  return    new    Fraction(numerator    /    i,    denominator);    new    Fraction(numerator    /    i,    denominator);    	non-compiled	[CE]  missing  return  statement	71	None	replace
529	[BUG]  [BUGGY]  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  if(numerator    ==    denominator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  missing  return  statement	63	None	replace
530	[BUG]  [BUGGY]  return  new  Fraction(number  /  i,  denominator,  maxDenominator);  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(number  /  i,  denominator,  maxDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(number  /  i,  denominator,  maxDenominator);	  return    new    Fraction(number    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	102	None	replace
531	[BUG]  [BUGGY]  return  new  Fraction(n  /  i,  denominator);  [CE]  cannot  find  symbol  n  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(n  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(n  /  i,  denominator);	  return    new    Fraction(number    /    i,    denominator);    	non-compiled	[CE]  cannot  find  symbol  n	102	None	replace
532	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
533	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numericized.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numericized.     ");  }  if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numericized.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    if(denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  	compilable	  [FE]  AssertionError  	69	1	add
534	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    Integer  denominator  =  getNumerator();  Integer  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        Integer    denominator    =    getNumerator();    Integer  numerator  =  getNumerator();  Integer  denominator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	98	None	add
535	[BUG]  [BUGGY]  int  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	32	None	replace
536	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  denominator  =  getDenominator();  int  denator  =  getDenominator();  [CE]  variable  denator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denator  =  getNumerator();  int  denominator  =  getDenominator();  int  denator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denator    =    getNumerator();    int  denominator  =  getDenominator();  int  denator  =  getDenominator();	  	non-compiled	[CE]  variable  denator  is  already  defined  in  method  multiply(int)	29	None	add
537	[BUG]  [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  return  new  Fraction(numerator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    	non-compiled	[CE]  missing  return  statement	93	None	replace
538	[BUG]  [BUGGY]  if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	85	None	replace
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
540	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(numerator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    denominator);    }    	compilable	  [FE]  AssertionError  	79	3	replace
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
542	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
544	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }	  	compilable	  [FE]  AssertionError  	3	1	add
545	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric. ".);  }	  	non-compiled	[CE]  <identifier>  expected	3	None	add
546	[BUG]  [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  {  [CE]  [FE]          AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(     "Numerator    cannot    be    numeric.     ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException(   "Numerator  cannot  be  numeric..   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  {  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                if(numerator        ==        0)        {        throw        new        IllegalArgumentException(       "Numerator        cannot        be        numeric.       ");        }        if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric..   ");    }    if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  if(numerator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.. ");  }  if(numerator  {  	  	non-compiled	[CE]  	3	None	add
547	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  Math.min(numerator  /  2,  denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  Math.min(numerator  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  numerator  =  Math.min(numerator  /  2,  denominator);	  	non-compiled	[CE]  unreachable  statement	55	None	add
548	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  Math.abs(numerator  /  2,  denominator);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  2,  denominator);  int  numerator  =  Math.abs(numerator  /  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    2,    denominator);    int  numerator  =  Math.abs(numerator  /  2,  denominator);	  	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	55	None	add
549	[BUG]  [BUGGY]  matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	43	None	replace
550	[BUG]  [BUGGY]  matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	matically(denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	62	None	replace
551	[BUG]  [BUGGY]  parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parse(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	62	None	replace
552	[BUG]  [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized ");  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized ");	  Numerator    <    N>    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    	non-compiled	[CE]  not  a  statement	45	None	replace
553	[BUG]  [BUGGY]  if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
554	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maximumDenominator);  [CE]  cannot  find  symbol  maximumDenominator  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  i,  denominator,  maximumDenominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  i,  denominator,  maximumDenominator);	  return    new    Fraction(numerator    *    i,    denominator,    den);    	non-compiled	[CE]  cannot  find  symbol  maximumDenominator	18	None	replace
555	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [CE]  cannot  find  symbol  desominator  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  desominator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	non-compiled	[CE]  cannot  find  symbol  desominator	107	None	replace
556	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
557	[BUG]  [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  return  new  Fraction(denominator  *  i,  numerator);  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    return    new    Fraction(denominator    *    i,    desominator);    }    	compilable	  [FE]  AssertionError  	107	3	replace
558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
559	[BUG]  [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  *  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	36	3	replace
560	[BUG]  [BUGGY]  int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	41	None	replace
561	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
562	[BUG]  [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  ==  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
563	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
564	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(denominator  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
566	[BUG]  [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  >=  0)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(numerator    /    i,    denominator);    if(numerator!=    0)    {    if(denominator    ==    0)    {    return    new    Fraction(numerator    /    i,    denominator);    }    else    {    return    new    Fraction(numerator    /    i,    denominator);    }    	compilable	  [FE]  AssertionError  	94	3	replace
567	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
568	[BUG]  [BUGGY]  maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  	54	None	replace
569	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(3)  {  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(3)  {  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(3)  {  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati  senzati	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized       ");    }    	non-compiled	[CE]  ';'  expected	54	None	replace
570	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  Math.abs(numerator  /  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	111	None	replace
571	[BUG]  [BUGGY]  new  Fraction(denominator  /  i,  numerator);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  new  Fraction(denominator  /  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	new  Fraction(denominator  /  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  missing  return  statement	76	None	replace
572	[BUG]  [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(denominator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(denominator  *  i,  denominator);  new  Fraction(denominator  *  i,  numerator);	  return    new    Fraction(denominator    *    i,    numerator);    new    Fraction(denominator    *    i,    numerator);    	non-compiled	[CE]  unreachable  statement	76	None	replace
573	[BUG]  [BUGGY]  final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
574	[BUG]  [BUGGY]  final  int  denominator  {  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  int  denominator  {  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  int  denominator  {  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
575	[BUG]  [BUGGY]  final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  [FE]              IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	final  int  denominator  ==  numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  variant    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  	44	None	replace
576	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
577	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getDenominator();  int  denominator  =  getNumerator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getDenominator();  int  denominator  =  getNumerator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    int  numerator  =  getDenominator();  int  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
578	[BUG]  [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  denominator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  method  multiply(int)  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]          int    numerator    =    getNumerator();    int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  int  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	                int        numerator        =        getNumerator();        int    denominator    =    getNumerator();    int  numerator  =  getNumerator();  int  denominator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  method  multiply(int)	25	None	add
579	[BUG]  [BUGGY]  int  numerator  =  getNumerator();  denominator  =  getDenominator();  [CE]  cannot  assign  a  value  to  final  variable  denominator  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator();  denominator  =  getDenominator();  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator();  denominator  =  getDenominator();	          int    numerator    =    getNumerator();    int    denominator    =    getNumerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  denominator	26	None	replace
580	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	return  new  Fraction(i  *  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
581	[BUG]  [BUGGY]  return  new  Fraction(i  *  2,  denominator);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(i  *  2,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(i  *  2,  denominator);	  return    new    Fraction(numerator    /    2,    denominator);    	compilable	  [FE]  AssertionError  	56	3	replace
582	[BUG]  [BUGGY]  Integer  denominator  =  Math.abs(denominator  /  i,  denominator);  [CE]  no  suitable  method  found  for  abs(int,Integer)  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Integer  denominator  =  Math.abs(denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Integer  denominator  =  Math.abs(denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    int    denominator    =    Math.abs(denominator    /    i,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,Integer)	124	None	replace
583	[BUG]  [BUGGY]  maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	maticallyTrue(numerator  ==  denominator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    numerator)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  	50	None	replace
584	[BUG]  [BUGGY]  int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  denominator  {  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
585	[BUG]  [BUGGY]  parseNumber(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  parseNumber(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	parseNumber(numerator)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numeric.   ");  }	  matically(numerator    {    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  	31	None	replace
586	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  d1,  i);  [CE]  cannot  find  symbol  d1  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  d1,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  d1,  i);	  return    new    Fraction(numerator    *    i,    den);    	non-compiled	[CE]  cannot  find  symbol  d1	57	None	replace
587	[BUG]  [BUGGY]  if(numerator  ==  numerator  &&  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  numerator  &&  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  numerator  &&  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized ");  }	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized   ");    }    	non-compiled	[CE]  missing  return  statement	129	None	replace
588	[BUG]  [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [CE]  variable  i  is  already  defined  in  method  multiply(int)  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  multiply(int)	80	None	replace
589	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [CE]  variable  i  is  already  defined  in  method  multiply(int)  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  multiply(int)	80	None	replace
590	[BUG]  [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(denominator  <  0)  {  return  new  Fraction(denominator  *  i,  numerator);  }  else  {  for(int  i  =  0;  i  <  denominator;  i++)  {  break;  }	  return    new    Fraction(denominator    *    i,    numerator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    *    i,    numerator);    }    else    {    for(int    i    =    0;    i    <    denominator;    i++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
591	[BUG]  [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  0  {  throw  new  IllegalArgumentException( "Denominator  cannot  be  numeric. ");  }	  Numerator    <    0    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numeric.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
592	[BUG]  [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  numerator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  *  FOUR_FIFTHS,  i,  denominator,  maxIterations,  numerator);	  return    new    Fraction(numerator    *    FOUR_FIFTHS,    i,    denominator,    maxIterations);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	106	None	replace
593	[BUG]  [BUGGY]  return  new  Fraction(numerator,  denominator  *  FOUR_FIFTHS,  i);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  denominator  *  FOUR_FIFTHS,  i);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  denominator  *  FOUR_FIFTHS,  i);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
594	[BUG]  [BUGGY]  return  new  Fraction(numerator,  0,  denominator  *  FOUR_FIFTHS,  denominator);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator,  0,  denominator  *  FOUR_FIFTHS,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator,  0,  denominator  *  FOUR_FIFTHS,  denominator);	  return    new    Fraction(numerator,    i    *    FOUR_FIFTHS,    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
595	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	add	if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    desominator);    }    	compilable	  [FE]  AssertionError  	39	3	replace
596	[BUG]  [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  ==  denominator)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    desominator);    }    	compilable	  [FE]  AssertionError  	39	3	replace
597	[BUG]  [BUGGY]  if(i  <  num)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [CE]  cannot  find  symbol  num  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  num)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  num)  {  return  new  Fraction(denominator  /  i,  denominator);  }  else  {  return  new  Fraction(denominator  /  i,  denominator);  }	  return    new    Fraction(denominator    /    i,    denominator);    if(denominator    ==    0)    {    return    new    Fraction(denominator    /    i,    denominator);    }    else    {    return    new    Fraction(denominator    /    i,    desominator);    }    	non-compiled	[CE]  cannot  find  symbol  num	39	None	replace
598	[BUG]  [BUGGY]  if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(numerator  ==  null  ||  denominator  ==  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ");  }	  if(numerator    ==    null)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	101	None	replace
599	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
600	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.. ");  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
601	[BUG]  [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ".);  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ".);  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	hingeger  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized. ".);  }	          if(numerator    ==    0)    {    throw    new    IllegalArgumentException(       "Numerator    cannot    be    numericized.       ");    }    if(numerator    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
602	[BUG]  [BUGGY]  (denominator  /  i),  denominator);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  (denominator  /  i),  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	(denominator  /  i),  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  not  a  statement	38	None	replace
603	[BUG]  [BUGGY]  (denominator  /  i,  denominator);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  (denominator  /  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	(denominator  /  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
604	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  %  i,  denominator);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  denominator);  (denominator  %  i,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return  new  Fraction(numerator  /  i,  denominator);  (denominator  %  i,  denominator);	  return    new    Fraction(denominator    /    i,    denominator);    (denominator    /    i,    denominator);    	non-compiled	[CE]  ')'  expected	38	None	replace
605	[BUG]  [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	Numerator  <  N>  throw  new  IllegalArgumentException( "Denominator  cannot  be  numericized. ");	  Numerator    <    N>    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.   ");    	non-compiled	[CE]  not  a  statement	64	None	replace
606	[BUG]  [BUGGY]  if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	if(i  <  =  0)  {  throw  new  IllegalArgumentException( "Numerator  cannot  be  numericized.   ");  }	  if(i    ==    0)    {    throw    new    IllegalArgumentException(   "Numerator    cannot    be    numericized.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
607	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
608	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  else  {  return  new  Fraction(denominator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
609	[BUG]  [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  return  new  Fraction(numerator  /  i,  numerator);  if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	return    new    Fraction(numerator    /    i,    numerator);    if(numerator!=  0)  {  return  new  Fraction(numerator  /  i,  numerator);  }	  	non-compiled	[CE]  unreachable  statement	127	None	add
610	[BUG]  [BUGGY]  int  numerator  =  getNumerator()  -  1;  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Fraction  multiply(final  int  i)  {      [BUGGY]  int  numerator  =  getNumerator()  -  1;  [BUGGY]      return  new  Fraction(numerator  *  i,  denominator);  }  [CLASS]  Fraction  [METHOD]  multiply  [RETURN_TYPE]  Fraction  final  int  i  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  fraction  object  ret  rhs  boolean  long  a0  a1  dOn  nOd  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  d  d1  d2  den  denominator  i  maxDenominator  maxIterations  n  num  numerator  tmodd1  upv  uvp  	projects/Math27/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.5773502691896258	555	555	1	replace	int  numerator  =  getNumerator()  -  1;	  int    numerator    =    getNumber()    -    1;    	non-compiled	[CE]  missing  return  statement	14	None	replace
