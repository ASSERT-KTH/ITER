projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(rightChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=rightChild.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(rightChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=var.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(rightChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(leftChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=assign.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,null)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftJsType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=rightChild.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=assign.getLastChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=var.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=rightChild.getLastChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=lvalue.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=leftChild.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=rightChild.getLastChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=lvalue.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=rightChild.getNext();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=assign.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=leftType.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(rightChild.getLastChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(lvalue.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild.getLastChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild.getLastChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")&&rightType.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")&&rightType.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")&&validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,rightType,null)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild,lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild,leftType);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=var.getLastChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=leftChild.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(lvalue.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(rightChild.getNext());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild,rightType);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!valator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!valator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(rightChild,lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(rvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(rightChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(assign);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,rightJsType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941Noderight=object.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,"assignment")&&var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(lvalue,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(lastChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,null)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=object.getFirstChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||var.isTypeInferred()){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||!validator.expectCanAssignTo(t,assign,rightType,null)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(leftChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(assign.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild,var.type);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(leftChild,var.getType());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(leftChild,rvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,leftType,"assignment")&&validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,"assignment")&&validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")||validator.expectCanAssignTo(t,assign,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=object.getLastChild();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(rightChild-1);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=getJSType(leftChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(leftType!=null&&!validator.expectCanAssignTo(t,assign,rightType,leftType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(rightType!=null&&!validator.expectCanAssignTo(t,assign,leftType,rightType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(lvalue,rightChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(lvalue,rightChild.getFirstChild());
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTypeleftType=getJSType(lvalue,rightChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(lvalue,rightChild);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(valator.expectCanAssignTo(t,assign,rightType,leftJsType,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(!validator.expectCanAssignTo(t,assign,rightType,leftChild,"assignment")){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=var.getNext();
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=var.getJSType(lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941NoderightType=findJSType(lvalue);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941JSTyperightType=getJSType(assign);
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(rightType!=null&&!validator.expectCanAssignTo(t,assign,rightType,leftType,null)){
projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java941if(validator.expectCanAssignTo(t,assign,leftType,leftType,"assignment")||var.isTypeInferred()){
