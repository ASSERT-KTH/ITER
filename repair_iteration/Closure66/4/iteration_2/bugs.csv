bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,  rightChild);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
2	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,   "assignment ");  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,   "assignment ");  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,   "assignment ");	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
3	[BUG]  [BUGGY]  EnsureTyped(t,  assign,  rightType);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  EnsureTyped(t,  assign,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	EnsureTyped(t,  assign,  rightType);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
4	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,  lvalue);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,  lvalue);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
5	[BUG]  [BUGGY]  assureTyped(t,  assign,  rightType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  rightType);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
6	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,  rvalue);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,  rvalue);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
7	[BUG]  [BUGGY]  approveAssignment(t,  assign,  rightType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  rightType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
8	[BUG]  [BUGGY]  approveAssignment(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  leftType,  rightChild);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
9	[BUG]  [BUGGY]  approveAssignment(t,  assign,  leftType,   "assignment ");  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  leftType,   "assignment ");  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  leftType,   "assignment ");	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
10	[BUG]  [BUGGY]  validateTyped(t,  assign,  leftType);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  validateTyped(t,  assign,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	validateTyped(t,  assign,  leftType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
11	[BUG]  [BUGGY]  approveAssignment(t,  assign,  leftType,  lvalue);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  leftType,  lvalue);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
12	[BUG]  [BUGGY]  approveAssignment(t,  assign,  leftType,  rvalue);  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  leftType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  leftType,  rvalue);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
13	[BUG]  [BUGGY]  approveAssignment(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  leftType,  rightType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
14	[BUG]  [BUGGY]  assureTyped(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  leftType,  rightChild);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
15	[BUG]  [BUGGY]  assureTyped(t,  assign,  leftType,   "assignment ");  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  leftType,   "assignment ");  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  leftType,   "assignment ");	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
16	[BUG]  [BUGGY]  assureTyped(t,  assign,  leftType,  lvalue);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  leftType,  lvalue);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
17	[BUG]  [BUGGY]  assureTyped(t,  assign,  leftType,  rvalue);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  leftType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  leftType,  rvalue);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
18	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightChild);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightChild);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
19	[BUG]  [BUGGY]  ensureTyped(t,  assign,  lvalue,  leftType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  lvalue,  leftType);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
20	[BUG]  [BUGGY]  approveTyped(t,  assign,  rightType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  rightType);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
21	[BUG]  [BUGGY]  ensureTyped(t,  lvalue,  rightType,  leftType);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  lvalue,  rightType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  lvalue,  rightType,  leftType);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
22	[BUG]  [BUGGY]  ensureTyped(t,  lvalue,  leftType);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  lvalue,  leftType);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
23	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,  rightType);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
24	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,   "assignment ");  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,   "assignment ");  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,   "assignment ");	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
25	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  lvalue);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,  lvalue);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
26	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  false);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  false);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,  false);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
27	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  null);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  null);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,  null);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
28	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  jsType);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  jsType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  jsType);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
29	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,  rightChild);	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
30	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,   "assignment ");  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,   "assignment ");  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,   "assignment ");	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
31	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,  lvalue);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,  lvalue);	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
32	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,  rvalue);  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,  rvalue);	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
33	[BUG]  [BUGGY]  validateTyped(t,  assign,  rightType);  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  validateTyped(t,  assign,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	validateTyped(t,  assign,  rightType);	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
34	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  rightType,  leftType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  rightType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  rightType,  leftType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
35	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  rightChild);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
36	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  rightType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightJsType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightJsType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  rightJsType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
38	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  jsType,  leftType);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  jsType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  jsType,  leftType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
39	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  jsType);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  jsType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  jsType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
40	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightJSType);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  rightJSType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  rightJSType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
41	[BUG]  [BUGGY]  approveAssignment(t,  assign);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign);	  ensureTyped(t,    assign);    	non-compiled	[CE]  orphaned  case	9	None	replace
42	[BUG]  [BUGGY]  ensureTyped(t,  assign.getJSType());  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign.getJSType());  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign.getJSType());	  ensureTyped(t,    assign);    	non-compiled	[CE]  orphaned  case	9	None	replace
43	[BUG]  [BUGGY]  ensureTyped(t,  rightChild);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  rightChild);	  ensureTyped(t,    assign);    	non-compiled	[CE]  orphaned  case	9	None	replace
44	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
45	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(t,  assign,  rightType,   "assignment   "))  {  ensureTyped(t,  assign);  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
46	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
47	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(t,  assign,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
48	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType))  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType))  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(t,  assign,  rightType,  leftType))  {  ensureTyped(t,  assign);  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
49	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  assign,  leftType,  this);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  assign,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  assign,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
50	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  assign,  rightType,  this);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  assign,  rightType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  assign,  rightType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
51	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  rightChild,  leftType,  this);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  rightChild,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  rightChild,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
52	[BUG]  [BUGGY]  Traversal.traverse(compiler,  assign,  leftType,  this);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Traversal.traverse(compiler,  assign,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Traversal.traverse(compiler,  assign,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
53	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  assignment,  leftType,  this);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  assignment,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  assignment,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
54	[BUG]  [BUGGY]  Context.traverse(compiler,  assign,  leftType,  this);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Context.traverse(compiler,  assign,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Context.traverse(compiler,  assign,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
55	[BUG]  [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.ASSIGN);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.ASSIGN);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkState(assign.getType()  ==  Token.ASSIGN);	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
56	[BUG]  [BUGGY]  EnsureTyped(t,  assign,  leftType,  rightChild);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  EnsureTyped(t,  assign,  leftType,  rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	EnsureTyped(t,  assign,  leftType,  rightChild);	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
57	[BUG]  [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkState(assign.getType()  ==  Token.EXPR_RESULT);	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(rightChild);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkNotNull(rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkNotNull(rightChild);	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
59	[BUG]  [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkState(assign.getType()  ==  Token.NAME);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkState(assign.getType()  ==  Token.NAME);	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
60	[BUG]  [BUGGY]  AssertionFailedError.show(t,  lvalue,  leftType,  leftType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  lvalue,  leftType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  lvalue,  leftType,  leftType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
61	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  lvalue,  leftType);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  lvalue,  leftType);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
62	[BUG]  [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  lvalue);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  assign,  leftType,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  assign,  leftType,  lvalue);	  AssertionFailedError.show(t,    assign,    leftType,    leftType);    	non-compiled	[CE]  orphaned  case	12	None	replace
63	[BUG]  [BUGGY]  ensureTyped(t,  assign,  leftType,  objectJsType);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  leftType,  objectJsType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  leftType,  objectJsType);	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
64	[BUG]  [BUGGY]  assureTyped(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  assign,  leftType,  rightType);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
65	[BUG]  [BUGGY]  assureTyped(t,  rightChild,  leftType);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  rightChild,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  rightChild,  leftType);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
66	[BUG]  [BUGGY]  assureTyped(t,  lvalue,  leftType);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  assureTyped(t,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	assureTyped(t,  lvalue,  leftType);	  assureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	6	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));	      	non-compiled	[CE]  orphaned  case	8	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));	      	non-compiled	[CE]  orphaned  case	8	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "));  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "));	      	non-compiled	[CE]  orphaned  case	8	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {	      	non-compiled	[CE]  orphaned  case	8	None	replace
71	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,  rightType);	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
72	[BUG]  [BUGGY]  approveAssignment(t,  lvalue,  leftType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  lvalue,  leftType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
73	[BUG]  [BUGGY]  approveAssignment(t,  rightChild,  leftType);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  rightChild,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  rightChild,  leftType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
74	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  rightChild,  this);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  rightChild,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  t,  rightChild,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
75	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  rightType,  this);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  rightType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  t,  rightType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
76	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  object,  leftType,  this);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  object,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  object,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
77	[BUG]  [BUGGY]  ensureTyped(t,  lvalue);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  lvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  lvalue);	  ensureTyped(t,    assign);    	non-compiled	[CE]  orphaned  case	9	None	replace
78	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rvalue);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rvalue);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
79	[BUG]  [BUGGY]  ensureTyped(t,  assign,  lvalue,  rightType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  lvalue,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  lvalue,  rightType);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
80	[BUG]  [BUGGY]  EnsureTyped(t,  assign,  leftType,  rightType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  EnsureTyped(t,  assign,  leftType,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	EnsureTyped(t,  assign,  leftType,  rightType);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
81	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  rvalue);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  rvalue);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
82	[BUG]  [BUGGY]  ensureTyped(t,  rvalue,  rightType);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  rvalue,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  rvalue,  rightType);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
83	[BUG]  [BUGGY]  ensureTyped(t,  rightChild,  rightType);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  rightChild,  rightType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  rightChild,  rightType);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType));  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	Preconditions.checkState(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType));	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
85	[BUG]  [BUGGY]  AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "));	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
86	[BUG]  [BUGGY]  AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.checkState(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "));	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
87	[BUG]  [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
88	[BUG]  [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  return;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  return;  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  return;  }	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
89	[BUG]  [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
90	[BUG]  [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  throw  new  IllegalStateException( " ");  }	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
91	[BUG]  [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  Preconditions.checkState(false, "Unknown  type ");  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  Preconditions.checkState(false, "Unknown  type ");  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(leftType!=  null)  {  ensureTyped(t,  assign,  leftType);  }  else  {  Preconditions.checkState(false, "Unknown  type ");  }	  ensureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	1	None	replace
92	[BUG]  [BUGGY]  approveAssignment(t,  assign,  rightType,  leftType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveAssignment(t,  assign,  rightType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveAssignment(t,  assign,  rightType,  leftType);	  approveAssignment(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	5	None	replace
93	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,   "assignment   "));  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,   "assignment   "));	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
94	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  objectJsType);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  objectJsType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,  objectJsType);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
95	[BUG]  [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  rvalue);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  ensureTyped(t,  assign,  rightType,  leftType,  rvalue);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	ensureTyped(t,  assign,  rightType,  leftType,  rvalue);	  ensureTyped(t,    assign,    rightType,    leftType);    	non-compiled	[CE]  orphaned  case	2	None	replace
96	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  JSType  rightType  =  getJSType(rightChild);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	JSType  rightType  =  getJSType(rightChild);	  ensureTyped(t,    lvalue,    rightType);    	non-compiled	[CE]  orphaned  case	10	None	replace
97	[BUG]  [BUGGY]  approveTyped(t,  assign,  leftType,   "assignment   "));  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  approveTyped(t,  assign,  leftType,   "assignment   "));  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	approveTyped(t,  assign,  leftType,   "assignment   "));	  approveTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	7	None	replace
98	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  assign,  leftType,  this);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  assign,  leftType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  t,  assign,  leftType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
99	[BUG]  [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  assign,  rightType,  this);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssignmentTraversal.traverse(compiler,  t,  assign,  rightType,  this);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssignmentTraversal.traverse(compiler,  t,  assign,  rightType,  this);	  AssignmentTraversal.traverse(compiler,    t,    leftType,    this);    	non-compiled	[CE]  orphaned  case	11	None	replace
100	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
101	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
102	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
103	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  else  {  ensureTyped(t,  assign);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
104	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  leftType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
105	[BUG]  [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(validator.expectCanAssignTo(  t,  assign,  rightType,   "assignment   "))  {  EnsureTyped(t,  assign,  leftType);  }	  EnsureTyped(t,    assign,    leftType);    	non-compiled	[CE]  orphaned  case	3	None	replace
106	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  else  {  return;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  else  {  return;  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  ensureTyped(t,  assign);  }  else  {  return;  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
107	[BUG]  [BUGGY]  if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	if(!validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment   "))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  orphaned  case	8	None	replace
108	[BUG]  [BUGGY]  AssertionFailedError.showMessage(t,  rightChild,  leftType,  leftType);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.showMessage(t,  rightChild,  leftType,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.showMessage(t,  rightChild,  leftType,  leftType);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
109	[BUG]  [BUGGY]  AssertionFailedError.show(t,  lvalue,  leftType);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  JSType  rightType  =  getJSType(rightChild);  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,     "assignment   "))  {    [BUGGY]  AssertionFailedError.show(t,  lvalue,  leftType);  [BUGGY]    }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.254000254000381	943	943	2	replace	AssertionFailedError.show(t,  lvalue,  leftType);	  ensureTyped(t,    assign,    lvalue);    	non-compiled	[CE]  orphaned  case	4	None	replace
