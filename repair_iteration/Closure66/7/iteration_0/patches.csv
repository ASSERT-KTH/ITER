bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(lvalue);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(lvalue);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(lvalue);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
2	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  leftType);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  leftType);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rightChild,  leftType);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
3	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  lvalue);  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  lvalue);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rightChild,  lvalue);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
4	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]    [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	  	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
5	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(leftChild);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(leftChild);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(leftChild);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
6	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  rvalue);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rightChild,  rvalue);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rightChild,  rvalue);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
7	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild.getFirstChild());  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rightChild.getFirstChild());  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rightChild.getFirstChild());	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
8	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rightChild.getLastChild());  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rightChild.getLastChild());  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rightChild.getLastChild());	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
9	[BUG]  [BUGGY]  JSType  rightType  =  getJSType(rvalue);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  if  (var  !=  null)  {  if  (var.isTypeInferred())  {  return;  }  }  }  JSType  leftType  =  getJSType(lvalue);  Node  rightChild  =  assign.getLastChild();  [BUGGY]  JSType  rightType  =  getJSType(rvalue);  [BUGGY]  if  (validator.expectCanAssignTo(  t,  assign,  rightType,  leftType,   "assignment "))  {  ensureTyped(t,  assign,  rightType);  }  else  {  ensureTyped(t,  assign);  }  }  [CLASS]  TypeCheck  [METHOD]  visitAssign  [RETURN_TYPE]  void  NodeTraversal  t  Node  assign  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  jsType  leftType  objectJsType  rightType  rvalueType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Var  var  Node  assign  lvalue  object  object2  rightChild  rvalue  FunctionType  functionType  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  property  property2  JSDocInfo  info  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  ObjectType  type  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure66/src/com/google/javascript/jscomp/TypeCheck.java	0.21320071635561041	940	940	2	replace	JSType  rightType  =  getJSType(rvalue);	JSType  rightType  =  getJSType(rightChild);  	non-compiled	[CE]  orphaned  case	13	None	replace
